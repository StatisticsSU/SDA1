[
  {
    "objectID": "datorlab/lab1/DatorLab1.html#introduktion",
    "href": "datorlab/lab1/DatorLab1.html#introduktion",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "Introduktion",
    "text": "Introduktion\n\nI den här första datorlabben kommer ni bekanta er med programmeringsspråket R och dess arbetsmiljö RStudio.\n\n\n\n\n\n\n\nTa det lugnt\n\n\n\n\nDet är många nya saker som presenteras i den här datorlaborationen, så var beredd på att inte allt kommer att sjunka in direkt. Försök att ta dig igenom hela texten, och övningarna. Du kan sen återkomma till denna labb på andra datorlaborationer för att repetera de delar du behöver. Ok, ta ett djupt andetag så börjar vi.\n\n\n\n\n\n\n\n\n\nInstruktioner\n\n\n\n💪 Avsnitt med den här symbolen är uppgifter där ni ska göra något.\n\n\n\n\n\n\n\n\nJobba med R på egen dator\n\n\n\nOm du inte sitter i en datorsal på Campus måste du först installera R och sen RStudio. Se videon installera R och Rstudio för instruktioner.\n\n\nFör att starta RStudio letar du bara upp programmet på din dator och klickar på startikonen. När RStudio startas upp kommer det att se ut så här (kan se olika ut på olika datorer):\n\nDe olika delarna av RStudio kallas ofta för Panes. Vi kommer gå igenom dessa delar vartefter, men vi börjar med att utforska Console, även kallad terminalen."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#använda-r-som-en-miniräknare",
    "href": "datorlab/lab1/DatorLab1.html#använda-r-som-en-miniräknare",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "1. Använda R som en miniräknare",
    "text": "1. Använda R som en miniräknare\nEtt bra sätt för att vänja sig vid R är att använda R som en slags miniräknare. I fönstret Console i RStudio (vanligtvis nere till vänster) kan man skriva olika typer av kommandon som skickas till R för beräkning:\n\n\n\n\n\nTecknet > kallas för kommandoprompt (eller bara prompt) och är R’s sätt att tala om att det väntar på att ett nytt kommando ska skrivas in (vid det blinkande strecket). Vi säger att vi ‘skriver in något på prompten’.\n\n\n\n\n\n\nMultiplikation och division\n\n\n\nR använder * för multiplikation och / för division. Potenser (upphöjt till) skrivs med tecknet ^, så 3^2 är 9. Du skriver tecknet ^ genom att trycka Shift + tangent till vänster om Enter. Sen måste du trycka Mellanslag/Space innan du skriver exponenten, annars blir det 3² och det fungerar inte i R.\n\n\n\n💪 Uppgift 1.1\nProva att skriva 2+2 efter det nedersta > tecknet i Console och sedan trycka på Enter-tangenten. R bör svara (returnera) med talet 4.\n\n\n💪 Uppgift 1.2\nBeräkna 3² (3 upphöjt i 2) i Console. [läs informationsrutan ovanför!]\n\n\n💪 Uppgift 1.3\nSkriv in talet (2+3)/(2+5) i Console och se att R svarar med 0.7142857.\n\n\n💪 Uppgift 1.4\nDu köper aktier för 100 kr. Avkastningen första året är 10%. Använd R för att beräkna värdet på ditt aktiekapital efter ditt första år som aktiesparare, dvs skriv in 100*1.1 och se R returnera 110."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#använda-variabler-i-r",
    "href": "datorlab/lab1/DatorLab1.html#använda-variabler-i-r",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "2. Använda variabler i R",
    "text": "2. Använda variabler i R\nDu är nu inne på ditt andra år som aktiesparare. Avkastningen år 2 är 6%. Hur mycket aktiekapital har du efter år 2? Vi kan beräkna detta genom 100*1.1*1.06 i Console och få svaret 116.6 kr. Men finns det något sätt att återanvända vår tidigare beräkning 100*1.1 = 110 kr så vi bara behöver multiplicera detta tal med ökningen 1.06 för år 2?\nVi kan lösa detta genom att spara undan vår första beräkning i en variabel. Vi kan ge denna variabel (nästan) vilket namn vi vill. Jag kommer kalla den för kapital och börjar med att sätta värdet på variabeln kapital till 100, det ursprungliga kapitalet. Vi skriver kapital = 100 i Console. Vi kan sen testa att R nu faktiskt minns att kapitalet är 100 genom att bara skriva variabelns namn följt av Enter i kommandoprompten i Console:\n\n\n\n\n\nR skriver snällt ut det värde (100) som jag tilldelade variabeln kapital.\n\n\n\n\n\n\nSpråkbruk\n\n\n\nvi säger att vi tilldelar variabel kapital värdet 100. Lite mer slarvigt säger vi: ‘vi sätter kapital till 100’.\n\n\n\n\n\n\n\n\nSe upp!\n\n\n\nVi kan återkalla värdet 100 från variabeln kapital när som helst. Men om du stänger ner RStudio och sen startar om programmet (eller om RStudio låser sig) så minns inte R längre värdet på kapital . R minns faktiskt inte ens att det fanns något som hette kapital och kommer att klaga om du skriver kapital på prompten följt av Enter. R och RStudio minns bara variabeln inom en session, dvs tills du avslutar RStudio. Om man vill spara data mellan olika sessioner måste man spara ner variablerna på datorns disk (eller på någon lagring på internet). Mer om detta senare.\n\n\n\n\n\n\n\n\nLearn the rules so you know how to break them\n\n\n\nIstället för att skriva kapital = 100 så kan vi lika gärna skriva kapital <- 100 , där symbolen <- skrivs med de två tecknen < (mindre än) som finns långt ner till vänster på tangentbordet och - (bindestreck). Att skriva variabeltilldelningar med <- är egentligen den rekommenderade varianten i R, men jag tycker det är fult och föredrar =. 🤷\n\n\nVi kan nu beräkna kapitalet år 1 genom att multiplicera variabeln kapital med talet 1.1\n\n\n\n\n\nVi kan också skriva över värdet i variabeln kapital med ett nytt värde. Vi kanske vill att kapital alltid ska innehålla värdet på det aktiekapital som jag har just nu. Låt oss först ändra värdet på kapital till värdet efter år 1:\n\n\n\n\n\nNotera speciellt raden kapital = kapital*1.1. R läser detta som:\n\nJag (R) ska plocka fram värdet 100 ur variabeln kapital. Sen ska jag multiplicera det med 1.1 för att få talet 110. Det talet 110 stoppar jag sen tillbaka i variabeln kapital.\n\nVärdet på variabeln kapital är nu alltså 110.\nDet fina med det här att vi nu kan fortsätta att ändra variabeln kapital efter att ett ytterligare år har gått, dvs värdet på ditt aktiekapital efter år 2:\n\n\n\n\n\nVariabeln kapital är nu 116.6 och du är redo för din kommande avkastning under år 3.\n\n💪 Uppgift 2.1\nAvkastningen år 3 blev tyvärr minus 4%. Uppdatera variabeln kapital ovan så att den visar att värdet på kapitalet efter år 3 är 111.936 kr. Notera att en minskning med 4% innebär att vi måste multiplicera med 0.96 (1-0.04). Multiplikation med tal mindre än 1 leder till en minskning av kapitalet."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#organisera-dig-med-filmappar",
    "href": "datorlab/lab1/DatorLab1.html#organisera-dig-med-filmappar",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "3. Organisera dig med filmappar",
    "text": "3. Organisera dig med filmappar\nDet är viktigt att ha ordning på sina filer på datorn och kunna tala om för R var dina filer finns så R kan läsa dem. Vi rekommenderar att du skapar en mapp/folder för varje kurs du läser. Spara inte alla filer på datorns skrivbord eller i mappen Downloads eller liknande. Gå till filhanteringsprogrammet på din dator och skapa mappen SDA1. Så här:\n\n Windows: Starta programmet File Explorer och navigera (klicka) till den mapp där du vill skapa din kursmapp. Skapa en ny mapp med namnet SDA1.\nMac: Starta programmet Finder och navigera (klicka) till den mapp där du vill skapa din kursmapp. Skapa en ny mapp med namnet SDA1.\n Linux: Starta programmet Nautilus (om du använder Ubuntu, annars kan du prova att söka på ordet files om din Linux-distribution använder en annan filhanterare). Navigera (klicka) till den mapp där du vill skapa din kursmapp. Skapa en ny mapp med namnet SDA1.\n\n\n\n\n\n\n\nSvenska är fint, men inte i filnamn\n\n\n\nInga åäö!\nAnvänd inte åäö i namn på filmappar eller filer.\nStor risk att du får problem då.\n\n\n\n\n\n\n\n\nDina filer kommer försvinna\n\n\n\nOm du skapar en mapp på en dator i datorsalen så kommer den tyvärr inte att finnas kvar nästa gång du loggar in på annan dator, eller kanske inte ens på samma dator. Vi har förslagit till IT-avdelningen på SU att ordna studentkonton på datorerna med individuella lagringsutrymmen som automatiskt dyker upp som en mapp när ni loggar in i datorsalarna. Men i dagsläget finns tyvärr inte detta så man får själv spara ner sina filer på nätet (t ex med en tjänst som Dropbox eller OneDrive). Som student vid SU har man tillgång till 1TB lagring i OneDrive, se denna sida för mer info om hur man aktiverar detta. Ett annat sätt är att alltid bära med sig ett USB-minne och skapa SDA1 mappen på den.\n\n\n\n💪 Uppgift 3.1\nSkapa mappen SDA1 på din dator."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#använda-editorn-source-för-att-spara-kod",
    "href": "datorlab/lab1/DatorLab1.html#använda-editorn-source-för-att-spara-kod",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "4. Använda Editorn (Source) för att spara kod",
    "text": "4. Använda Editorn (Source) för att spara kod\nSkriva kommandon direkt i Console har en nackdel: R minns inte kommandona vi har skrivit i en tidigare Session (innan vi stängde ner RStudio). Varje gång vi startar upp RStudio måste vi skriva om våra kommandon om vi vill fortsätta våra beräkningar där vi slutade senast. 😤 (Det är inte riktigt sant, fliken History i övre högra delen av RStudio minns faktiskt gamla kommandon, men det är opraktiskt att förlita sig på History).\nVi skulle vilja skriva alla våra kommandon i en textfil som vi kan spara på datorns hårddisk (i din fina SDA1 mapp!) och sen bara köra om alla kommandon in en senare Session. Source Editorn in övre vänstra delen av RStudio används för just detta.\nOm vi klickar på menyn File och sen under menyn New File och slutligen på R Script så öppnas en tom textfil i Editorn som heter Untitled1 eller något liknande. Här kan vi skriva in kommandon som vi vill spara för framtida sessioner. Vi kan t ex skriva in våra beräkningar av aktiesparandet:\n\nVi kan spara filen genom att klicka på menyn File och sen på Save och sen navigera dig till mappen SDA1 genom att klicka i rutan som kommer upp. Döp filen till stock eller något annat namn som talar om vad filen innehåller (aktie heter stock på engelska). Klicka på Save/Spara. Filen kommer automatiskt att få filändelsen .R, dvs filen kommer alltså heta stock.R så RStudio vet att det är en fil men R kommandon. Ett samling kommandon kallas också för kod och vi säger att vi arbetar med en kodfil i editorn. Vi kan också säga att vi har skrivit ett program.\nVi kan köra alla kommandon i filen stock.R genom att klicka på Source - knappen uppe i högra hörnet av editorn:\n\n\n\n\n\nNär säger att vi ‘kör kommandon’ menar vi att datorn utför (exekverar) våra kommandon, rad för rad. Man kan se det som Source-knappen skickar kommandona till Console så vi slipper skriva in dem där. Vi kan nu skriva kapital i Console för att se svaret 111.936.\nNär man arbetar med koden vill man ofta köra ett kommando i taget, och inte alla på en gång. Det kan man göra genom att placera markören (det blinkande strecket) på den rad som vill köra (exekvera) och sen klicka på Run-knappen i uppe i högre hörnet av editorn. Du behöver inte markera koden på raden, det räcker att bara placera markören någonstans på raden. Kortkommandot Ctrl + Enter gör samma sak.\nOfta ställer man markören på den första raden i koden och klickar på Run-knappen om och om igen för att köra varje rad, en efter en. Allt som körs, t ex olika variabler som kapital, finns tillgängligt i Console, om man t ex vill undersöka om variabeln verkligen har fått det värde som det var meningen att det skulle få.\nMan kan också köra flera rader kod på en gång genom att markera raderna och trycka på Run-knappen.\n\n💪 Uppgift 4.1\nKör hela filen stock.R genom att använda Source-knappen. Undersök vilket värde variabeln kapital i Console har efter att filen körts genom att skriva kapital följt av Enter.\n\n\n💪 Uppgift 4.2\nDu kanske märkte att inte mycket hände i Console när du klickade på Source - knappen. Det mest hände liksom bakom scenen, där kommandona i Editorn skickades över till Console. Vi skulle kanske vilja att vår kod skrev upp kapital i Console efter att alla ränta-på-ränta beräkningar gjorts. Prova att lägga till en rad i slutet av din kod med variabelns namn som du är intresserad av, dvs kapital. Klicka på Source - knappen igen om verifiera att värdet 111.936 skrivs ut i Console.\n\n\n💪 Uppgift 4.3\nKör kommandot på rad 1 i stock.R genom att använda Run-knappen. Undersök vilket värde variabeln kapital i Console. Upprepa detta för de resterande raderna i stock.R."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#ställa-in-arbetsmappen-working-directory-i-r",
    "href": "datorlab/lab1/DatorLab1.html#ställa-in-arbetsmappen-working-directory-i-r",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "5. Ställa in arbetsmappen (working directory) i R",
    "text": "5. Ställa in arbetsmappen (working directory) i R\nHittills har vi skrivit alla kommandon och tal (t ex kapital = 100), dvs vi har matat in data själva. Det är naturligtvis klumpigt om man har mycket data. Vi vill kunna läsa in hela datamaterialet från en fil. Här är en Excel-fil med data från 5 års investingar i aktier:\n\n\n\n\n\nNotera att avkastningen (returns) anges i procent och är satt till noll under 2018 eftersom vi köpte aktierna precis i början av år 2019 (säger vi) och alltså inte fick någon avkastning under år 2018.\nExcel-filen har jag döpt till stock.xlsx, men den kan döpas till precis vad som helst.\n\n\n\n\n\n\nVariabelnamn som man ska undvika\n\n\n\nVi använder engelska namn på kolumnerna. Även om svenska tecken åäö går att använda i kod, är det ändå bäst att undvika dem genom att skriva på engelska. Du kan inte använda mellanslag (space) i variabelnamn, och variabelnamn får inte heller börja med siffror. Det finns också vissa ord som är reserverade och som inte får/ska användas som variabelnamn. Slutligen: R skiljer på små och stora bokstäver. Variabeln kapital är alltså inte samma som Kapital.\n\n\n\n\n\n\n\n\nWhat’s in a name? Mer än du tror!\n\n\n\nOfta vill man ha ett variabelnamn som är lätt att förstå vad variabeln innehåller. Det är superviktigt för att andra ska kunna förstå ens kod, men framförallt för att du själv ska kunna förstå din egen kod om en vecka! 🥴 Använd _ (underscore) eller . (punkt) för att dela upp ord om det behövs. T ex my_pretty_little_variable = 100.\n\n\n\n\n\n\n\n\n\nOm R ska kunna läsa in data från filen stock.xlsx så måste vi tala om var filen finns på vår dator. Enklast är då att ställa in Rs working directory, dvs det standardställe där R letar efter filer i den pågående sessionen. Det finns två sätt att göra detta, varav vi endast rekommenderar det första om man är absolut nybörjare. Rätt snart bör du lära dig att använda det andra sättet, som är smidigare i längden.\n\nWorking directory är den mapp som R kommer leta efter filer i. Ändra din arbetsmapp (working directory) i R till samma mapp SDA1 i Documents genom att välja menyn Session och sen Set Working Directory och slutligen Choose Directory… och sedan klicka dig fram till mappen SDA1.\n\n\n\n\n\n\n\nFör att slippa att klicka sig fram via menyer hela tiden så är det praktiskt att ändra working directory i början av den kodfil som man jobbar med. Då kan man bara köra den kodfilen och working directory ställs in automatiskt. Kommandot setwd gör samma sak som punkten 1 gjorde via menyerna. Här måste vi dock veta sökvägen (path) till mappen, dvs datorns sätt att hitta till mappen SDA1. Sättet att skriva sökvägar på skiljer sig åt på Windows/Mac/Linux. I dessa exempel antar jag att din SDA1 mapp är placerad i mappen Documents.\n\n På en Mac skriver vi kommandot: setwd('/Users/username/Documents/SDA1') där username ska ersättas med ditt användnamn på din Mac (namnet som kommer upp när du loggar in på datorn). Notera de små ‘blipparna’ kring filvägen i setwd kommandot.\n På en Windows-dator skriver vi kommandot setwd('C:/Documents/SDA1'). Notera de små ‘blipparna’ kring filvägen i setwd kommandot. [Windows-sökvägar skrivs vanligtvis med backslash \\. I RStudio skriver man ändå / för att matcha med Mac och Linux].\n På en Linux-dator skriver vi kommandot setwd('/home/username/Documents/SDA1') där username ska ersättas med ditt användnamn som använder när du loggar in.\n\n\n\n💪 Uppgift 5.1\nStäll in din SDA1 mapp som working directory i RStudio. Kontrollera att du lyckades genom att skriva kommandot getwd() i Console, som bör skriva ut sökvägen till din SDA1 mapp. Nu har du talat om för R att den ska leta efter filer i din kursmapp SDA1!"
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#läsa-in-data-från-fil",
    "href": "datorlab/lab1/DatorLab1.html#läsa-in-data-från-fil",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "6. Läsa in data från fil",
    "text": "6. Läsa in data från fil\nVi vill nu läsa in data från Excelfilen stock.xlsx. Du kan ladda ner den filen här. Beroende på din dator så kommer en av två saker hända:\n\nfilen stock.xlsx hamnar automatiskt i mappen Downloads (eller liknande) på din dator. Du får då kopiera eller flytta filen till din working directory (din SDA1 mapp) genom att använda datorns filhanterare.\ndu får välja var du vill spara ner filen. Klicka dig fram till din working directory (din SDA1 mapp) och spara filen där.\n\nR kommer nu att hitta filen och vi är redo att skriva kommandot som läser in filen. Eftersom det är första gången du läser in en Excel-fil i R behöver du göra lite grundjobb. Vi ska göra tre steg:\n\nInstallera R-paketet readxl. R kommer med ett antal baskommandon förinstallerat. T ex har vi redan använt funktionen setwd() för att tala om för R vilken mapp som är vår working directory. Men många kommandon/funktioner i R måste laddas in via s k R-paket. Det finns R-paket för nästan allt man vill göra: läsa in data, gör olika typer av statistiska analyser etc etc. Paketet readxl är specialiserat på att läsa in Excel-filer i R. För att installera paketet kör vi kommandot install.packages('readxl') antingen genom att skriv in det i en kodfil och trycka på Run eller genom att skriva det direkt i terminalen. Efter det kommer R att skriva ut en massa mumbo-jumbo i Console som beskriver installationen. Paket kan ta någon minut eller mer för att installera. Om inga fel uppstår brukar installationsmeddelandet avslutas med något liknande:\nDONE (readxl)\nThe downloaded source packages are in\nföljt av någon kryptisk sökväg till stället på din dator där paketet har blivit installerat.\n\nInstallation av paket behövs bara göras en gång på din dator. Du behöver inte installera om nästa gång du startar upp RStudio på nytt.\n\n\n\n\n\n\nPaketet spotifyr kan t ex tala om för dig vilka dina fem mest spelade Spotify-låtar är. Se sidan StrangeR things för andra mer eller mindre konstiga paket. Och, ja, det är vanligt med ett stort R i namnet på R-relaterade saker. NördaR, du vet.\n\nLadda R-paketet readxl. Kommandot library(readxl) laddar funktionerna i paketet readxl till R’s arbetsminne. Först efter denna kommando kan vi använda funktionerna i paketet. Notera att vi behöver ‘blippar’ kring paketets namn när vi installerar, men inte när vi laddar paketet. Ett paket som laddats in med library finns inte tillgängligt när du start om RStudio. Du måste alltså skriva library(readxl) för varje ny session där du vill läsa in Excel-filer. Det är därför bra att skriva in library(readxl) i kodfilen du ska använda för att läsa in Excel-filer.\nLäs in data från Excel-filen genom kommandot/funktionen read_excel(). Här hela kommandot (funktionsanropet):\nstockdata = read_excel('stock.xlsx', sheet = 1)\nDet är några saker att reda ut här. Först, read_excel() är en funktion vilket betyder att det är ett kommando som gör något baserat på funktionens input-argument:\n\nDet första argumentet 'stock.xlsx' är en textsträng (den har ‘blippar’) som talar om för read_excel() vilken Excelfil som ska läsas in. Vi behöver inte säga mer eftersom denna fil ligger i vår working directory, som ju R nu känner till.\ndet andra input-argumentet är sheet = 1, vilket säger åt read_excel() att data ligger i det första kalkylbladet i filen stock.xlsx. En Excelfil kan ju har flera kalkylblad, och vill man läsa det andra bladet ändrar man 1 till 2. (men stock.xlsx har bara ett blad, så prova inte detta för då kommer R att klaga).\n\nMen vad betyder stockdata = i början av kommandot ovan? Jo, om R ska läsa in data till arbetsminnet så måste den ge denna data ett namn, vilket jag har valt till stockdata , men du får döpa den till (nästan) vad du vill. stockdata är en variabel, precis som kapital var en variabel tidigare. Variabeln kapital var en enkel form av en variabel som bara innehöll ett enda värde, t ex 100 i början av vårt sparande. Variabeln stockdata är mer komplex. Den innehåller en hel tabell med värden. Så kommandot\nstockdata = read_excel('stock.xlsx', sheet = 1)\nläses alltså av R som\n\nLäs in första kalkylbladet av Excelfilen stock.xlsx till arbetsminnet och spara den inlästa tabellen som en tabell i variabeln stockdata.\n\n\nR har lite olika varianter av tabellvariabler. Den viktigaste för oss på den här kursen är en s k dataframe. Funktionen read_excel() läser dock in data som en s k tibble-tabell. För att göra om en stockdata till en dataframe skriver vi kommandot stockdata = data.frame(stockdata), där variabeln (tabellen) stockdata skrivs över med resultatet att stockdata nu är en dataframe.\nNär man har läst in ett datamaterial är det bra att ta en snabbtitt på den inlästa tabellen för att se att den blev korrekt inläst. Precis som vi gjorde med variabel kapital för att se dess värde (t ex 100) så kan skriva stockdata i Console för att se dess värde (som ju är en tabell). Om man har en tabell med många rader så blir det fort jobbigt att skriva ut alla rader. Kommandot head() är då praktiskt, som bara skriver ut det första 6 raderna av tabellen. Här har vi alla kommandon som krävs för att ladda in data och skriva ut fint på skärmen (förutom install.packages('readxl') som jag antar att du redan har kört för att installera paketet).\n\nlibrary(readxl)\nstockdata = read_excel('stock.xlsx', sheet = 1)\nstockdata = data.frame(stockdata) # gör om stockdata till en dataframe\nhead(stockdata)\n\n  year  capital returns\n1 2018 100.0000    0.00\n2 2019 110.0000    0.10\n3 2020 116.6000    0.06\n4 2021 111.9360   -0.04\n5 2022 117.5328    0.05\n6 2023 125.7601    0.07\n\n\n\n\n\n\n\n\nKommentarer\n\n\n\nI min kod ovan skrev jag # gör om stockdata till en dataframe på en rad. All text som kommer efter tecknet # är en s k kommentar i R. Kommentarer ignoreras av R och är därför ett bra sätt att skriva små saker som gör koden mer lättläst. Du måste ha ett # -tecken framför varje rad som du vill “kommentera ut”.\n\n\n\n\n\n\n\n\nAnge sökväg till filer som inte är i din Working directory\n\n\n\nIstället för att placera alla filer i din working directory SDA1 kan man istället ange sökvägen till filen när man läser in den. Om jag t ex har sparat filen i mappen Downloads på en Windows-dator så skriver jag \nstockdata = read_excel('C:/Downloads/stock.xlsx', sheet = 1)\n\n\n\n💪 Uppgift 6.1\nProva att ladda ner Excelfilen stock.xlsx och spara den i SDA1 mappen. Läs sen in filen i R med kommandot stockdata = read.xlsx('stock.xlsx', 1, header=TRUE) . Skriv sen head(stockdata) i Console för att titta på data.\nProva nu att läsa in data med kommandot stockdata = read.xlsx('stock.xlsx', 1, header=FALSE) och notera skillnaden genom att återigen skriva head(stockdata) i Console.\n\n\n💪 Uppgift 6.2\nÄndra värdet på variabeln returns år 2023 till 0.05 i stockdata tabellen genom att skriva stockdata[6,3] = 0.05 i Console. Det här kommandot läser R som:\n\nVärdet i tabellen stockdata på rad 6 och kolumn 3 ska ändras till (tilldelas) värdet 0.05.\n\nProva att skriva stockdata i Console för att kontrollera att värdet faktiskt ändrades.\n\n\n💪 Uppgift 6.3\nSpara den ändrade stockdata-tabellen till disk genom att skriva följande kommando i Console:\n\nsave(stockdata, file=\"stockdata2.Rdata\")\n\nvilket sparar den ändrade stockdata tabellen till filen stockdata2.Rdata i din working directory (SDA1-mappen). Filformatet Rdata är R’s eget filformat. Du kan i en senare session läsa in stockdata enkelt genom kommandot\n\nload(\"stockdata2.Rdata\")\n\nvilket kommer läsa in tabellen stockdata i R’s arbetsminne."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#analysera-data",
    "href": "datorlab/lab1/DatorLab1.html#analysera-data",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "7. Analysera data",
    "text": "7. Analysera data\nNär du har läst in datamaterialet i minnet så är det dags att analysera det. Låt oss göra en enkel graf av variabeln capital över åren (year):\n\nplot(capital ~ year, data = stockdata)\n\n\n\n\nHär har vi använt funktionen plot() med två argument. Argumentet capital ~ year talar om för plot() att den ska göra en graf (‘plotta’) variabeln capital på y-axeln och variabeln year på x-axeln. Vi säger att vi ‘plottar capital mot year’. Men capital och year är faktiskt inte variabler i Rs arbetsminne. Där finns bara en tabell (dataframe) som heter stockdata med kolumner som heter capital och year. Så vi måste tala om för plot() att vi vill hämta variablerna capital och year från datamaterialet/tabellen/dataframe stockdata, vilket är precis vad som händer i det andra argumentet data = stockdata. Tecknet ~ brukar läsa som tilde och kan skrivas genom tangenterna Alt gr och tangenten till vänster om Enter.\nSå kommandot\n\nplot(capital ~ year, data = stockdata)\n\nläses av R som\n\nplotta variabeln capital mot variabeln year, där både dessa variabler är kolumner i datamaterialet stockdata.\n\nOm vi vill beräkna medelvärdet på en variabel kan vi använda funktionen mean(). Men om vi vill beräkna medelvärdet av variabeln capital med kommandot mean(capital) så får vi problemet att R inte har en variabel capital i minnet; capital är ju bara en kolumn i datamaterialet stockdata. Hur säger vi till R: gör om kolumnen capital i datamaterialet stockdata till en egen variabel och beräkna dess medelvärde (mean på engelska). Lösningen att använda $-tecknet för att plocka ut kolumnen returns som en egen variabel: stockdata$capital och sen använda mean() funktionen. Vi kan göra detta på samma kodrad och skriva ut resultatet:\n\nmeancapital = mean(stockdata$capital)\nmeancapital\n\n[1] 113.6381\n\n\nKodraden meancapital = mean(stockdata$capital) säger alltså till R att\n\nPlocka ut kolumnen capital från datamaterialet stockdata och beräkna dess medelvärde.\n\nGenom att explicit plocka ut kolumner på detta sätt kan vi göra grafen med ett lite annorlunda kommando:\n\nplot(stockdata$capital, stockdata$year)\n\n\n\n\ndär vi inte längre måste använda argumentet data = stockdata för att tala om var dessa variabler kommer från. Men det förra kommandot plot(capital ~ year, data = stockdata) är nog ändå mer lättläst, tycker jag.\n\n💪 Uppgift 7.1\nLäs återigen in data med stockdata = read_excel('stock.xlsx', sheet = 1). Gör en graf där du plottar variabeln returns mot year.\nHär är hela koden i ett stycke:\n\nsetwd('/home/mv/Dropbox/Teaching/SDA1/datorlab/lab1') # I have a Linux computer and my data is in this path\nlibrary(readxl)                         \nstockdata = read_excel('stock.xlsx', sheet = 1)\nstockdata = data.frame(stockdata)\nmeancapital = mean(stockdata$capital)\nplot(capital ~ year, data = stockdata)\n\n\n\n\nNotera att vi kan skriva kommentarer i koden genom tecknet # innan kommentaren. Allt efter tecknet # ignoreras av R när den läser koden. Det kan vara ett bra sätt att förklara en kodrad för användaren."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#några-extra-tips",
    "href": "datorlab/lab1/DatorLab1.html#några-extra-tips",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "8. Några extra tips",
    "text": "8. Några extra tips\n\nOm du trycker på ‘pil-upp’ ⍐ tangenten i Console så kan du stega dig tillbaka till gamla kommandon som du har skrivit.\nOm du vill städa upp i Console kan du skriva Ctrl + l för att rensa Console från text (dvs ett litet L). Dina variabler blir kvar i arbetsminnet.\nHistory-fliken uppe till höger i RStudio visar alla tidigare kommandon.\nEnvironment-filken uppe till höger i RStudio ger dig information om de datamaterial och variabler som R har i arbetsminnet. Prova genom att definiera en ny variabel c=100 i Console och hur den dyker upp i Environment-fliken. Prova att klicka på den blå pilen framför stockdata, du kommer se kolumnerna i det datamaterialet.\nFiles-fliken nere till höger i RStudio är en inbyggd filhanterare. Den visar filerna i ditt working directory och du kan även hantera filer där (ta bort, döpa om osv).\nI Help-fliken kan du söka på hjälp på olika kommandon. Prova att skriva in mean. Du kan även få hjälp genom att skriva t ex ?mean i Console."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#datastrukturer",
    "href": "datorlab/lab1/DatorLab1.html#datastrukturer",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "9. Datastrukturer",
    "text": "9. Datastrukturer\nR kan spara data i olika datastrukturer. Vi definerade tidigare variabeln kapital och tilldela denna variabel värdet 100 genom kommandot kapital = 100.\nOfta vill man spara mer än ett tal i samma datastruktur. Ett sätt är att skapa en vektor med kommandot c()\n\ncapital_all_years = c(100,110,116.6,111.936,117.532,125.760)\n\nDen nya variabel capital_all_years innehåller alltså kapitalet för alla år. Men om jag skulle vilja ‘plocka ut’ kapitalets värde vid det tredje året? Då kan man indexera vektorn genom hakparenteser (brackets) [], så här:\n\ncapital_all_years[3]\n\n[1] 116.6\n\n\nMan kan också plocka ut flera värden samtidigt, t ex år 3 och 5, med kommandot\n\ncapital_all_years[c(3,5)]\n\n[1] 116.600 117.532\n\n\nNotera att vi indexerade med en vektor, dvs vi använde c() kommandot eftersom vi vill tala om för R att plocka ut fler än ett värde.\nVi har redan sett en av Rs viktigaste datatyper: en s k dataframe. En dataframe är en tabell med information om vad kolumnerna heter, och ibland även vad raderna heter. Ett exempel är vår stockdata som är dataframe med tre kolumner: year, capital och stock. Vi kan se att det är en dataframe genom att använda kommandot class():\n\nclass(stockdata)\n\n[1] \"data.frame\"\n\n\nVi har faktiskt redan använt idéen med att plocka ut värden genom indexing in dataframes tidigare när vi skrev stockdata[6,3] för att plocka ut värdet på rad 6 och kolumn 3 i tabellen/dataframe. Och vi såg att vi också kunde ändra värdena i tabellen genom tilldelning: stockdata[6,3]=0.05 . Samma sak kan man göra med en vektor, t ex så gör kommandot capital_all_years[5] = 200 att vi ändrar kapitalet år 5 till 200 i vår vektor som innehåller alla års kapital.\nDet finns en annan slags tabell som kan vara bra att känna till i R, en s k matris (eng. Matrix). Matriser är som dataframes, men innehåller inte information om namnet på kolumnerna. Å andra sidan kan man göra matematiska beräkningar med hela matriser, men det är inget vi gör på denna kurs. Anledningen till att vi nämner matriser här är att man ibland måste göra om en matris till en dataframe eller tvärtom. Vissa R-program vi bara jobba med dataframes och klagar om man försöker få det att jobba med en matris. Låt oss skapa en matris som jag kallar A :\n\nA = matrix(c(11,2,4,5,62,3), 3, 2)\nA\n\n     [,1] [,2]\n[1,]   11    5\n[2,]    2   62\n[3,]    4    3\n\n\nvilket är en matris (tabell) med 3 rader och 2 kolumner (som vi skapar från en vektor med 6 tal). Om vi använder class()-kommandot så ser vi att A mycket riktigt är en matrix, vilket är engelska för matris:\n\nclass(A)\n\n[1] \"matrix\" \"array\" \n\n\nOm vi vill göra om en matris till en dataframe så använder vi kommandot\n\nB = as.data.frame(A)\nB\n\n  V1 V2\n1 11  5\n2  2 62\n3  4  3\n\n\ndär R bestämmer att kolumnerna ska heta V1 och V2 (en dataframe måste ha namn på kolumnerna i tabellen). B är alltså nu en dataframe, vilket man kan testa genom:\n\nclass(B)\n\n[1] \"data.frame\"\n\n\nEn annan viktigt datatyp vi vill nämna är en s k sträng (eng. string), vilket kallas för character i R och är en variabel som innehåller text. Värdet på en sträng-variabel skriv innanför citattecken:\n\nmittnamn = \"mattias\"\nclass(mittnamn)\n\n[1] \"character\"\n\n\nMan kan även använda enkla ‘blippar’ kring strängens värde, dvs mittnamn = 'mattias'.\nOm vi t ex använder names() kommandot på vår stockdata dataframe så får vi en vektor med strängar (en vektor eftersom det finns fler än ett kolumnnamn i stockdata):\n\nnames(stockdata)\n\n[1] \"year\"    \"capital\" \"returns\"\n\n\nSlutligen finns datatypen list i R. En list (eller lista på svenska) är en vektor på steroider. En vanlig vektor måste innehålla data av samma sort, t ex en vektor med numeriska tal x = c(1,4,5) eller en vektor med strängar (text): c(\"mattias\",\"adam\",\"elma\") . En lista är mer generell och kan innehålla data av olika sort:\n\nmy_list = list(a = 2, b = \"hej\", d = c(4,5,2))\nmy_list\n\n$a\n[1] 2\n\n$b\n[1] \"hej\"\n\n$d\n[1] 4 5 2\n\n\nJag kan döpa elementen i listan vad jag vill, här kallade jag dem a, b och d (jag vill undvika bokstaven c eftersom det är symbolen för att skapa vektorer). Notera att elementet a innehåller ett enda tal, b en sträng och d en vektor med tre tal. I utskriften ser man också att det olika listelementen med ett $-tecken framför. För att t ex plocka ut listelementet d kan man nämligen skriva\n\nmy_list$d\n\n[1] 4 5 2\n\n\nKänns det bekant med $-tecken för att plocka ut saker? Vi har redan sett att man kan plocka ut en kolumn i en dataframe (tabell) genom att skriva t ex stockdata$returns . En dataframe är nämligen egentligen en slags lista.\n\n\n\n\n\n\nHitta lätt bland alla fickor\n\n\n\nOm du skriver my_list$ (inklusive $-tecknet) i Console kommer det att dyka upp en lista med alla element som finns i listan my_list. Använd pil-tangenterna (upp och ned) för att välja det element du är intresserad av och tryck Enter. 🤩\n\n\nVi ska slutligen presentera ytterligare en viktig datatyp i R: factor. Prova att skriva in kommandot str(stockdata) i Console. Kommandot returnerar variablernas namn och datatyper, vilket ju är numeric för alla våra tre kolumner year, capital och returns i tabellen. Men tabellkolumner kan bestå av bokstäver (strängar) eller kategoriska variabler (t ex man och kvinna). Kategoriska variabler kallas för faktorvariabler i R.\nR har ett antal inbyggda datamaterial, t ex datamaterialet warpbreaks som innehåller information om antalet fel (breaks) vid vävning för två olika typer av garn (wool) och tre olika spänningar av vävstolen (tension). Vi börjar med att tilldela datamaterialet till variabeln garndata genom att skriva garndata = warpbreaks i Console. Skriv head(garndata) för en snabb titt på de första observationerna. Som du ser är breaks en numerisk variabel (eller snarare en kolumn in tabellen), men både wool och tension är kategoriska faktorvariabler (wool kan bara vara av garntyp A eller B, och tension kan vara låg (L), mellan (M) eller hög (H)). Vi kan se detta mer exakt genom att skriva str(garndata) i Console:\n\ngarndata = warpbreaks\nstr(garndata)\n\n'data.frame':   54 obs. of  3 variables:\n $ breaks : num  26 30 54 25 70 52 51 26 67 18 ...\n $ wool   : Factor w/ 2 levels \"A\",\"B\": 1 1 1 1 1 1 1 1 1 1 ...\n $ tension: Factor w/ 3 levels \"L\",\"M\",\"H\": 1 1 1 1 1 1 1 1 1 2 ...\n\n\ndär vi ser att wool är en faktorvariabel med två olika värden (levels, eller nivåer på svenska), medan tension har tre nivåer. Vi ser även att breaks är en numerisk variabel. Vi kan även se denna information i den övre högra panelen i R under fliken Environment genom att klicka på den lilla pilen på garndata."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#funktioner",
    "href": "datorlab/lab1/DatorLab1.html#funktioner",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "10. Funktioner",
    "text": "10. Funktioner\nVi har sett idén med funktioner tidigare: en funktion gör något med data. I matematikens värld är en funktion \\(f\\) en slags maskin som använder en input \\(x\\), gör några matematiska beräkningar, och ger tillbaka en output \\(y\\). Vi brukar skriva funktionen som \\(y=f(x)\\).\nEn funktion i R är en liknande sak: den använder ett eller flera inputs och ger tillbaka ett eller flera outputs. Det kan handla om ren matematisk funktion, som kvadratroten \\(\\sqrt{x}\\) av ett tal \\(x\\), vilket i R beräknas av funktionen sqrt:\n\nx = 4\ny = sqrt(x)\ny\n\n[1] 2\n\n\nmen det kan också vara något mer komplicerat som t ex att läsa in data från en Excel-fil:\n\nstockdata = read_excel('stock.xlsx', sheet = 1)\n\ndär read_excel är en funktion som tre input-argument filnamn (som en sträng!), talet 1 för att vi vill läsa det första bladet. Funktionen read_excel ger tillbaka en (tibble) dataframe som output med data.\nDet fina med programmeringsspråk är att man kan skapa egna funktioner som gör just det jobb som man behöver. Om jag t ex vill skapa en funktion som beräknar ränta-på-ränta effekten på ett sparkapital (med samma ränta varje år) så kan jag skriva ihop följande funktion:\n\ncapital_interest <- function(capital, interest, years){\n  newcapital = capital*interest^years\n  return(newcapital)\n}\n\nNågra saker att notera:\n\nMan använder alltid ordet function där att definiera en funktion.\nFunktionens input-argument skrivs inom parenteser. Vilka namn du väljer är helt fritt, men det måste vara samma variabelnamn som du sedan använder innanför de s k måsvingarna {} som innehåller den faktiska koden som gör jobbet.\nFunktionen tilldelas en variabel som jag gett namnet capital_interest , vilket är ett namn du väljer helt själv.\nKoden använder ränta-på-ränta formeln \\(capital\\cdot interest^{years}\\) , dvs räntan, angett som 1.1 om du får 10% ränta, upphöjs i antal sparandeår. Upphöjt skrivs som ^ i R.\nFunktionen avslutar med ordet return och den variabel du vill att funktionen ska ge tillbaka som output.\n\nOm jag sen vill använda min funktion för att se hur min hundring på banken kommer att utvecklas under 20 år med 5% ränta så skriver jag (jag anropar funktionen):\n\nmy_money = capital_interest(100, 1.05, 20)\nmy_money\n\n[1] 265.3298\n\n\nVi sa ovan att vi tilldelade variabeln capital_interest en funktion. 🤯 Wait, what? Jo, faktiskt, om vi undersöker vilken typ av variabel capital_interest är så är det faktiskt en funktion:\n\nclass(capital_interest)\n\n[1] \"function\"\n\n\nNär vi skrev variabel kapital i Console skrev den ut värdet, t ex 100. Vad händer om vi göra samma sak med vår funktionsvariabel capital_interest ? Hela funktionen skrivs ut som text!\n\n capital_interest \n\nfunction(capital, interest, years){\n  newcapital = capital*interest^years\n  return(newcapital)\n}\n\n\nVi kommer inte att skriva egna funktioner på kursen. Men du kommer att använda funktioner. Och då kan det vara bra att veta att någon har skrivit dessa funktioner på precis det sätt som vi skapade funktionen capital_interest ovan.\nEn sista sak: vissa funktioner har inga inputargument och ibland inte heller några outputs. Det betyder inte att funktionen inte gör något, utan den har istället vissa sido-effekter som inte alltid syns. setwd är t ex funktion som har sökvägen som input, men har inga output, men däremot sidoeffekten att ändra working directory. Funktionen getwd() har inga input-argument men ger tillbaka din nuvarande working directory som output."
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#tre-dialekter-av-r",
    "href": "datorlab/lab1/DatorLab1.html#tre-dialekter-av-r",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "11. Tre dialekter av R",
    "text": "11. Tre dialekter av R\nMan kan dela upp R’s språk i tre slags dialekter, dvs tre olika kommandon (syntax) för att göra ungefär samma sak:\n\nBase-R - den ursprungliga syntaxen in R\nFormula syntax - syntax som via paketet Mosaic har utvecklats för undervisning i statistik\nTidyverse - en modern syntax utvecklat av personerna bakom RStudio.\n\n\n    \n\n\nI SDA1 kommer vi försöka använda Formula syntax som mycket som möjligt, med inslag av Base-R. Tidyverse-kod kan ofta vara extremt effektiv, men tar för lång tid att lära sig på en grundkurs i statistik. Vi kommer dock då och då att visa hur man gör samma sak i de olika dialekterna, men på ett sätt som inte stör flödet för den student som helst vill hålla sig till ett sätt. Vi använder ikoner som du som student kan klicka på för att se ett kommando i olika dialekter. Här är ett exempel (prova att klicka ikonerna i höger-marginalen):\nI Formula syntax har vi redan sett att vi kan göra en scatter plot med kommandot\n\nplot(mpg ~ hp, data = mtcars, main = \"Cars fuel usage\")\n\n\n\n\n\n\n \nOm man vill ha plottar som liknar de fina plottarna i Tidyverse, men fortsätta att skriva den enklare formula-syntaxen så kan man använda paketet ggformula:\n\nlibrary(ggformula)\ngf_point(mpg ~ hp, data = mtcars, title = \"Cars fuel usage\")"
  },
  {
    "objectID": "datorlab/lab1/DatorLab1.html#sammanfattning",
    "href": "datorlab/lab1/DatorLab1.html#sammanfattning",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "12. Sammanfattning",
    "text": "12. Sammanfattning\n\n\n\n\n\n\nI den här laborationen har du lärt dig:\n\n\n\n\nAnvända R som en miniräknare.\nAnvända variabler som ett sätt att spara värden i en session.\nSätta working directory så R kan hitta dina filer.\nSkriva kod både i Console och Editorn.\nLäsa in data från fil och göra inledande grafer och medelvärdeberäkningar för dataanalys.\nVi har också tittat på datastrukturer i R och t o m nosat lite på funktioner i R.\n\n\n\n\n\n\n\n\n\n\nEnd of the line\n\n\n\nOm du har kommit hit utan att slita ditt hår alltför många gånger så tycker jag att du ska vara väldigt nöjd med dig själv. Du har redan lärt dig massor om R. Ditt framtida jag kommer att tacka dig!\nTa nu en ☕ och en 🍰 för att fira!\n\n\n\n\n\nhttps://devcamp.com/site_blogs/top-5-programming-memes"
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html",
    "href": "datorlab/lab2/DatorLab2.html",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "",
    "text": "I den här datorlabben kommer vi att titta på hur fördelningar för olika typer av variabler kan beskrivas numeriskt och grafiskt.\n\n\n\nSkapa en mapp Lab2 i din kursmapp SDA1 (från Lab 1). Ladda ner Quarto-filen för denna lab genom att högerklicka här och välj ‘Spara länk’ eller något likande från menyn som dyker upp. Spara filen i din nya Lab2 mapp. Öppna Quarto-filen i RStudio och gå över till ‘Source mode’ genom att klicka på ‘Source’ i det vänstra hörnet av din ‘Editor’. Du kan nu fortsätta med denna laboration direkt i Quarto-dokumentet, där du också fyller i svaren på dina laborationsövningar. Du kan alltså lämna den här webbsidan nu och fortsätta arbetet i RStudio.\n\n\n\nKlicka på knappen Render i Editor-fönstret för att kompilera filen till en webbsida (html). Webbsidan kommer antingen att visas i Viewer-fönstret i RStudio eller i webbläsaren på din dator. Om din webbsida visas i webbläsaren rekommenderar vi att du ändrar inställningarna i RStudio så webbsidan visas i Viewer-fönstret. Du ställer in detta på menyn Tools/Global Options… och sen väljer du Viewer Pane vid Show output preview in:\n\n\n\n\n\n\n\n\nFör att säkerställa att man befinner sig i korrekt arbetsmapp varje gång Quarto-dokumentet kompileras kan man skapa en s k code-chunk efter den s k YAML-texten (som återfinns längst upp i dokumentet, mellan de tre bindestrecken - - -). Du skapar en code-chunk genom att klicka på knappen med C och ett + i övre högra hörnet av Editorn.\n\n\n\n\n\n\n\n\n\n\n\nRStudios Editor ändras beroende på vilken sorts fil du har öppen\n\n\n\nNotera att ikonerna i Editor är annorlunda när du har ett Quarto-dokument öppet jämfört med tidigare när vi hade en fil med ren R-kod öppen.\n\n\nLägg till en ny code chunk och ställ in ‘working directory’ till den nya mappen genom att följa anvisningarna från Lab 1.\n\n\n\n\n\n\nTips\n\n\n\nFunktionen setwd() i R talar om för R vilken mapp som är ‘working directory’.\n\n\n\n\n\nMånga intressanta dataset finns tillgängliga på webben. Kursboken har gjort ca 500 av dataseten tillgängliga här. Ni kommer att jobba med titanic datasetet som finns i Chapter 3. Ladda ner den zip-filen samt packa upp/extrahera filen genom att klicka på den och välj ‘Extrahera’ eller något liknande. Du kan extrahera filerna på datorns Skrivbord eller annan mapp. Om du går in i den extraherade mappen Ch3 så finns där filen Chapter_3.xlsx. Kopiera den filen till din Lab2 mapp. Vi kommer snart att läsa in datasetet."
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html#skapa-tabeller-för-kategoriska-variabler",
    "href": "datorlab/lab2/DatorLab2.html#skapa-tabeller-för-kategoriska-variabler",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "1. Skapa tabeller för kategoriska variabler",
    "text": "1. Skapa tabeller för kategoriska variabler\nEn kategorisk variabel är en variabel vars utfall är kategorier. En kategorisk variabel kan antingen vara på nominalskala eller ordinalskala. Den vanligaste typen är nominalskala, vilket innebär att utfallen saknar en naturlig rangordning. Ett exempel är kön, där man inte kan rangordna utfallen på ett meningsfullt sätt. För en kategorisk variabel på ordinalskala så gäller det att utfallen har en naturlig rangordning. Ett exempel är betyg, där till exempel betyg A är bättre än betyg C. Än så länge behöver vi inte oroa oss för om en kategorisk variabel är på ordinalskala eller nominalskala. Vi använder en tabell för att representera dess fördelning i bägge fallen.\nFörst ska vi installera och ladda paketen openxlsx för att läsa in data från Excelfil och mosaic för dataanalys.\n\n#install.packages(\"openxlsx\") # Kommentera bort denna rad om redan har openxlsx installerat från Lab 1\n#install.packages(\"mosaic\") # Kommentera bort denna rad efter att du kört Quarto-filen första gången\nsuppressMessages(library(openxlsx))\nsuppressMessages(library(mosaic))\n\n\n\n\n\n\n\nSnyggare utskrifter genom att undvika paket-meddelanden\n\n\n\nMånga paket är ‘pratiga’ och skriver ut en massa meddelanden när man laddar in dem med library. Genom att skriva suppressMessages(library(openxslx)) slipper vi få en massa meddelanden utskrivna i vår rapport.\n\n\nVi kan nu läsa in datamaterialet som finns i fliken Titanic i den Excelfil Chapter_3.xls ni laddade ner ovan:\n\ntitanic = read.xlsx(\"https://github.com/StatisticsSU/SDA1/raw/main/datorlab/lab2/Chapter_3.xlsx\", sheet = \"Titanic\")\n\n\n\n\n\n\n\nFunktionen read.xlsx() är smart\n\n\n\nOm du tittar på koden ovan ser du att det ser lite annorlunda ut än i Lab 1:\n\nFunktionen read.xlsx() kan läsa in filer inte bara från din dator utan direkt från internet. Istället för att ange en sökväg till Excel-filen på din dator (om den inte ligger i working directory) kan du bara ange en webbadress där data finns. Vi har laddat upp data till adressen ovan.\nFunktionen read.xlsx() har ett argument sheet som talar om vilken av alla flikar som ska läsas in. I Lab 1 satte vi sheet = 1 för att läsas in den första fliken. Men man kan också skriva namnet på fliken, dvs sheet = \"Titanic\". Notera att eftersom Titanic är ett namn så måste vi skriva citationtecken “” kring för att tala om för R att det är bokstäver (en sträng som vi lärde oss om i Lab 1).\n\n\n\n\n💪 Uppgift 1.1\nÄndra koden ovan så read.xlsx() istället läser in filen ‘Chapter_3.xlsx’ från din dator.\nVi kan ta titt på de första observationerna genom att använda funktionen head(). Vi kan också lista de första observationerna för varje variabel i datasetet genom att använda funktionen str():\n\nhead(titanic)\n\n                           Name Survived     Boarded Class   MWC Age\n1            ABBING, Mr Anthony     Dead Southampton     3   Man  42\n2        ABBOTT, Mr Ernest Owen     Dead Southampton  Crew   Man  21\n3      ABBOTT, Mr Eugene Joseph     Dead Southampton     3 Child  14\n4    ABBOTT, Mr Rossmore Edward     Dead Southampton     3   Man  16\n5 ABBOTT, Mrs Rhoda Mary 'Rosa'    Alive Southampton     3 Woman  39\n6    ABELSETH, Miss Karen Marie    Alive Southampton     3 Woman  16\n  Adut_or_Chld    Sex  Paid Ticket_No Boat_or_Body                   Job\n1        Adult   Male  7.55      5547         <NA>            Blacksmith\n2        Adult   Male    NA      <NA>         <NA> Lounge Pantry Steward\n3        Child   Male 20.25    CA2673         <NA>               Scholar\n4        Adult   Male 20.25    CA2673        [190]              Jeweller\n5        Adult Female 20.25    CA2673            A                  <NA>\n6        Adult Female  7.65    348125           16                  <NA>\n           Class_Dept Class_Full\n1 3rd Class Passenger          3\n2    Victualling Crew          V\n3 3rd Class Passenger          3\n4 3rd Class Passenger          3\n5 3rd Class Passenger          3\n6 3rd Class Passenger          3\n\nstr(titanic)\n\n'data.frame':   2208 obs. of  14 variables:\n $ Name        : chr  \"ABBING, Mr Anthony\" \"ABBOTT, Mr Ernest Owen\" \"ABBOTT, Mr Eugene Joseph\" \"ABBOTT, Mr Rossmore Edward\" ...\n $ Survived    : chr  \"Dead\" \"Dead\" \"Dead\" \"Dead\" ...\n $ Boarded     : chr  \"Southampton\" \"Southampton\" \"Southampton\" \"Southampton\" ...\n $ Class       : chr  \"3\" \"Crew\" \"3\" \"3\" ...\n $ MWC         : chr  \"Man\" \"Man\" \"Child\" \"Man\" ...\n $ Age         : num  42 21 14 16 39 16 25 30 28 20 ...\n $ Adut_or_Chld: chr  \"Adult\" \"Adult\" \"Child\" \"Adult\" ...\n $ Sex         : chr  \"Male\" \"Male\" \"Male\" \"Male\" ...\n $ Paid        : num  7.55 NA 20.25 20.25 20.25 ...\n $ Ticket_No   : chr  \"5547\" NA \"CA2673\" \"CA2673\" ...\n $ Boat_or_Body: chr  NA NA NA \"[190]\" ...\n $ Job         : chr  \"Blacksmith\" \"Lounge Pantry Steward\" \"Scholar\" \"Jeweller\" ...\n $ Class_Dept  : chr  \"3rd Class Passenger\" \"Victualling Crew\" \"3rd Class Passenger\" \"3rd Class Passenger\" ...\n $ Class_Full  : chr  \"3\" \"V\" \"3\" \"3\" ...\n\n\nVerkar variablerna vara definierade som de ska?\nLåt oss undersöka variabeln Survived i datasetet. Detta är en kategorisk variabel med två kategorier Dead och Alive. När en variabel bara har två kategorier brukar man också säga binär variabel. Man kan räkna antalet observationer som tillfaller varje kategori och på så sätt skapa en frekvenstabell med funktionen tally() i mosaic-paketet enligt nedan.\n\ntally(~ Survived, data = titanic)\n\nSurvived\nAlive  Dead \n  712  1496 \n\n\nTilde-tecknet ~ används i mosaic-paketet och är en del av formula-syntax dialekten i R som omnämndes i Lab 1. I det här fallet talar tecknet ~ om för R att variabeln Survived ska hämtas från datamaterialet titanic. Annars skulle vi ju vara tvungna att skriva titanic$Survived (kom ihåg från Lab 1 att $-tecknet säger åt R att ‘plocka ut variabeln Survived från datamaterialet titanic’). Så blir man t ex tvungen att skriva i dialekten base-R (klicka i marginalen om du är intresserad). Fördelen med mosaic’s formula-syntax kommer bli ännu tydligare när vi har många fler variabler att jobba med.\n\n\n \nLägg märke till att frekvenstabellen inte är sparad. Detta är bara ett kommando som ofta också duger gott och väl. Men ibland vill man också spara en tabell under sin session. Det kan göras genom att skapa ett passande variabelnamn och tilldela den nya variabeln värdet vi fick ovan (namnet på variabeln kan man välja som man vill):\n\ntab_survived <- tally(~ Survived, data = titanic)\n\n\n\n\n\n\n\nObservera\n\n\n\nTabellen är nu sparad (i R’s arbetsminne, men inte på datorns hårddisk) och syns också i Environment fliken längst upp till höger. Men vill man skriva ut resultatet i sitt dokument måste man också skriva ut den nya tabellens namn i sin code-chunk likt nedan\n\ntab_survived\n\nSurvived\nAlive  Dead \n  712  1496 \n\n\nmen det är vanligare att skriva allt i samma code-chunk:\n\ntab_survived <- tally(~ Survived, data = titanic)\ntab_survived\n\nSurvived\nAlive  Dead \n  712  1496 \n\n\n\n\nIbland kan det vara svårt att titta på antalet inom varje kategori och jämföra siffrorna sinsemellan. Att titta på relativa frekvenser istället gör ofta jämförelserna mycket enklare att uppfatta. Genom att lägga till argumentet format = proportion i tally() räknas de relativa frekvenserna istället.\n\ntally(~ Survived, data = titanic, format = \"proportion\")\n\nSurvived\n    Alive      Dead \n0.3224638 0.6775362 \n\n\nVill man ha detta presenterat i procent kan man enkelt skriva format = percent istället för proportion\n\ntally(~ Survived, data = titanic, format = \"percent\")\n\nSurvived\n   Alive     Dead \n32.24638 67.75362 \n\n\nAlltså överlevde endast 32.2% av de som befann sig på Titanic, medan 67.8% dog.\n\n\n\n\n\n\nObservera\n\n\n\ntab_survived är inte en vanlig numerisk variabel. Man kan använder sig av funktionen class() för att ta reda på vilken typ av objekt den är sparad som:\n\nclass(tab_survived)\n\n[1] \"table\"\n\n\n\n\n\n\n💪 Uppgift 1.1\nVariabeln Class talar om biljettklass passageraren reste med (1:a, 2:a, 3:e eller Crew (besättning)). Presentera det totala antalet inom varje biljettklass. Vilken kategori är störst?\n\n# Write your code here\n\n\n\n💪 Uppgift 1.2\nBeräkna den relativa frekvensen (i procent) inom varje biljettklass.\n\n# Write your code here"
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html#grafisk-illustration-av-kategoriska-variabler",
    "href": "datorlab/lab2/DatorLab2.html#grafisk-illustration-av-kategoriska-variabler",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "2. Grafisk illustration av kategoriska variabler",
    "text": "2. Grafisk illustration av kategoriska variabler\nFör att presentera kategoriska variabler grafiskt används oftast pajdiagram (pie charts) eller stapeldiagram (bar charts). Oftast räcker det med att använda sig av ett av dessa diagram i sin presentation. I R kan man använda sig av funktionerna pie()och bargraph() för respektive diagram. Det går då smidigt att använda sig av en sparad tabell som argument i funktionen.\n\ntable_rel_freq = tally(~ Survived, data = titanic, format = \"proportion\")\npie(x = table_rel_freq)\n\n\n\n\nOvan ser vi att vi först har sparat de relativa frekvenserna bland de som överlevde och de som dog i en tabell table_rel_freq. Detta är inte nödvändigt för att skapa ett pajdiagram. Men eftersom siffrorna redan finns i tabellen så kan man lika gärna använda sig av dem. Ett annat alternativ hade varit att skapa en vektor och manuellt skriva in värden för de olika kategorierna exempelvis likt: relative_frequencies = c(0.32, 0.68)\nGrafen ovan är dock inte så informativ. Det finns generellt många argument man kan använda sig av i R för att göra sina grafer så informativa som möjligt. Koden nedan är ett exempel på hur man kan gå tillväga\n\nrel_frequencies = round(table_rel_freq, 2) # round the numbers to two decimals\nrel_frequencies\n\nSurvived\nAlive  Dead \n 0.32  0.68 \n\ncategory_names = names(table_rel_freq)\ncategory_names\n\n[1] \"Alive\" \"Dead\" \n\ncolors = c(\"lightblue\", \"purple\")\npie(x =  table_rel_freq, labels = rel_frequencies, col = colors)\nlegend(\"topright\", legend = category_names, fill = colors)\n\n\n\n\nFunktionen round() används för att avrunda till önskat antal decimaler, i detta fall två så att grafen blir mer lättläslig.\nFunktionen names() som användes i Datorlaboration 1 för att få ut kolumnnamn från dataframes kan även här används för att få ut kolumnnamn från tabeller. Återigen är denna funktion inte nödvändig för att bilda ett pajdiagram, men den kan utnyttjas för att ge passande etiketter för olika kategorier.\n\n\n\n\n\n\nObservera\n\n\n\nEtt alternativ är att skriva ut namnen manuellt, exempelvis category_names = c(\"Alive\", \"Dead\"). Lägg då märke till att ordningen spelar roll. Kom även då ihåg att använda citattecken ” ” i vektorn ovan för att markera att det är text! Skriver vi inte ut citattecken runt kategorinamnen kommer R tro att vi kallar på variablerna Alive och Dead som inte är definierade, och Quarto dokumentet kan inte kompileras.\n\n\nMan kan även specificera färgerna på pajbitarna. Det finns väldigt många färger i R och man kan specificera dem antingen med text eller med siffror. Använder man sig av text är stavningen viktig. Generellt används då endast gemener (små bokstäver).\nI funktionen pie() läggs de olika argumenten in för att bilda ett pajdiagram. Det första argumentet kommer att avgöra hur stora pajbitarna blir. Det andra argumentet markerar endast etiketterna bredvid varje pajbit (i detta fall hur stora andelar det finns i varje kategori) och det tredje argumentet col bestämmer färgen i själva grafen.\nNedanför det används även funktionen legend() som flitigt kan användas då man vill rita flera olika variabler eller flera olika kategorier. Det första argumentet säger var man vill placera etiketterna för de olika kategorierna (i detta fall högst upp till höger). Det andra argumentet säger vilka namn man vill ha på dessa etiketter (category_names används här) och det tredje argumentet säger till vilka färger man vill ha. Det är då viktigt att man använder sig av samma färger som man använde sig av i pie() funktionen ovan och att färgerna också kommer i samma ordning som ovan.\n\n💪 Uppgift 2.1\nSkapa ett pajdiagram av variabeln Class i titanic. Använd dig gärna av uträkningarna från Uppgift 1.2 för att skapa grafen. Välj själv om du vill illustrera det som andelar eller i procent.\n\n# Write your code here\n\n\n\n💪 Uppgift 2.2\nVad är det för fel på denna graf?\n\nrel_frequencies = c(0.1, 0.9)\ncategory_names = names(table_rel_freq)\ncolors = c(\"lightblue\", \"purple\")\npie(x =  table_rel_freq, labels = rel_frequencies, col = colors)\nlegend(\"topright\", legend = category_names, fill = colors)\n\n\n\n\nNedan syns ett exempel på hur man kan använda sig av stapeldiagram. Detta görs enklast med funktionen bargraph(), som liknar tally() funktionen i och med att den börjar med ett ~tecken följt av variabeln som vi vill rita och sedan datasetet det kommer ifrån. Lägg dock märke till att istället för att skriva format = proportion skriver man type = proportion om man vill visa staplarna som relativa frekvenser.\n\n\n\n\n\n\nObservera\n\n\n\nI det här fallet kommer variabeln Survived från en dataframe. Det är oftast smidigare att arbeta med dataframes i mosaic paketet men inte alltid nödvändigt. Funktionen hade också fungerat ifall man hade haft en enskild variabel som inte var i dataframe-format (se den utkommenterade raden i koden).\n\n\n\nbargraph(~ Survived, data = titanic, type = \"proportion\")\n\n\n\n# bargraph(~ titanic$Survived, type = \"proportion\") # without dataframe format\n\n\n\n\n \n\nMen detta diagram säger kanske inte allt om det vi tittar på. I vilket sammanhang är “Alive” och “Dead” tagit ifrån? Det finns ingen rubrik! Man skulle kanske även vilja justera sin y-axel, antingen så att den blir lite kortare eller lite längre.\nFörst kan man börja med att skapa en rubrik för sin graf. Detta görs nedan genom att skapa en ny variabel my_title som är en textsträng. Sedan kan man även definiera passande namn för både x-axeln och y-axeln, dessa är också textsträngar.\nFör att justera längden på y-axeln kan man skapa en vektor med passande värden. Här används en vektor med namnet length_y_axis som börjar på 0 och slutar på 0.75. Man kan även justera så att staplarna får valfria färger.\nSedan kan man enkelt sätta in argumenten i bargraph() funktionen till dessa värden:\n\nmy_title = \"Figur 1: Relative frequency of Survival on the Titanic\"\nx_axis_title = \"Survival\"\ny_axis_title = \"Frequency\"\nlength_y_axis = c(0, 0.80)\ncolors = c(\"lightblue\", \"purple\")\n\nbargraph(~ Survived, data = titanic, type = \"proportion\", main = my_title, \n         xlab = x_axis_title, ylab = y_axis_title, ylim = length_y_axis, col = colors)\n\n\n\n\nNär man skriver en Quarto-rapport är det inte så bra att skriva in figur-numret i själva grafen, dvs Figur 1, som vi skrev ovan. Problemet med det är att om man sen lägger in en graf mellan två grafer så måste man gå in och ändra alla figurers numrering. Om vi sen även har hänvisat till en figur i texten (t ex, se Figur 1 för en trevlig plott) så måste vi också ändra numret där. Men vi kan lösa detta genom att låta Quarto hålla koll på figurernas numrering. Så här:\n\nx_axis_title = \"Survival\"\ny_axis_title = \"Frequency\"\nlength_y_axis = c(0, 0.80)\ncolors = c(\"lightblue\", \"purple\")\n\nbargraph(~ Survived, data = titanic, type = \"proportion\", \n         xlab = x_axis_title, ylab = y_axis_title, ylim = length_y_axis, col = colors)\n\n\n\n\nFigur 1: Relative frequency of Survival on the Titanic\n\n\n\n\nMan kan nämligen ge lite extra kommandon i varje code-chunk genom att använda tecknet #| (uttalas hash-pipe, du kommer ihåg det genom denna Weezer-video). I det här fallet använde vi nyckelordet label för att ge figuren namnet fig-andelar och nyckelordet fig-cap för att ange texten till figuren. Notera att vi också tog bort argumentet main = my_title eftersom titel inte längre behövs i själva grafen. Vi kan nu hänvisa till figuren i texten med hjälp av @-tecknet (notera att du också kan klicka för transportera dig till figuren!): Se Figur 1 för en trevlig plott.\n\n\n💪 Uppgift 2.3\nJustera diagrammet nedan så att det ser mer presentabelt ut. Byt också ut färgerna mot två andra bland R’s standardfärger.\n\nx_axis_title = \"Survival\"\ny_axis_title = \"Frequency\"\nlength_y_axis = c(0, 0.1)\n\nbargraph(~ Survived, data = titanic, type = \"proportion\",  \n         xlab = x_axis_title, ylab = y_axis_title, ylim = length_y_axis, col = colors)\n\n\n\n\n\n\n💪 Uppgift 2.4\nRätta till felet i följande diagram:\n\nx_axis_title = \"Survival\"\ny_axis_title = \"Frequency\"\n\nbargraph(~ Survived, data = titanic, type = \"count\", \n         xlab = x_axis_title, ylab = y_axis_title, col = colors)\n\n\n\n\n\n\n💪 Uppgift 2.5\nSkapa ett stapeldiagram med funktionen bargraph() för variabeln Class i titanic. Använd relativa frekvenser denna gång.\n\n# Write your code here"
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html#dataset-som-består-av-saknade-värden",
    "href": "datorlab/lab2/DatorLab2.html#dataset-som-består-av-saknade-värden",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "3. Dataset som består av saknade värden",
    "text": "3. Dataset som består av saknade värden\nLåt oss titta närmare på variabeln Age (ålder) i datasetet titanic. Denna variabel har en del saknade värden och vissa standard-funktioner i R är känsliga för sådana. Man kan enkelt se om en variabel har saknade värden genom att använda summary() funktionen, som räknar ute lite sammanfattningsmått (mer om det senare) för variablerna i datamaterialet. R skriver NA (Not Available) eller (NaN) (Not A Number) för saknade värden, och vi kan se att variabeln Age har 3 st saknade värden (NA's :3):\n\nsummary(titanic)\n\n     Name             Survived           Boarded             Class          \n Length:2208        Length:2208        Length:2208        Length:2208       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     MWC                 Age        Adut_or_Chld           Sex           \n Length:2208        Min.   : 0.08   Length:2208        Length:2208       \n Class :character   1st Qu.:22.00   Class :character   Class :character  \n Mode  :character   Median :29.00   Mode  :character   Mode  :character  \n                    Mean   :30.15                                        \n                    3rd Qu.:37.00                                        \n                    Max.   :74.00                                        \n                    NA's   :3                                            \n      Paid          Ticket_No         Boat_or_Body           Job           \n Min.   :  0.000   Length:2208        Length:2208        Length:2208       \n 1st Qu.:  7.896   Class :character   Class :character   Class :character  \n Median : 14.400   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 33.010                                                           \n 3rd Qu.: 31.000                                                           \n Max.   :512.329                                                           \n NA's   :890                                                               \n  Class_Dept         Class_Full       \n Length:2208        Length:2208       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n\n\nDet finns olika sätt att hantera saknade värden. Många funktioner kan hantera uträkningar för variabler med saknade värden om man specificerar det i funktionen. I detta fall är vi bara intresserade av en variabel och inte hela datasetet så vi kommer att ta bort de observationer som har saknade värden. Men i vanliga fall måste man tänka efter innan man tar bort sådana observationer, speciellt om man tittar på flera variabler samtidigt. Det finns mer att säga om att bara ta bort saknade värden när vi kommer till den statistiska analysen.\nFunktionen na.omit() tar bort alla observationer som har NA eller NaN, dvs saknade värden.\n\nlength(titanic$Age) # number of observations originally\n\n[1] 2208\n\nAge = na.omit(titanic$Age)\nlength(Age) # the number of observations when missing values are removed\n\n[1] 2205\n\n\n\n💪 Uppgift 3.1\nDefiniera en ny variabel Paid från kolumnen Paid i datasetet titanic på liknande sätt som ovan. Rensa bort eventuella saknade värden med funktionen na.omit().\n\n# Write your code here"
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html#grafisk-presentation-av-numeriska-variabler",
    "href": "datorlab/lab2/DatorLab2.html#grafisk-presentation-av-numeriska-variabler",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "4. Grafisk presentation av numeriska variabler",
    "text": "4. Grafisk presentation av numeriska variabler\nNumeriska variabler är sådana som naturligt består av numeriska värden. Numeriska variabler kan ha olika skaltyper. Numeriska variabler innehåller rikare information än kategoriska variabler, där man kan få ut mer information både numeriskt och grafiskt. En numerisk variabel kan alltid kodas om till en kategorisk variabel (en variabel på en lägre skalnivå) men det omvända gäller inte.\nAtt illustrera numeriska variabler grafiskt är betydelsefullt för att upptäcka ifall en fördelning har avvikande värden (så kallade outliers), eller om fördelningen ser symmetrisk eller skev ut, men också för att upptäcka om det är en unimodal eller multimodal fördelning. Vid de två senare fallen är histogram och täthetsplot särskilt användbara.\nDe vanligaste graferna för numeriska variabler är histogram och låddiagram, s.k. boxplots. Ni kommer lära er att plotta låddiagram i Datorlaboration 3 efter att ni gått igenom dom på Föreläsning 5. En täthetsplot är en utjämnad version av ett histogram.\nHistogram kan ritas med hjälp av funktionen histogram() som finns i mosaic paketet, eller med funktionen hist() som inte kräver något paket. Båda har sina fördelar, där histogram är mer smidig när man vill rita flera histogram samtidigt (mer om detta i Datorlaboration 3). Här är ett exempel med funktionen histogram():\n\nhistogram(~ Age, data = titanic, col = \"navyblue\")\n\n\n\n\nFigur 2: Distribution of Age onboard the Titanic\n\n\n\n\nFördelningen är inte symmetrisk här utan snarare skev åt höger, dvs. det finns en lång högersvans. Men det finns även en hel del observationer bestående av barn under fem år. Eftersom fördelningen är skev är det svårare att gissa sig till medelvärdet. De flesta individerna verkar dock ha varit mellan 15-45 år.\nArgumentet breaks = kan användas inuti funktionen histogram() för att ange hur många staplar man vill ha. R kommer då i så hög mån som möjligt rita ett histogram med så många staplar.\nEtt histograms utseende beror på antalet staplar man väljer. En täthetsplot är ett sätt att plotta fördelningen av data som inte beror på antalet staplar. En täthetsplot kan ritas med hjälp av funktionen densityplot() som finns i mosaic paketet.\n\ndensityplot(~ Age, data = titanic, col = \"navyblue\")\n\n\n\n\nFigur 3: Distribution of Age onboard the Titanic\n\n\n\n\n\n💪 Uppgift 4.1\nRita ett histogram likt ovan, med samma variabel men med en annan färg. Testa dig fram med breaks argumentet tills du hittar vad du tycker är ett passande antal staplar. Rita sedan ett till likadant histogram men använd dig av Sturges regel denna gång för att bestämma hur många staplar som ska användas. Ser histogrammet bättre ut än det du ritade utan Sturges regel?\n\n# Write your code here\n\n\n\n\n\n\n\nTips\n\n\n\nStruges regel ges av \\(1 + log_2(n)\\), där n är antalet dataobservationer. I R kan funktionen för logaritmen med basen 2 fås som log2().\n\n\n\nAnvänd listan i Appendix för olika argument som kan användas i grafer för att göra dem mer informativa.\n\n\n\n💪 Uppgift 4.2\nRita ett histogram över variabeln Paid.\n\n# Write your code here\n\n\n\n💪 Uppgift 4.3\nVilket mått av medelvärdet eller medianen beskriver centralpunkten i fördelningen för Paid bäst?\n\n\n💪 Uppgift 4.4\nRita täthetsplottar för variablerna Age och Paid.\n\n# Write your code here\n\n\n\n\n\n\n\nExtra: Från histogram till Stapeldiagram (detta avsnitt kan skippas)\n\n\n\nHistogram kan ses som en motsvarighet till stapeldiagram när man har en numerisk variabel. Från funktionen hist() kan man även hämta ut hur många observationer det är som tillfaller varje åldersintervall. Låt oss först rita ett histogram nedan och spara detta med namnet hist_Age. Sedan kan man extrahera antalet inom varje åldersintervall med hjälp av $-tecknet följt av count som räknar ut antal observationer inom varje intervall.\n\nhist_Age = hist(x = Age,  col = \"coral\")\n\n\n\nfrequencies = hist_Age$count\nfrequencies\n\n [1]  62  38  33 271 432 400 321 264 158 103  49  37  28   5   4\n\n\nDessa summeras inte överraskande nog till 2205 (dvs antal observerade värden). Härnäst kan man titta på hur R definierar gränserna för varje stapel med hjälp av breaks som också finns i hist() funktionen:\n\nhist_Age$breaks\n\n [1]  0  5 10 15 20 25 30 35 40 45 50 55 60 65 70 75\n\n\nVi har alltså åldersintervallen “0-4”, “5-9”, “10-14”, “15-19”, “20-24”, “25-29”, “30-34”, “35-39”, “40-44”, “45-49”, “50-54”, “55-59”, “60-64”, “65-69”, “70-74”. Dessa kan användas för att skapa ett stapeldiagram likt nedan, denna gång med funktionen barplot() som finns inbyggd i R.\nI det första argumentet i funktionen barplot() lägger vi in frekvenserna som nyss räknades ut. Det andra argumentet names.arg är till för att namnge de olika åldersintervallen ovan, på x-axeln. Argumentet las = 3 gör endast så att texten på x-axeln blir lodrät.\n\nAge_Intervals = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \n              \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65-69\",\n              \"70-74\")\n\nbarplot(frequencies, names.arg = Age_Intervals, las = 3,\n        main = \"Frequency of Age onboard the Titanic\")\n\n\n\n\nHistogrammet som skapades innan går alltså i princip att göra om till ett stapeldiagram, där höjden på stapeln illustrerar hur många observationer det är som tillfaller varje ålderskategori."
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html#numerisk-beskrivning-av-kvantitiva-variabler",
    "href": "datorlab/lab2/DatorLab2.html#numerisk-beskrivning-av-kvantitiva-variabler",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "5. Numerisk beskrivning av kvantitiva variabler",
    "text": "5. Numerisk beskrivning av kvantitiva variabler\nOm man använder sig av en frekvenstabell för en numerisk variabel riskerar man i värsta fall att få en tabell som är lika lång som antal observationer man har. Kanske har man inte ens ett enda fall där två olika observationer har samma värden. Därför används ofta andra beskrivande mått. Bland de viktigaste är lägesmåtten som fångar fördelningens mittpunkt\n\nmedelvärde\nmedian\n\noch spridningsmåtten som mäter variationen kring fördelningens mittpunkt:\n\nvarians\nstandardavvikelse\nvariationsbredd (range på engelska: skillnaden mellan maximum och minimumvärdet)\nInterkvartila avståndet (IQR).\n\nFunktionen favstats() i mosaic-paketet beräknar dessa mått:\n\nfavstats(~ Age, data = titanic)\n\n  min Q1 median Q3 max     mean       sd    n missing\n 0.08 22     29 37  74 30.14689 11.97386 2205       3\n\n\nFunktionen räknar ut olika fördelningsmått, såsom minimumvärdet, maximumvärdet, första och tredje kvartilen samt medelvärdet och medianen. Både medelvärdet och medianen är mått på en fördelnings mittpunkt men hur lämpliga de är som mått beror på fördelningens utseende. Vi ser även att funktionen också skriver ut hur många värden datasetet består av och antalet saknade värden.\nIbland vill man dock inte skriva ut all denna information för en variabel. I Datorlaboration 1 använde vi oss av funktionen mean() för att räkna ut medelvärdet av en variabel. Några andra vanliga funktioner utöver dessa är var() och sd(). Matematiskt motvaras dessa tre funktioner av: \\[\\begin{align}\\nonumber\n\\overline{y}= \\frac{1}{n} \\sum_{i=1}^n y_i \\\\ \\nonumber\ns^2 =\\frac{\\sum_{i=1}^n(y_i-\\overline{y})^2}{n-1}\n\\end{align}\\] och \\[\\begin{align}\ns = \\sqrt{s^2}\n\\end{align}\\]\n\n💪 Uppgift 5.1\nAnvänd funktionerna ovan för att räkna ut medelvärdet, variansen och standardavvikelsen för variabeln Age. Kan man räkna ut standardavvikelsen på något annat sätt i R?\n\n# Write your code here\n\n\n\n💪 Uppgift 5.2\nRäkna ut det variationsbredden samt det interkvartila avståndet av variabeln Age från utskriften vi fick från funktionen favstats().\n\n# Write your code here"
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html#indexering-och-upprepning-loopar",
    "href": "datorlab/lab2/DatorLab2.html#indexering-och-upprepning-loopar",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "6. Indexering och upprepning (loopar)",
    "text": "6. Indexering och upprepning (loopar)\nLåt oss titta på ett dataset över UFC’s top 10 kampsportsutövare i Welterweight klassen bland män (december 2022). Nedan matas värdena in i vektorer och sedan sätts alla variabler ihop i en och samma tabell med funktionen data.frame():\n\n# Defining variables:\nName = c(\"Kamaru Usman\", \"Colby Covington\", \"Khamzat Chimaev\", \"Belal Muhammed\",\n         \"Gilbert Burns\",\"Stephen Thompson\", \"Geoff Neal\", \"Sean Brady\", \n         \"Vicente Luque\", \"Shavkat Rakhmanov\" )\nRank = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\nWins_by_knockout = c(9, 4, 6, 5, 6, 8, 9, 3, 11, 8)\nTakedown_avg = c(3.01, 4.05, 3.98, 2.19, 2, 0.27, 0.59, 2.8, 0.51, 2.31)\nAge_fighters = c(35,34,27, 34, 35, 39, 31, 29, 30, 27)\n\n# Creating a dataframe with all the variables just defined above:\nUFC = data.frame(Name, Rank, Wins_by_knockout, Takedown_avg, Age_fighters)\nUFC\n\n                Name Rank Wins_by_knockout Takedown_avg Age_fighters\n1       Kamaru Usman    1                9         3.01           35\n2    Colby Covington    2                4         4.05           34\n3    Khamzat Chimaev    3                6         3.98           27\n4     Belal Muhammed    4                5         2.19           34\n5      Gilbert Burns    5                6         2.00           35\n6   Stephen Thompson    6                8         0.27           39\n7         Geoff Neal    7                9         0.59           31\n8         Sean Brady    8                3         2.80           29\n9      Vicente Luque    9               11         0.51           30\n10 Shavkat Rakhmanov   10                8         2.31           27\n\n\nDatasetet består av fem stycken variabler och är sorterat efter Rank. I Lab 1 tittade vi lite på indexering och detta bygger vidare på det. Låt säga att vi vill veta vad åldern är för den 6:e rankade utövaren. I detta fall är datasetet väldigt litet och man kan genast identifiera alla individer. Ibland har vi dataset som är väldigt stora och då kan man behöva använda sig av indexering för att få ut information om en enskild (eller ett fåtal) observationer av intresse. För att ta reda på åldern på den 6:e rankade utövaren kan man då använda sig av koden UFC[6, 5]. Där siffran till vänster om kommatecknet i hakparantesen anger radtalet och siffran till höger om kommatecknet anger kolumntalet. Detta ger oss svaret 39.\n\n💪 Uppgift 6.1\nAnvänd indexering för att skriva ut hur många wins by knockout Gilbert Burns har haft.\n\n# Write your code here\n\n\n\n💪 Uppgift 6.2\nAnvänd indexering för att skriva ut all information om Kamaru Usman (dvs den första raden). [Ledtråd: om man inte skriver något alls efter kommatecknet i indexeringen får man alla värden i den raden]\n\n# Write your code here\n\n\n\n💪 Uppgift 6.3\nAnvänd indexering för att skriva ut alla värden för variabeln Takedown_avg (dvs den 4:e kolumnen).\n\n# Write your code here\n\nEn loop kan väldigt kort beskrivas som en procedur som återupprepas så länge ett visst förhållande är uppfyllt. Det finns tre vanliga loopar i R. Dessa är for-loop, while-loop och repeat-loop. De två första är de vanligaste men vi kommer än så länge bara titta på for-loopen.\nSäg att du vill skriva en kod som skriver ut alla tal mellan 1 och 10 på skärmen. Du skulle kunna skriva print(1) följt av print(2) osv, men skulle vara jobbigt. Kan vi få datorn att göra det jobbet åt oss genom att använda en for-loop? Svar ja. Nedan ges ett exempel på en loop som skriver ut talen mellan 1-10 med hjälp av print() funktionen. Det är ett exempel på den kanske mest grundläggande loopen, men den illustrerar ändå en viktig princip. För att starta loopen används ordet for följt av en parentes. Vad som står inom parentesen är väldigt viktigt och det första argumentet är namnet på en så kallad indexvariabel, i detta fall i. Efter detta specificerar man från vilken siffra i börjar på samt vilken siffra i slutar på. Här börjar den på 1 och slutar på 10. Efter parentesen bildar man en ny så kallad klammerparentes (som ser ut som måsvingar). Där inne specificerar man allt som ska hända i varje upprepningen i loopen. I det här exemplet vill vi att loopen ska skriva ut indexnumret, ett i taget:\n\nfor (i in 1:10){\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n\n\nAlltså skriver loopen ut vad i är under varje iteration (dvs upprepning).\n\n\n💪 Uppgift 6.4\nAnvänd loopen ovan men byt ut indexvariabeln i till k istället. Kör sedan loopen. Vad är det som händer?\n\n# Write your code here\n\n\n\n💪 Uppgift 6.5\nAnvänd återigen loopen i exemplet ovan. Men ändra variabeln is definitionsmängd från 1:10 till 24:33.\n\n# Write your code here\n\n\n\n💪 Uppgift 6.6\nGör på samma vis som i övningen ovan men ändra nu definitionsmängden från 1:10 till -3:5\n\n# Write your code here\n\nNedan ges ett exempel på en for-loop som skriver ut namnet på en enskild variabel (Name) i tur och ordning. Här används indexering av variabeln Name för att endast ett namn ska skrivas ut i varje iteration, och då i samma ordning som den förekommer i variabeln.\n\nfor(i in 1:10){\n  print(Name[i])\n}\n\n[1] \"Kamaru Usman\"\n[1] \"Colby Covington\"\n[1] \"Khamzat Chimaev\"\n[1] \"Belal Muhammed\"\n[1] \"Gilbert Burns\"\n[1] \"Stephen Thompson\"\n[1] \"Geoff Neal\"\n[1] \"Sean Brady\"\n[1] \"Vicente Luque\"\n[1] \"Shavkat Rakhmanov\"\n\n\n\n\n\n\n\n\nObservera\n\n\n\nHär användes endast en variabel Name (som faktiskt definierades innan dataframen UFC). Därför används inte något kommatecken inuti hakparantesen. Det beror alltså på att det här är en enskild definierad variabel utanför dataframen UFC.\n\n\n\n\n💪 Uppgift 6.7\nAnvänd en for-loop för att skriva ut varje värde på variabeln Wins_by_knockout.\n\n# Write your code here\n\nDen introduktionen till loopar kan räcka för tillfället. Men om du tyckte det var intressant kan du fortsätta läsa lite mer om loopar nedan. Annars kan du hoppas till Sammanfattningen av Lab 2.\nMan kan även göra matematiska uträkningar med hjälp av en loop. Låt säga att vi vill räkna ut vad \\(2^6\\) är (där 2 är basen och 6 är exponenten). Detta kan enkelt göras med den matematiska operationen ^ i R vilket ger oss resultatet 64. Men eftersom vi älskar att loopa så kommer vi också älska följande exempel där vi räknar ut detta värde för hand med en loop.\nFörst måste man definiera ett startvärde. Detta görs med variabeln myProduct nedan. Eftersom uträkningen av \\(2^6 = 2\\cdot 2\\cdot 2\\cdot 2\\cdot 2\\cdot 2 = 64\\) egentligen bara är multiplikation, måste startvärdet vara like med 1 (används 0 kommer slutresultatet också att bli 0). Därefter kan loopen startas. Den kommer att iterera från värdet 1 till 6 (eftersom exponenten är 6). Efter första iterationen (loop-omgången) kommer myProduct att vara 1 multiplicerat med 2, dvs 2. Detta värde sparas i myProduct och syns när man skriver ut resultatet med print(myProduct) inuti loopen. I den andra iterationen multipliceras myProduct med 2 igen, och detta värde sparas nu i myProduct. Resultatet är \\(2\\cdot2=4\\). Den tredje iterationen multipliceras 4 med 2 och myProduct uppdateras till detta nya värde 8. Denna procedur upprepas tills antal iterationer i har nått upp till 6 gånger. Därefter avslutas loopen och myProduct visar då svaret på vad \\(2^6\\) är:\n\nmyProduct = 1 # We have to start with 1 here since it's multiplication\n\nfor (i in 1:6){\n  myProduct = myProduct * 2  # multiplying with 2 in each iteration\n  print(myProduct) # prints the result after each iteration\n}\n\n[1] 2\n[1] 4\n[1] 8\n[1] 16\n[1] 32\n[1] 64\n\nmyProduct # final result\n\n[1] 64\n\n\n\n\n💪 Uppgift 6.8\nFunktionen sum() i R kan användas för att summera numeriska värden i en vektor. Använd denna funktion för att räkna ut medelvärdet för variabeln Age_fighters ovan.\n\n# Write your code here\n\n\n\n\n\n\n\nTips\n\n\n\nMedelvärdet ges av formeln: \\[\\begin{align}\n\\nonumber \\overline{y}= \\frac{1}{n} \\sum_{i=1}^n y_i\n\\end{align}\\]\n\n\n\n\n💪 Uppgift 6.9\nAnvänd en for-loop för att räkna ut medelvärdet för variabeln Age_fighters.\n\n# Write your code here\n\n\n\n\n\n\n\nTips\n\n\n\nSkapa ett startvärde för summan och sätt detta värde till 0. Sedan inuti loopen måste du också använda dig av indexering för att säga till R vilket värde i denna variabel du vill addera till din befintliga summa."
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html#sammanfattning",
    "href": "datorlab/lab2/DatorLab2.html#sammanfattning",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "7. Sammanfattning",
    "text": "7. Sammanfattning\n\n\n\n\n\n\nI den här laborationen har du lärt dig:\n\n\n\n\nMetoder för att presentera en variabels fördelning och att man använder olika metoder beroende på om en variabel är numerisk eller kategorisk.\nHur man praktiskt kan presentera kategoriska variabler i tabellform samt illustrera dem grafiskt med paj- och stapeldiagram.\nHur man kan rita ett histogram och en täthetsplot.\nKopplingen mellan histogram och stapeldiagram.\nVilka beskrivande mått man kan använda sig av för numeriska variabler.\nNågra exempel på vad en for-loop kan användas till."
  },
  {
    "objectID": "datorlab/lab2/DatorLab2.html#a.-appendix",
    "href": "datorlab/lab2/DatorLab2.html#a.-appendix",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "A. Appendix",
    "text": "A. Appendix\nLista över några vanliga argument i grafer\n\ncol = färg, kan markeras med siffror eller med namnet på färgen, oftast med små bokstäver. Glöm ej att texten måste ligga inom citattecken.\nmain = rubrik på plotten, detta sätts till en textsträng, alltså en text inom citattecken.\nxlab = rubrik på x-axeln, detta sätts till en textsträng, alltså en text inom citattecken.\nylab = rubrik på y-axeln, detta sätts till en textsträng, alltså en text inom citattecken.\nxlim = definitionsområde för x-axeln. Exempelvis betyder xlim = c(0, 14.3) att det lägsta värdet som ritas kommer att vara 0 och det högsta värdet kommer att vara 14.3 (på x-axeln).\nylim = definitionsområde för y-axeln. Exempelvis betyder ylim = c(-2, 20.7) att det lägsta värdet som ritas kommer att vara -2 och det högsta värdet kommer att vara 20.7 (på y-axeln).\nlwd = tjocklecken på linjer (eller prickar) i ett linjediagram (spridningsdiagram), anges med ett nummer.\nlty = typ av linje (rak, streckad, prickad etc) i ett linjediagram, anges med ett nummer.\npch = typ av prick (rund, fyrkantig + * etc), sätts till ett nummer.\nbreaks = antal staplar i ett histogram.\ncex = justering av etiketternas storlek i en figur (exempelvis cex = 0.5 i en legend() funktion minskar storleken som “legend-texten” tar upp i en figur med hälften). Finns även exempelvis cex.axis, cex.main för att justera storleken av texter på axlar respektive rubrik.\nbg = bakgrundsfärg i en figur.\ncol.main = rubrikens färg.\ncol.lab = färger för rubrikerna på axlarna.\nfont = specificerar vilken typ av text man vill ha, exempelvis ger font = 3 kursiv text."
  },
  {
    "objectID": "Del1.html",
    "href": "Del1.html",
    "title": "Del I - Dataanalys och Regression, 7.5 hp",
    "section": "",
    "text": "I det här momentet ingår insamling, bearbetning, visualisering och sammanfattning av data i programspråket R. En stor del av momentet behandlar sambands- och regressionsanalys som utmynnar i metoder för prediktion.\n\nFörkortningen SDM står för kursboken Stats: Data and Models 5:e upplagan, global edition.\nUnder vissa föreläsningar länkar vi till Extramaterial. Det är material som inte krävs för att klara kursen, men som den nyfikne kan läsa för att få en djupare förståelse.\n\nFöreläsningar\nFöreläsning 1 - Introduktion.\nLäs: SDM Kapitel 1 | Slides\nFöreläsning 2 - Introduktion till R. \nLäs: LITTERATUR | Slides\nFöreläsning 3 - Hantera och beskriva data.\nLäs: SDM Kapitel 2 | Slides\nWidget: histogram\nFöreläsning 4 - Samband mellan kategoriska variabler.\nLäs: SDM Kapitel 3 | Slides\nFöreläsning 5 - Jämföra fördelningar. Tidsserier. Transformationer.\nLäs: SDM Kapitel 4 | Slides\nFöreläsning 6 - Standardisering och Normalmodellen.\nLäs: SDM Kapitel 5 | Slides\nFöreläsning 7 - Samband mellan numeriska variabler.\nLäs: SDM Kapitel 6 | Slides\nFöreläsning 8 - Enkel linjär regression.\nLäs: SDM Kapitel 7 | Slides\nFöreläsning 9 - Multipel regression.\nLäs: SDM Kapitel 8-9 | Slides\nFöreläsning 10 - Populationer och stickprov. Undersökningar och experiment.\nLäs: SDM 10.1-10.3 och 11.1-11.2 | Slides\nFöreläsning 11 - Sammanfattning\nLäs: Slides\nVideoföreläsning - Matematikrepetition.\nLäs: Slides\n\n\nRäkneövningar\nÖvningarna i kursboken Stats: Data and Models (SDM) hänvisas till med kapitelnummer följt av övningsnummer.\nÖvning 1 - Beskrivande statistik.\nUppgifter: SDM 2.1, 2.2, 2.6, 2.7, 2.9, 2.11, 2.12, 2.14, 2.15, 2.16, 2.17, 2.20, 2.21, 2.24.\nÖvning 2 - Samband mellan kategoriska variabler och korstabeller.\nUppgifter: SDM 3.1, 3.3, 3.5, 3.6, 3.7, 3.9, 3.25, 3.31, 3.39, 3.41, 3.47, 4.1, 4.3, 4.14, 4.17, 4.45.\nÖvning 3 - Standardavvikelse och standardisering. Normalmodellen.\nUppgifter: SDM 5.1, 5.2, 5.4, 5.5, 5.8, 5.10, 5.14, 5.16, 5.17, 5.30, 5.42, 5.48.\nÖvning 4 - Korrelation och enkel linjär regression.\nUppgifter: SDM 6.2, 6.3, 6.5, 6.6, 6.9, 6.14, 6.20, 7.1, 7.2, 7.3, 7.4, 7.5, 7.7, 7.9, 7.11, 7.13, 7.15, 7.19, 7.23, 7.27, 7.52.\nÖvning 5 - Estimering och tolkning av enkel linjär regression.\nUppgifter: SDM Kapitel 8.18, 8.20, 9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.9, 9.11, 9.14, 9.16, 9.22, 9.23, 9.28.\nÖvning 6 - Prediktion med enkel linjär regression.\nUppgifter: Meddelas snart\n\n\nDatorlaborationer\nDatorlaboration 1 - Introduktion till R\nUppgifter: html\nDatorlaboration 2 - Beskrivande statistik och visualisering i R\nUppgifter: html | quarto\nDatorlaboration 3 - Samband, korrelation och enkel linjär regression\nUppgifter: Datorlab 3\nDatorlaboration 4 - Multipel linjär regression\nUppgifter: Datorlab 4"
  },
  {
    "objectID": "observable/storatalenslag.html",
    "href": "observable/storatalenslag.html",
    "title": "Stora talens lag - Bernoullifördelning",
    "section": "",
    "text": "Adaption från Marc McClures Law of Large Numbers"
  },
  {
    "objectID": "tutorials/ReadingDataFromFile/ReadingDataFromFile.html",
    "href": "tutorials/ReadingDataFromFile/ReadingDataFromFile.html",
    "title": "Reading data from an file",
    "section": "",
    "text": "Data often come in the form of Excel files, usually named SomeData.xls or SomeData.xlsx, where SomeData is the name that you or someone else have given to the file. Excel stores data as tables with rows and columns, like this:\n\n\n\n\n\nExcel files may contain more than one dataset, organized as Excel sheets. Here is an example (note the multiple sheets at the bottom):"
  },
  {
    "objectID": "tutorials/ReadingDataFromFile/ReadingDataFromFile.html#reading-data-from-an-excel-file-in-r",
    "href": "tutorials/ReadingDataFromFile/ReadingDataFromFile.html#reading-data-from-an-excel-file-in-r",
    "title": "Reading data from an file",
    "section": "Reading data from an Excel file in R",
    "text": "Reading data from an Excel file in R\nThere are many R packages for reading data from Excel. We will be using the readxl package here. This installs and loads the readxl package:\n\n#install.packages(\"readxl\") # Installs the readxl package. Do it only once.\nlibrary(\"readxl\")           # loads the readxl package. Do it once per R session.\n\n\n\n\n\n\n\nNote\n\n\n\nI have commented out the installation of the package by putting a # sign in front of the command install.packages(\"readxl\"). So this command will not be executed/run. I already have that package installed on my computer and don’t want to re-install it. You have to uncomment, that is remove the sign #, before running this on your computer, if you haven’t installed this package already.\n\n\n\ntour_de_france <- read_excel('Tour_de_France_2017.xlsx', sheet = 1)\n\nThe argument sheet=1 tells R to read data from the first sheet in the Excel file. If you want to the read data from the third sheet in an Excel file, then just replace 1 with 3 (the Tour de France data has only one sheet, however).\n\n\n\n\n\n\nImportant\n\n\n\nI placed the file Tour_de_France_2017.xlsx in my working directory. If the file with data is at a different place on your computer then you need to include the search path to the file before the file name. For example, on a computer running Windows, if your data is stored in the Documents folder, then replace the command above with\ntour_de_france <- read_excel('C:\\Documents\\Tour_de_France_2017.xlsx', sheet = 1)\n\n\n\n\n\n\n\n\nTip\n\n\n\nRather than telling R explicitly where your data are stored, you can also use the command\ntour_de_france <- read_excel(file.choose(), sheet = 1)\nwhich will open up a window where you can look up the file in your file explorer and it will then read the first sheet (again the 1 in the command) of that file. This is convenient, but I don’t recommend it (lousy tip! 🙄) since you then have to click your way to the file everytime you re-run your R code.\n\n\nWe have now read the dataset into a variable that I have chosen to call tour_de_france. We can now just type the name of this variable in the Console in R to see the data.\n\ntour_de_france\n\n# A tibble: 104 × 12\n    Year Winner             Country   Age Team  `Total Time(h.…` `Total Time(h)`\n   <dbl> <chr>              <chr>   <dbl> <chr> <chr>                      <dbl>\n 1  1903 Maurice Garin      France     32 La F… 94.33.00                    94.6\n 2  1904 Henri Cornet       France     20 Cycl… 96.05.56                    96.1\n 3  1905 Louis Trousselier  France     24 Peug… 110.26.58                  110. \n 4  1906 Ren� Pottier       France     27 Peug… 189.34.00                  190. \n 5  1907 Lucien Petit-Bret… France     24 Peug… 158.45.05                  159. \n 6  1908 Lucien Petit-Bret… France     25 Peug… 156.53.29                  157. \n 7  1909 Fran�ois Faber     Luxemb…    22 Alcy… 157.01.22                  157. \n 8  1910 Octave Lapize      France     21 Alcy… 162.41.30                  163. \n 9  1911 Gustave Garrigou   France     27 Alcy… 195.37.00                  196. \n10  1912 Odile Defraye      Belgium    24 Alcy… 190.30.28                  191. \n# … with 94 more rows, and 5 more variables: `Average Speed` <dbl>,\n#   Stages <dbl>, `Total Distance Ridden` <dbl>, `Starting Riders` <dbl>,\n#   `Finishing Riders` <dbl>\n\n\nWe can see two things: 1) some accented letters like é were replaced by a question mark, 2) the dataset is store in a tibble data structure. A tibble is tidyverse’s (this alternative dialect of R) version of a dataframe. It is best for us to convert this into a dataframe, which can be done with the command (note that we are overwriting the variable tour_de_france):\n\ntour_de_france = data.frame(tour_de_france)\n\nTo get a quick look at the data, the head command is useful, showing only the first few observations of the dataset:\n\nhead(tour_de_france)\n\n  Year              Winner Country Age         Team Total.Time.h.min.sec.\n1 1903       Maurice Garin  France  32 La Fran�aise              94.33.00\n2 1904        Henri Cornet  France  20    Cycles JC              96.05.56\n3 1905   Louis Trousselier  France  24      Peugeot             110.26.58\n4 1906        Ren� Pottier  France  27      Peugeot             189.34.00\n5 1907 Lucien Petit-Breton  France  24      Peugeot             158.45.05\n6 1908 Lucien Petit-Breton  France  25      Peugeot             156.53.29\n  Total.Time.h. Average.Speed Stages Total.Distance.Ridden Starting.Riders\n1      94.55000        25.679      6                  2428              60\n2      96.09889        25.265      6                  2428              88\n3     110.44944        27.107     11                  2994              60\n4     189.56667        24.463     13                  4637              82\n5     158.75139        28.470     14                  4488              93\n6     156.89139        28.740     14                  4488             112\n  Finishing.Riders\n1               21\n2               27\n3               24\n4               14\n5               33\n6               36\n\n\nYou can now start analyzing the data in different ways, perhaps plotting the average speed variable over the year that Tour de France has run:\n\nplot(Average.Speed ~ Year, data = tour_de_france)\n\n\n\n\nThe average speed has increased over the year. Notable exceptions are the years during following the first world war."
  },
  {
    "objectID": "tutorials/ReadingDataFromFile/ReadingDataFromFile.html#reading-data-from-text-.txt-and-.csv-files",
    "href": "tutorials/ReadingDataFromFile/ReadingDataFromFile.html#reading-data-from-text-.txt-and-.csv-files",
    "title": "Reading data from an file",
    "section": "Reading data from text (.txt) and .csv files",
    "text": "Reading data from text (.txt) and .csv files\nData may also come as a pure text file, often with the file ending .txt. Such files contain a simple table with the data. The first row may or may not contain the names of the variables in the columns. The columns are separated by a separator, typically a comma (,) or a TAB (blank space of a certain width). Here is an example with data from Indy car drivers:\n\n\n\n\n\nNote how the columns are not nice aligned, but clearly separated by blank space (TAB) so that R can understand which numbers belongs to which variable (column). Note also that the first row contain the variable names: Year, Winner, Chassis, Engine, Speed, Time_hrs and Distance.\nLet’s read this text file with data into R using the built-in function read.delim\n\nindy <- read.delim('Indy_500_2018.txt', header = TRUE)\nhead(indy)\n\n  Year        Winner  Chassis   Engine Speed.computed Time_hrs Distance\n1 1911   Ray Harroun   Marmon   Marmon       74.60212 6.702222      500\n2 1912    Joe Dawson National National       78.71950 6.351667      500\n3 1913    Jules Goux  Peugeot  Peugeot       75.93335 6.584722      500\n4 1914   Rene Thomas   Delage   Delage       82.47423 6.062500      500\n5 1915 Ralph DePalma Mercedes Mercedes       89.84049 5.565419      500\n6 1916   Dario Resta  Peugeot  Peugeot       84.00093 3.571389      300\n\n\nwhere the argument header = TRUE tells R that the first row in the dataset contains the names of the variables in the data.\nFinally, a very common file format are, comma-separated values files, often called csv for short. These are similar to txt files, but are read into R using the built-in read.csv function.\n\n\n\n\n\n\nTip\n\n\n\nBoth the read.delim and read.csv have an argument sep that can be used to specify which delimiter is used in the file. For example, a txt files where the columns are separated by a comma instead of TAB can be read by the command:\nmy_data <- read.delim('myfile.txt', sep = \",\", header = TRUE)"
  },
  {
    "objectID": "tutorials/Quarto/QuartoReportExample.html",
    "href": "tutorials/Quarto/QuartoReportExample.html",
    "title": "Quarto",
    "section": "",
    "text": "This is an example of report from a Quarto document (with file format .qmd ). You can look at the html or pdf version of the document to spot things you like to learn how to do in Quarto and then go to the corresponding place in the .qmd file to see how I did it.\n\n\n\n\n\n\nQuarto official help\n\n\n\nThe Quarto website is very helpful for learning about Quarto. You can search (upper right corner) for specific things that you want to do in Quarto. Try for example searching for bold to see how you get bold text.\n\n\nAt the top of the file is the so called YAML, which contains the settings of the document."
  },
  {
    "objectID": "tutorials/Quarto/QuartoReportExample.html#formatted-text-with-markdown",
    "href": "tutorials/Quarto/QuartoReportExample.html#formatted-text-with-markdown",
    "title": "Quarto",
    "section": "2. Formatted text with markdown",
    "text": "2. Formatted text with markdown\nQuarto documents uses a special language called markdown to write formatted (pretty looking) text like bold text or italic text.\nYou can make lists\n\nThis is an item\nand this is another one\nthe this is the last one\n\nOr numbered lists\n\nItem one\nItem two\nThe last item\n\nOr even lists like this:\n\nComputer lab 1\nComputer lab 2\nComputer lab 3\n\nYou can use footnotes. 1\nLinks to webpages: markdown cheat sheet\nHorizontal lines to be break up paragraphs\n\n\nand who doesn’t like a little wise quote?\n\nYou can also use titles of section of different sizes:"
  },
  {
    "objectID": "tutorials/Quarto/QuartoReportExample.html#header-2",
    "href": "tutorials/Quarto/QuartoReportExample.html#header-2",
    "title": "Quarto",
    "section": "Header 2",
    "text": "Header 2\n\nHeader 3\n\nHeader 4"
  },
  {
    "objectID": "tutorials/Quarto/QuartoReportExample.html#tables",
    "href": "tutorials/Quarto/QuartoReportExample.html#tables",
    "title": "Quarto",
    "section": "3. Tables",
    "text": "3. Tables\n\n\n\nName\nTitle\nParking space\n\n\n\n\nMike\nPhD student\nNo\n\n\nSarah\nProfessor\nYes\n\n\nDeborah\nLecturer\nNo"
  },
  {
    "objectID": "tutorials/Quarto/QuartoReportExample.html#code-and-plots",
    "href": "tutorials/Quarto/QuartoReportExample.html#code-and-plots",
    "title": "Quarto",
    "section": "4. Code and Plots",
    "text": "4. Code and Plots\nA Quarto document can mix text and computer code. You can include code that computes statistics in your documents and then have the computed statistics analyzed or plotted in the same document.\nCode is written in code chunks. Here is chunk of R code that produces a plot in @littlehist\n\nn = 100\nx = rnorm(n)\nhist(x, main = \"My little histogram\")\n\n\n\n\nMy little fig caption\n\n\n\n\n\nplot(cars)\n\n\n\n\nFigure 1: Plot\n\n\n\n\nFor example, see @littlehist.\nVariables like n defined in a previous chunk can be used in a new chunk, like this:\n\nmean(x) # note how I use x from the previous code chunk\n\n[1] -0.02178683\n\n\nBy the way, note how I used backticks ` ` on n above to make the font look like computer code. So I can write plot( x ~ y, data = mydata) to show you the plot command in the text.\nYou can also include other images than plots produced by R. Like this:\n see @larry for grumpy dude."
  },
  {
    "objectID": "tutorials/Quarto/QuartoReportExample.html#mathematical-symbols",
    "href": "tutorials/Quarto/QuartoReportExample.html#mathematical-symbols",
    "title": "Quarto",
    "section": "5. Mathematical symbols",
    "text": "5. Mathematical symbols\nQuarto can be used to write beautiful mathematical symbols using a very powerful typesetting system for maths called LaTeX (Strange name. Watch out, weird stuff may pop up when searching for help about LaTeX commands …). Here is some formulas that you will learn about during this course:\n\\[\ny = \\beta_0 + \\beta_1 x + \\varepsilon, \\text{ and } \\varepsilon \\sim N(0,\\sigma^2_{\\varepsilon})\n\\]\nYou can also write LaTeX math directly in the text: \\(y=a\\cdot b^x\\) and then just continue with the text."
  },
  {
    "objectID": "tutorials/Quarto/Intro2Quarto.html",
    "href": "tutorials/Quarto/Intro2Quarto.html",
    "title": "Introduction to Quarto",
    "section": "",
    "text": "The old fashioned way of writing a report with statistical results follow the steps:\n\nWrite R code to produce statistical results and plots.\nWrite the report in Word, copy the numbers from R to make tables and insert the plots as figures.\nWrite mathematical formulas using some add-on in Word.\n\nThis is not very efficient, particularly when you have to re-run the code to update the results. The tables then needs to be updated manually in Word, and the insertion of figures must be done all over again. Would it be nice if we could write everything in a document: the text, the code, the mathematical formulas, the figures and tables? Can we even ask for a way to automatically update the whole report by a simple click of a button? Say hello to Quarto, a system that does just that, all from inside the comfort of RStudio! 🤩\nQuarto is a way to integrate text (markdown), computer code, figures, tables and mathematical formulas in one document.\nQuarto documents (with file ending .qmd) can easily be turned into pdf format, html, website, blogs and presentations."
  },
  {
    "objectID": "tutorials/Quarto/Intro2Quarto.html#settings-for-the-document---the-yaml",
    "href": "tutorials/Quarto/Intro2Quarto.html#settings-for-the-document---the-yaml",
    "title": "Introduction to Quarto",
    "section": "2. Settings for the document - the YAML",
    "text": "2. Settings for the document - the YAML\nAt the top of a quarto document is the so called YAML, which tells the Quarto engine how the document should be formatted. This is the YAML for this document:\n\n\n\n\n\nwhich basically only gives the title and author information, everything else is using default settings. This will print (render) the document to html by default. To view the rendered file, just click the Render button at the top of the editor (only shown when you have a Quarto file in the editor):\n\n\n\n\n\nThe produced html file can be view in your web browser or inside RStudio in the Viewer tab in the bottom right window (typically). You may need to change the settings for it to show up in the Viewer tab. Click the settings-wheel at the top of the editor and make sure that Preview in Viewer Pane is selected:\n\n\n\n\n\nIf I instead wanted to render to pdf I would use the YAML:"
  },
  {
    "objectID": "tutorials/Quarto/Intro2Quarto.html#writing-formatted-text-using-markdown",
    "href": "tutorials/Quarto/Intro2Quarto.html#writing-formatted-text-using-markdown",
    "title": "Introduction to Quarto",
    "section": "3. Writing formatted text using markdown",
    "text": "3. Writing formatted text using markdown\nThe text written in a Quarto document can be formatted using the markdown language. Markdown is a very simple language for formatting text. For example, I can easily make the text bold by writing **bold** or italic using a single * on each side of the text. A bulleted list:\n\nbullet\nlist\nare also\neasy\n\nis produced by putting a dash - and space before each bullet point. Numbered lists are also simple, just place numbers and a dot (.) before each list item. Like this:\n\nThis is the first point\nand this is second\nand so on.\n\nImages can be inserted by typing ![sceptic larry](/misc/larry.png){width=\"100\"} which would give the picture below. So the text caption for the image is written between the brackets [] and the search path to the image on your computer is given inside the parentheses ().\n\n\n\nsceptic larry\n\n\nYou can leave out the figure text and the width argument and just write: ![](/misc/larry.png) .\nTables are also pretty easy. The table below is made by writing\n| Name  | Age | Position            |\n|-------|-----|---------------------|\n| Mike  | 49  | Professor           |\n| Sarah | 37  | Assistant professor |\n| Anne  | 26  | PhD student         |\n\nA little table caption.\n\n\nName\nAge\nPosition\n\n\n\n\nMike\n49\nProfessor\n\n\nSarah\n37\nAssistant professor\n\n\nAnne\n26\nPhD student\n\n\n\nWhat if you want the table caption text to be below the tables, not below it? No sweat, just put table-cap-location: bottom in your YAML at the top of the document."
  },
  {
    "objectID": "tutorials/Quarto/Intro2Quarto.html#writing-code",
    "href": "tutorials/Quarto/Intro2Quarto.html#writing-code",
    "title": "Introduction to Quarto",
    "section": "4. Writing code",
    "text": "4. Writing code\nA Quarto document can have executable code in them. It supports several programming languages, most notably: R, Python and Julia. You just need to add a code chunk. A code chunk starts and ends with three so called backticks `. The backtick is typed by Shift and the key to the left of Backspace on a Swedish keyboard. This is a chunk of R code:\n\n\n\n\n\nNote the little green Play-button. By pressing that we can run the code chunk. After running the code in the Quarto-document, the variables (in this case a vector x) will be available in the console, just like for any R code. Here is the end result of that code chunk:\n\nx = rnorm(100)\nplot(x, type = \"l\", xlab = \"time\", main = \"time series plot\")\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nQuarto supports other popular programming languages in addtion to .\nA chunk of Python  code would start with ```{python}.\nA Julia  code chunk starts with ```{julia}. \n\n\nWhat if I want to use the code to produce the plot, but not show the code in my report? Easy, I would just add some YAML information at the beginning of the code chunk itself. YAML inside of a code chunk must begin with the two characters #| . Here is how you hide the code:\n\nThe first character # is called a hash and the second | a pipe. So the recommended way to remember #| is by thinking of the Weezer song: hash pipe. BTW, there I used a hyperlink which you write as [link text](webpage address) where the webpage address is a http-link, but can also be links within a document."
  },
  {
    "objectID": "tutorials/Quarto/Intro2Quarto.html#writing-mathematical-formulas",
    "href": "tutorials/Quarto/Intro2Quarto.html#writing-mathematical-formulas",
    "title": "Introduction to Quarto",
    "section": "5. Writing mathematical formulas",
    "text": "5. Writing mathematical formulas\nQuarto supports LaTeX, which is a professional typesetting system for mathematical symbols. LaTeX takes a while to master, but you can look it up online to learn the basics. Just enclose LaTeX code between two dollar-signs on each side. Here is a simple example $$\\alpha_1$$ which would come out as \\[\\alpha_1\\] in your document. Here is a more complex example:\n$$\\bar{x} = \\frac{1}{n}\\sum_{i=1}^n x_i$$\nwhich would come out as the formula for the sample mean:\n\\[\\bar{x} = \\frac{1}{n}\\sum_{i=1}^n x_i\\]"
  },
  {
    "objectID": "tutorials/Quarto/Intro2Quarto.html#using-the-visual-editor-in-rstudio",
    "href": "tutorials/Quarto/Intro2Quarto.html#using-the-visual-editor-in-rstudio",
    "title": "Introduction to Quarto",
    "section": "6. Using the Visual editor in RStudio",
    "text": "6. Using the Visual editor in RStudio\nYou can create (File/New File/Quarto document… menu) and write Quarto documents in RStudio. When you open a Quarto document in the editor the menu bar changes to (may look different for you):\n\n\n\n\n\nClicking on the Render button will render the document to html (default) or pdf (if you choose that in the YAML). Pressing the Run button will re-run all the code chunks in the document. You can write your Quarto document as markdown code if you click the Source -button in the extreme left. If you press the Visual-button you will see the document in a similar way to word processors like Word. You can then insert images and table, change font sizes etc by clicking on the menu. I tend to spend most time in Visual mode, but will often go over to Source mode when I want absolute control of what I do."
  },
  {
    "objectID": "tutorials/Quarto/Intro2Quarto.html#things-to-think-about-when-working-with-quarto",
    "href": "tutorials/Quarto/Intro2Quarto.html#things-to-think-about-when-working-with-quarto",
    "title": "Introduction to Quarto",
    "section": "7. Things to think about when working with Quarto",
    "text": "7. Things to think about when working with Quarto\nQuarto processes the document code chunk by code chunk, from the beginning of the document until the end. Within a code chunk, Quarto reads the codez line by line. You must therefore make sure that a variable that you use has been defined (assigned a value) before you use the variable in the code. A common mistake is to use a variable in a code chunk which is only defined in a later code chunk. That will give an error."
  },
  {
    "objectID": "tutorials/Quarto/Intro2Quarto.html#going-fancy---interactivity",
    "href": "tutorials/Quarto/Intro2Quarto.html#going-fancy---interactivity",
    "title": "Introduction to Quarto",
    "section": "8. Going fancy - interactivity",
    "text": "8. Going fancy - interactivity\nQuarto documents have the basic interactivity that one can change code inside a code chunk, render the document and everything in the document changes according to the changes in the code.\n\nBut it also possible to make the final html interactive. Below is an an example to wet your appetite. Note however that you need to view the html file in an external web browser and not using the Viewer inside RStudio. Try moving around the slides to change the plot.\n\ndata = FileAttachment(\"palmer-penguins.csv\").csv({ typed: true })\n\n\n\n\n\n\n\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"], \n  { value: [\"Torgersen\", \"Biscoe\"], \n    label: \"Islands:\"\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfiltered = data.filter(function(penguin) {\n  return bill_length_min < penguin.bill_length_mm &&\n         islands.includes(penguin.island);\n})\n\n\n\n\n\n\n\nPlotData\n\n\n\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass_g\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)\n\n\n\n\n\n\n\n\n\nInputs.table(filtered)"
  },
  {
    "objectID": "formel_tabell_samlingar/tabellsamling.html#normalfördelning",
    "href": "formel_tabell_samlingar/tabellsamling.html#normalfördelning",
    "title": "Tabellsamling - Statistik och Dataanalys I",
    "section": "Normalfördelning",
    "text": "Normalfördelning\nTabellen ger sannolikheten \\(\\Phi(z) = P(Z\\leq z)\\) för olika \\(z\\) där \\(Z\\) är standardnormal, \\(Z\\sim N(0,1)\\).\nSannolikheter i den vänstra svansen fås genom symmetri: \\(P(Z\\leq \\textminus z) = 1-P(Z\\leq z)\\).\n\n\n     \n\n\nAndra decimalen i \\(z\\)\n\n\n\n\n\n \n  \n      \n    0.00 \n    0.01 \n    0.02 \n    0.03 \n    0.04 \n    0.05 \n    0.06 \n    0.07 \n    0.08 \n    0.09 \n  \n \n\n  \n    0.0 \n    0.5000 \n    0.5040 \n    0.5080 \n    0.5120 \n    0.5160 \n    0.5199 \n    0.5239 \n    0.5279 \n    0.5319 \n    0.5359 \n  \n  \n    0.1 \n    0.5398 \n    0.5438 \n    0.5478 \n    0.5517 \n    0.5557 \n    0.5596 \n    0.5636 \n    0.5675 \n    0.5714 \n    0.5753 \n  \n  \n    0.2 \n    0.5793 \n    0.5832 \n    0.5871 \n    0.5910 \n    0.5948 \n    0.5987 \n    0.6026 \n    0.6064 \n    0.6103 \n    0.6141 \n  \n  \n    0.3 \n    0.6179 \n    0.6217 \n    0.6255 \n    0.6293 \n    0.6331 \n    0.6368 \n    0.6406 \n    0.6443 \n    0.6480 \n    0.6517 \n  \n  \n    0.4 \n    0.6554 \n    0.6591 \n    0.6628 \n    0.6664 \n    0.6700 \n    0.6736 \n    0.6772 \n    0.6808 \n    0.6844 \n    0.6879 \n  \n  \n    0.5 \n    0.6915 \n    0.6950 \n    0.6985 \n    0.7019 \n    0.7054 \n    0.7088 \n    0.7123 \n    0.7157 \n    0.7190 \n    0.7224 \n  \n  \n    0.6 \n    0.7257 \n    0.7291 \n    0.7324 \n    0.7357 \n    0.7389 \n    0.7422 \n    0.7454 \n    0.7486 \n    0.7517 \n    0.7549 \n  \n  \n    0.7 \n    0.7580 \n    0.7611 \n    0.7642 \n    0.7673 \n    0.7704 \n    0.7734 \n    0.7764 \n    0.7794 \n    0.7823 \n    0.7852 \n  \n  \n    0.8 \n    0.7881 \n    0.7910 \n    0.7939 \n    0.7967 \n    0.7995 \n    0.8023 \n    0.8051 \n    0.8078 \n    0.8106 \n    0.8133 \n  \n  \n    0.9 \n    0.8159 \n    0.8186 \n    0.8212 \n    0.8238 \n    0.8264 \n    0.8289 \n    0.8315 \n    0.8340 \n    0.8365 \n    0.8389 \n  \n  \n    1.0 \n    0.8413 \n    0.8438 \n    0.8461 \n    0.8485 \n    0.8508 \n    0.8531 \n    0.8554 \n    0.8577 \n    0.8599 \n    0.8621 \n  \n  \n    1.1 \n    0.8643 \n    0.8665 \n    0.8686 \n    0.8708 \n    0.8729 \n    0.8749 \n    0.8770 \n    0.8790 \n    0.8810 \n    0.8830 \n  \n  \n    1.2 \n    0.8849 \n    0.8869 \n    0.8888 \n    0.8907 \n    0.8925 \n    0.8944 \n    0.8962 \n    0.8980 \n    0.8997 \n    0.9015 \n  \n  \n    1.3 \n    0.9032 \n    0.9049 \n    0.9066 \n    0.9082 \n    0.9099 \n    0.9115 \n    0.9131 \n    0.9147 \n    0.9162 \n    0.9177 \n  \n  \n    1.4 \n    0.9192 \n    0.9207 \n    0.9222 \n    0.9236 \n    0.9251 \n    0.9265 \n    0.9279 \n    0.9292 \n    0.9306 \n    0.9319 \n  \n  \n    1.5 \n    0.9332 \n    0.9345 \n    0.9357 \n    0.9370 \n    0.9382 \n    0.9394 \n    0.9406 \n    0.9418 \n    0.9429 \n    0.9441 \n  \n  \n    1.6 \n    0.9452 \n    0.9463 \n    0.9474 \n    0.9484 \n    0.9495 \n    0.9505 \n    0.9515 \n    0.9525 \n    0.9535 \n    0.9545 \n  \n  \n    1.7 \n    0.9554 \n    0.9564 \n    0.9573 \n    0.9582 \n    0.9591 \n    0.9599 \n    0.9608 \n    0.9616 \n    0.9625 \n    0.9633 \n  \n  \n    1.8 \n    0.9641 \n    0.9649 \n    0.9656 \n    0.9664 \n    0.9671 \n    0.9678 \n    0.9686 \n    0.9693 \n    0.9699 \n    0.9706 \n  \n  \n    1.9 \n    0.9713 \n    0.9719 \n    0.9726 \n    0.9732 \n    0.9738 \n    0.9744 \n    0.9750 \n    0.9756 \n    0.9761 \n    0.9767 \n  \n  \n    2.0 \n    0.9772 \n    0.9778 \n    0.9783 \n    0.9788 \n    0.9793 \n    0.9798 \n    0.9803 \n    0.9808 \n    0.9812 \n    0.9817 \n  \n  \n    2.1 \n    0.9821 \n    0.9826 \n    0.9830 \n    0.9834 \n    0.9838 \n    0.9842 \n    0.9846 \n    0.9850 \n    0.9854 \n    0.9857 \n  \n  \n    2.2 \n    0.9861 \n    0.9864 \n    0.9868 \n    0.9871 \n    0.9875 \n    0.9878 \n    0.9881 \n    0.9884 \n    0.9887 \n    0.9890 \n  \n  \n    2.3 \n    0.9893 \n    0.9896 \n    0.9898 \n    0.9901 \n    0.9904 \n    0.9906 \n    0.9909 \n    0.9911 \n    0.9913 \n    0.9916 \n  \n  \n    2.4 \n    0.9918 \n    0.9920 \n    0.9922 \n    0.9925 \n    0.9927 \n    0.9929 \n    0.9931 \n    0.9932 \n    0.9934 \n    0.9936 \n  \n  \n    2.5 \n    0.9938 \n    0.9940 \n    0.9941 \n    0.9943 \n    0.9945 \n    0.9946 \n    0.9948 \n    0.9949 \n    0.9951 \n    0.9952 \n  \n  \n    2.6 \n    0.9953 \n    0.9955 \n    0.9956 \n    0.9957 \n    0.9959 \n    0.9960 \n    0.9961 \n    0.9962 \n    0.9963 \n    0.9964 \n  \n  \n    2.7 \n    0.9965 \n    0.9966 \n    0.9967 \n    0.9968 \n    0.9969 \n    0.9970 \n    0.9971 \n    0.9972 \n    0.9973 \n    0.9974 \n  \n  \n    2.8 \n    0.9974 \n    0.9975 \n    0.9976 \n    0.9977 \n    0.9977 \n    0.9978 \n    0.9979 \n    0.9979 \n    0.9980 \n    0.9981 \n  \n  \n    2.9 \n    0.9981 \n    0.9982 \n    0.9982 \n    0.9983 \n    0.9984 \n    0.9984 \n    0.9985 \n    0.9985 \n    0.9986 \n    0.9986"
  },
  {
    "objectID": "formel_tabell_samlingar/tabellsamling.html#student-t-fördelning",
    "href": "formel_tabell_samlingar/tabellsamling.html#student-t-fördelning",
    "title": "Tabellsamling - Statistik och Dataanalys I",
    "section": "Student-\\(t\\) fördelning",
    "text": "Student-\\(t\\) fördelning\n\n\n      \n\n\n\n\n\n\n\nKonfidensnivå: \n 80%\n 90%\n 95%\n 98%\n 99%\n\n\nTvåsidig sannolikhet: \n0.200\n0.100\n0.050\n0.020\n0.010\n\n\nEnsidig sannolikhet: \n0.100\n0.050\n0.025\n0.010\n0.005\n\n\ndf \n\n\n\n\n\n\n\n\n  \n    1 \n    3.078 \n    6.314 \n    12.706 \n    31.821 \n    63.657 \n  \n  \n    2 \n    1.886 \n    2.920 \n    4.303 \n    6.965 \n    9.925 \n  \n  \n    3 \n    1.638 \n    2.353 \n    3.182 \n    4.541 \n    5.841 \n  \n  \n    4 \n    1.533 \n    2.132 \n    2.776 \n    3.747 \n    4.604 \n  \n  \n    5 \n    1.476 \n    2.015 \n    2.571 \n    3.365 \n    4.032 \n  \n  \n    6 \n    1.440 \n    1.943 \n    2.447 \n    3.143 \n    3.707 \n  \n  \n    7 \n    1.415 \n    1.895 \n    2.365 \n    2.998 \n    3.499 \n  \n  \n    8 \n    1.397 \n    1.860 \n    2.306 \n    2.896 \n    3.355 \n  \n  \n    9 \n    1.383 \n    1.833 \n    2.262 \n    2.821 \n    3.250 \n  \n  \n    10 \n    1.372 \n    1.812 \n    2.228 \n    2.764 \n    3.169 \n  \n  \n    11 \n    1.363 \n    1.796 \n    2.201 \n    2.718 \n    3.106 \n  \n  \n    12 \n    1.356 \n    1.782 \n    2.179 \n    2.681 \n    3.055 \n  \n  \n    13 \n    1.350 \n    1.771 \n    2.160 \n    2.650 \n    3.012 \n  \n  \n    14 \n    1.345 \n    1.761 \n    2.145 \n    2.624 \n    2.977 \n  \n  \n    15 \n    1.341 \n    1.753 \n    2.131 \n    2.602 \n    2.947 \n  \n  \n    16 \n    1.337 \n    1.746 \n    2.120 \n    2.583 \n    2.921 \n  \n  \n    17 \n    1.333 \n    1.740 \n    2.110 \n    2.567 \n    2.898 \n  \n  \n    18 \n    1.330 \n    1.734 \n    2.101 \n    2.552 \n    2.878 \n  \n  \n    19 \n    1.328 \n    1.729 \n    2.093 \n    2.539 \n    2.861 \n  \n  \n    20 \n    1.325 \n    1.725 \n    2.086 \n    2.528 \n    2.845 \n  \n  \n    21 \n    1.323 \n    1.721 \n    2.080 \n    2.518 \n    2.831 \n  \n  \n    22 \n    1.321 \n    1.717 \n    2.074 \n    2.508 \n    2.819 \n  \n  \n    23 \n    1.319 \n    1.714 \n    2.069 \n    2.500 \n    2.807 \n  \n  \n    24 \n    1.318 \n    1.711 \n    2.064 \n    2.492 \n    2.797 \n  \n  \n    25 \n    1.316 \n    1.708 \n    2.060 \n    2.485 \n    2.787 \n  \n  \n    26 \n    1.315 \n    1.706 \n    2.056 \n    2.479 \n    2.779 \n  \n  \n    27 \n    1.314 \n    1.703 \n    2.052 \n    2.473 \n    2.771 \n  \n  \n    28 \n    1.313 \n    1.701 \n    2.048 \n    2.467 \n    2.763 \n  \n  \n    29 \n    1.311 \n    1.699 \n    2.045 \n    2.462 \n    2.756 \n  \n  \n    30 \n    1.310 \n    1.697 \n    2.042 \n    2.457 \n    2.750 \n  \n  \n    32 \n    1.309 \n    1.694 \n    2.037 \n    2.449 \n    2.738 \n  \n  \n    35 \n    1.306 \n    1.690 \n    2.030 \n    2.438 \n    2.724 \n  \n  \n    40 \n    1.303 \n    1.684 \n    2.021 \n    2.423 \n    2.704 \n  \n  \n    45 \n    1.301 \n    1.679 \n    2.014 \n    2.412 \n    2.690 \n  \n  \n    50 \n    1.299 \n    1.676 \n    2.009 \n    2.403 \n    2.678 \n  \n  \n    60 \n    1.296 \n    1.671 \n    2.000 \n    2.390 \n    2.660 \n  \n  \n    75 \n    1.293 \n    1.665 \n    1.992 \n    2.377 \n    2.643 \n  \n  \n    100 \n    1.290 \n    1.660 \n    1.984 \n    2.364 \n    2.626 \n  \n  \n    120 \n    1.289 \n    1.658 \n    1.980 \n    2.358 \n    2.617 \n  \n  \n    140 \n    1.288 \n    1.656 \n    1.977 \n    2.353 \n    2.611 \n  \n  \n    180 \n    1.286 \n    1.653 \n    1.973 \n    2.347 \n    2.603 \n  \n  \n    250 \n    1.285 \n    1.651 \n    1.969 \n    2.341 \n    2.596 \n  \n  \n    400 \n    1.284 \n    1.649 \n    1.966 \n    2.336 \n    2.588 \n  \n  \n    1000 \n    1.282 \n    1.646 \n    1.962 \n    2.330 \n    2.581 \n  \n  \n    oändligt \n    1.282 \n    1.645 \n    1.960 \n    2.326 \n    2.576"
  },
  {
    "objectID": "formel_tabell_samlingar/tabellsamling.html#chi2-fördelning",
    "href": "formel_tabell_samlingar/tabellsamling.html#chi2-fördelning",
    "title": "Tabellsamling - Statistik och Dataanalys I",
    "section": "\\(\\chi^2\\)-fördelning",
    "text": "\\(\\chi^2\\)-fördelning\n\n\n  \n\n\n\n\n\n\n\nSannolikhet i höger svans: \n0.100\n0.050\n0.025\n0.010\n0.005\n\n\ndf \n\n\n\n\n\n\n\n\n  \n    1 \n    2.706 \n    3.841 \n    5.024 \n    6.635 \n    7.879 \n  \n  \n    2 \n    4.605 \n    5.991 \n    7.378 \n    9.210 \n    10.597 \n  \n  \n    3 \n    6.251 \n    7.815 \n    9.348 \n    11.345 \n    12.838 \n  \n  \n    4 \n    7.779 \n    9.488 \n    11.143 \n    13.277 \n    14.860 \n  \n  \n    5 \n    9.236 \n    11.070 \n    12.833 \n    15.086 \n    16.750 \n  \n  \n    6 \n    10.645 \n    12.592 \n    14.449 \n    16.812 \n    18.548 \n  \n  \n    7 \n    12.017 \n    14.067 \n    16.013 \n    18.475 \n    20.278 \n  \n  \n    8 \n    13.362 \n    15.507 \n    17.535 \n    20.090 \n    21.955 \n  \n  \n    9 \n    14.684 \n    16.919 \n    19.023 \n    21.666 \n    23.589 \n  \n  \n    10 \n    15.987 \n    18.307 \n    20.483 \n    23.209 \n    25.188 \n  \n  \n    11 \n    17.275 \n    19.675 \n    21.920 \n    24.725 \n    26.757 \n  \n  \n    12 \n    18.549 \n    21.026 \n    23.337 \n    26.217 \n    28.300 \n  \n  \n    13 \n    19.812 \n    22.362 \n    24.736 \n    27.688 \n    29.819 \n  \n  \n    14 \n    21.064 \n    23.685 \n    26.119 \n    29.141 \n    31.319 \n  \n  \n    15 \n    22.307 \n    24.996 \n    27.488 \n    30.578 \n    32.801 \n  \n  \n    16 \n    23.542 \n    26.296 \n    28.845 \n    32.000 \n    34.267 \n  \n  \n    17 \n    24.769 \n    27.587 \n    30.191 \n    33.409 \n    35.718 \n  \n  \n    18 \n    25.989 \n    28.869 \n    31.526 \n    34.805 \n    37.156 \n  \n  \n    19 \n    27.204 \n    30.144 \n    32.852 \n    36.191 \n    38.582 \n  \n  \n    20 \n    28.412 \n    31.410 \n    34.170 \n    37.566 \n    39.997 \n  \n  \n    21 \n    29.615 \n    32.671 \n    35.479 \n    38.932 \n    41.401 \n  \n  \n    22 \n    30.813 \n    33.924 \n    36.781 \n    40.289 \n    42.796 \n  \n  \n    23 \n    32.007 \n    35.172 \n    38.076 \n    41.638 \n    44.181 \n  \n  \n    24 \n    33.196 \n    36.415 \n    39.364 \n    42.980 \n    45.559 \n  \n  \n    25 \n    34.382 \n    37.652 \n    40.646 \n    44.314 \n    46.928 \n  \n  \n    26 \n    35.563 \n    38.885 \n    41.923 \n    45.642 \n    48.290 \n  \n  \n    27 \n    36.741 \n    40.113 \n    43.195 \n    46.963 \n    49.645 \n  \n  \n    28 \n    37.916 \n    41.337 \n    44.461 \n    48.278 \n    50.993 \n  \n  \n    29 \n    39.087 \n    42.557 \n    45.722 \n    49.588 \n    52.336 \n  \n  \n    30 \n    40.256 \n    43.773 \n    46.979 \n    50.892 \n    53.672 \n  \n  \n    40 \n    51.805 \n    55.758 \n    59.342 \n    63.691 \n    66.766 \n  \n  \n    50 \n    63.167 \n    67.505 \n    71.420 \n    76.154 \n    79.490 \n  \n  \n    60 \n    74.397 \n    79.082 \n    83.298 \n    88.379 \n    91.952 \n  \n  \n    70 \n    85.527 \n    90.531 \n    95.023 \n    100.425 \n    104.215 \n  \n  \n    80 \n    96.578 \n    101.879 \n    106.629 \n    112.329 \n    116.321 \n  \n  \n    90 \n    107.565 \n    113.145 \n    118.136 \n    124.116 \n    128.299 \n  \n  \n    100 \n    118.498 \n    124.342 \n    129.561 \n    135.807 \n    140.169"
  },
  {
    "objectID": "formel_tabell_samlingar/tabellsamling.html#f-fördelning",
    "href": "formel_tabell_samlingar/tabellsamling.html#f-fördelning",
    "title": "Tabellsamling - Statistik och Dataanalys I",
    "section": "\\(F\\)-fördelning",
    "text": "\\(F\\)-fördelning\n\n\\(\\alpha = 0.01\\)\\(\\alpha = 0.05\\)\\(\\alpha = 0.10\\)\n\n\n\n\n  \n\nKolumnerna är frihetsgraderna i täljaren.\nRaderna är frihetsgraderna i nämnaren.\n\n\n\n\n \n\n\nFrihetsgrader i täljaren\n\n  \n      \n     1 \n     2 \n     3 \n     4 \n     5 \n     6 \n     7 \n     8 \n     9 \n    10 \n    11 \n    12 \n    13 \n    14 \n    15 \n    16 \n    17 \n    18 \n    19 \n    20 \n    21 \n    22 \n  \n \n\n  \n    1 \n    4052.18 \n    4999.50 \n    5403.35 \n    5624.58 \n    5763.65 \n    5858.99 \n    5928.36 \n    5981.07 \n    6022.47 \n    6055.85 \n    6083.32 \n    6106.32 \n    6125.86 \n    6142.67 \n    6157.28 \n    6170.10 \n    6181.43 \n    6191.53 \n    6200.58 \n    6208.73 \n    6216.12 \n    6222.84 \n  \n  \n    2 \n    98.50 \n    99.00 \n    99.17 \n    99.25 \n    99.30 \n    99.33 \n    99.36 \n    99.37 \n    99.39 \n    99.40 \n    99.41 \n    99.42 \n    99.42 \n    99.43 \n    99.43 \n    99.44 \n    99.44 \n    99.44 \n    99.45 \n    99.45 \n    99.45 \n    99.45 \n  \n  \n    3 \n    34.12 \n    30.82 \n    29.46 \n    28.71 \n    28.24 \n    27.91 \n    27.67 \n    27.49 \n    27.35 \n    27.23 \n    27.13 \n    27.05 \n    26.98 \n    26.92 \n    26.87 \n    26.83 \n    26.79 \n    26.75 \n    26.72 \n    26.69 \n    26.66 \n    26.64 \n  \n  \n    4 \n    21.20 \n    18.00 \n    16.69 \n    15.98 \n    15.52 \n    15.21 \n    14.98 \n    14.80 \n    14.66 \n    14.55 \n    14.45 \n    14.37 \n    14.31 \n    14.25 \n    14.20 \n    14.15 \n    14.11 \n    14.08 \n    14.05 \n    14.02 \n    13.99 \n    13.97 \n  \n  \n    5 \n    16.26 \n    13.27 \n    12.06 \n    11.39 \n    10.97 \n    10.67 \n    10.46 \n    10.29 \n    10.16 \n    10.05 \n    9.96 \n    9.89 \n    9.82 \n    9.77 \n    9.72 \n    9.68 \n    9.64 \n    9.61 \n    9.58 \n    9.55 \n    9.53 \n    9.51 \n  \n  \n    6 \n    13.75 \n    10.92 \n    9.78 \n    9.15 \n    8.75 \n    8.47 \n    8.26 \n    8.10 \n    7.98 \n    7.87 \n    7.79 \n    7.72 \n    7.66 \n    7.60 \n    7.56 \n    7.52 \n    7.48 \n    7.45 \n    7.42 \n    7.40 \n    7.37 \n    7.35 \n  \n  \n    7 \n    12.25 \n    9.55 \n    8.45 \n    7.85 \n    7.46 \n    7.19 \n    6.99 \n    6.84 \n    6.72 \n    6.62 \n    6.54 \n    6.47 \n    6.41 \n    6.36 \n    6.31 \n    6.28 \n    6.24 \n    6.21 \n    6.18 \n    6.16 \n    6.13 \n    6.11 \n  \n  \n    8 \n    11.26 \n    8.65 \n    7.59 \n    7.01 \n    6.63 \n    6.37 \n    6.18 \n    6.03 \n    5.91 \n    5.81 \n    5.73 \n    5.67 \n    5.61 \n    5.56 \n    5.52 \n    5.48 \n    5.44 \n    5.41 \n    5.38 \n    5.36 \n    5.34 \n    5.32 \n  \n  \n    9 \n    10.56 \n    8.02 \n    6.99 \n    6.42 \n    6.06 \n    5.80 \n    5.61 \n    5.47 \n    5.35 \n    5.26 \n    5.18 \n    5.11 \n    5.05 \n    5.01 \n    4.96 \n    4.92 \n    4.89 \n    4.86 \n    4.83 \n    4.81 \n    4.79 \n    4.77 \n  \n  \n    10 \n    10.04 \n    7.56 \n    6.55 \n    5.99 \n    5.64 \n    5.39 \n    5.20 \n    5.06 \n    4.94 \n    4.85 \n    4.77 \n    4.71 \n    4.65 \n    4.60 \n    4.56 \n    4.52 \n    4.49 \n    4.46 \n    4.43 \n    4.41 \n    4.38 \n    4.36 \n  \n  \n    11 \n    9.65 \n    7.21 \n    6.22 \n    5.67 \n    5.32 \n    5.07 \n    4.89 \n    4.74 \n    4.63 \n    4.54 \n    4.46 \n    4.40 \n    4.34 \n    4.29 \n    4.25 \n    4.21 \n    4.18 \n    4.15 \n    4.12 \n    4.10 \n    4.08 \n    4.06 \n  \n  \n    12 \n    9.33 \n    6.93 \n    5.95 \n    5.41 \n    5.06 \n    4.82 \n    4.64 \n    4.50 \n    4.39 \n    4.30 \n    4.22 \n    4.16 \n    4.10 \n    4.05 \n    4.01 \n    3.97 \n    3.94 \n    3.91 \n    3.88 \n    3.86 \n    3.84 \n    3.82 \n  \n  \n    13 \n    9.07 \n    6.70 \n    5.74 \n    5.21 \n    4.86 \n    4.62 \n    4.44 \n    4.30 \n    4.19 \n    4.10 \n    4.02 \n    3.96 \n    3.91 \n    3.86 \n    3.82 \n    3.78 \n    3.75 \n    3.72 \n    3.69 \n    3.66 \n    3.64 \n    3.62 \n  \n  \n    14 \n    8.86 \n    6.51 \n    5.56 \n    5.04 \n    4.69 \n    4.46 \n    4.28 \n    4.14 \n    4.03 \n    3.94 \n    3.86 \n    3.80 \n    3.75 \n    3.70 \n    3.66 \n    3.62 \n    3.59 \n    3.56 \n    3.53 \n    3.51 \n    3.48 \n    3.46 \n  \n  \n    15 \n    8.68 \n    6.36 \n    5.42 \n    4.89 \n    4.56 \n    4.32 \n    4.14 \n    4.00 \n    3.89 \n    3.80 \n    3.73 \n    3.67 \n    3.61 \n    3.56 \n    3.52 \n    3.49 \n    3.45 \n    3.42 \n    3.40 \n    3.37 \n    3.35 \n    3.33 \n  \n  \n    16 \n    8.53 \n    6.23 \n    5.29 \n    4.77 \n    4.44 \n    4.20 \n    4.03 \n    3.89 \n    3.78 \n    3.69 \n    3.62 \n    3.55 \n    3.50 \n    3.45 \n    3.41 \n    3.37 \n    3.34 \n    3.31 \n    3.28 \n    3.26 \n    3.24 \n    3.22 \n  \n  \n    17 \n    8.40 \n    6.11 \n    5.18 \n    4.67 \n    4.34 \n    4.10 \n    3.93 \n    3.79 \n    3.68 \n    3.59 \n    3.52 \n    3.46 \n    3.40 \n    3.35 \n    3.31 \n    3.27 \n    3.24 \n    3.21 \n    3.19 \n    3.16 \n    3.14 \n    3.12 \n  \n  \n    18 \n    8.29 \n    6.01 \n    5.09 \n    4.58 \n    4.25 \n    4.01 \n    3.84 \n    3.71 \n    3.60 \n    3.51 \n    3.43 \n    3.37 \n    3.32 \n    3.27 \n    3.23 \n    3.19 \n    3.16 \n    3.13 \n    3.10 \n    3.08 \n    3.05 \n    3.03 \n  \n  \n    19 \n    8.18 \n    5.93 \n    5.01 \n    4.50 \n    4.17 \n    3.94 \n    3.77 \n    3.63 \n    3.52 \n    3.43 \n    3.36 \n    3.30 \n    3.24 \n    3.19 \n    3.15 \n    3.12 \n    3.08 \n    3.05 \n    3.03 \n    3.00 \n    2.98 \n    2.96 \n  \n  \n    20 \n    8.10 \n    5.85 \n    4.94 \n    4.43 \n    4.10 \n    3.87 \n    3.70 \n    3.56 \n    3.46 \n    3.37 \n    3.29 \n    3.23 \n    3.18 \n    3.13 \n    3.09 \n    3.05 \n    3.02 \n    2.99 \n    2.96 \n    2.94 \n    2.92 \n    2.90 \n  \n  \n    21 \n    8.02 \n    5.78 \n    4.87 \n    4.37 \n    4.04 \n    3.81 \n    3.64 \n    3.51 \n    3.40 \n    3.31 \n    3.24 \n    3.17 \n    3.12 \n    3.07 \n    3.03 \n    2.99 \n    2.96 \n    2.93 \n    2.90 \n    2.88 \n    2.86 \n    2.84 \n  \n  \n    22 \n    7.95 \n    5.72 \n    4.82 \n    4.31 \n    3.99 \n    3.76 \n    3.59 \n    3.45 \n    3.35 \n    3.26 \n    3.18 \n    3.12 \n    3.07 \n    3.02 \n    2.98 \n    2.94 \n    2.91 \n    2.88 \n    2.85 \n    2.83 \n    2.81 \n    2.78 \n  \n  \n    23 \n    7.88 \n    5.66 \n    4.76 \n    4.26 \n    3.94 \n    3.71 \n    3.54 \n    3.41 \n    3.30 \n    3.21 \n    3.14 \n    3.07 \n    3.02 \n    2.97 \n    2.93 \n    2.89 \n    2.86 \n    2.83 \n    2.80 \n    2.78 \n    2.76 \n    2.74 \n  \n  \n    24 \n    7.82 \n    5.61 \n    4.72 \n    4.22 \n    3.90 \n    3.67 \n    3.50 \n    3.36 \n    3.26 \n    3.17 \n    3.09 \n    3.03 \n    2.98 \n    2.93 \n    2.89 \n    2.85 \n    2.82 \n    2.79 \n    2.76 \n    2.74 \n    2.72 \n    2.70 \n  \n  \n    25 \n    7.77 \n    5.57 \n    4.68 \n    4.18 \n    3.85 \n    3.63 \n    3.46 \n    3.32 \n    3.22 \n    3.13 \n    3.06 \n    2.99 \n    2.94 \n    2.89 \n    2.85 \n    2.81 \n    2.78 \n    2.75 \n    2.72 \n    2.70 \n    2.68 \n    2.66 \n  \n  \n    26 \n    7.72 \n    5.53 \n    4.64 \n    4.14 \n    3.82 \n    3.59 \n    3.42 \n    3.29 \n    3.18 \n    3.09 \n    3.02 \n    2.96 \n    2.90 \n    2.86 \n    2.81 \n    2.78 \n    2.75 \n    2.72 \n    2.69 \n    2.66 \n    2.64 \n    2.62 \n  \n  \n    27 \n    7.68 \n    5.49 \n    4.60 \n    4.11 \n    3.78 \n    3.56 \n    3.39 \n    3.26 \n    3.15 \n    3.06 \n    2.99 \n    2.93 \n    2.87 \n    2.82 \n    2.78 \n    2.75 \n    2.71 \n    2.68 \n    2.66 \n    2.63 \n    2.61 \n    2.59 \n  \n  \n    28 \n    7.64 \n    5.45 \n    4.57 \n    4.07 \n    3.75 \n    3.53 \n    3.36 \n    3.23 \n    3.12 \n    3.03 \n    2.96 \n    2.90 \n    2.84 \n    2.79 \n    2.75 \n    2.72 \n    2.68 \n    2.65 \n    2.63 \n    2.60 \n    2.58 \n    2.56 \n  \n  \n    29 \n    7.60 \n    5.42 \n    4.54 \n    4.04 \n    3.73 \n    3.50 \n    3.33 \n    3.20 \n    3.09 \n    3.00 \n    2.93 \n    2.87 \n    2.81 \n    2.77 \n    2.73 \n    2.69 \n    2.66 \n    2.63 \n    2.60 \n    2.57 \n    2.55 \n    2.53 \n  \n  \n    30 \n    7.56 \n    5.39 \n    4.51 \n    4.02 \n    3.70 \n    3.47 \n    3.30 \n    3.17 \n    3.07 \n    2.98 \n    2.91 \n    2.84 \n    2.79 \n    2.74 \n    2.70 \n    2.66 \n    2.63 \n    2.60 \n    2.57 \n    2.55 \n    2.53 \n    2.51 \n  \n  \n    35 \n    7.42 \n    5.27 \n    4.40 \n    3.91 \n    3.59 \n    3.37 \n    3.20 \n    3.07 \n    2.96 \n    2.88 \n    2.80 \n    2.74 \n    2.69 \n    2.64 \n    2.60 \n    2.56 \n    2.53 \n    2.50 \n    2.47 \n    2.44 \n    2.42 \n    2.40 \n  \n  \n    40 \n    7.31 \n    5.18 \n    4.31 \n    3.83 \n    3.51 \n    3.29 \n    3.12 \n    2.99 \n    2.89 \n    2.80 \n    2.73 \n    2.66 \n    2.61 \n    2.56 \n    2.52 \n    2.48 \n    2.45 \n    2.42 \n    2.39 \n    2.37 \n    2.35 \n    2.33 \n  \n  \n    45 \n    7.23 \n    5.11 \n    4.25 \n    3.77 \n    3.45 \n    3.23 \n    3.07 \n    2.94 \n    2.83 \n    2.74 \n    2.67 \n    2.61 \n    2.55 \n    2.51 \n    2.46 \n    2.43 \n    2.39 \n    2.36 \n    2.34 \n    2.31 \n    2.29 \n    2.27 \n  \n  \n    50 \n    7.17 \n    5.06 \n    4.20 \n    3.72 \n    3.41 \n    3.19 \n    3.02 \n    2.89 \n    2.78 \n    2.70 \n    2.63 \n    2.56 \n    2.51 \n    2.46 \n    2.42 \n    2.38 \n    2.35 \n    2.32 \n    2.29 \n    2.27 \n    2.24 \n    2.22 \n  \n  \n    60 \n    7.08 \n    4.98 \n    4.13 \n    3.65 \n    3.34 \n    3.12 \n    2.95 \n    2.82 \n    2.72 \n    2.63 \n    2.56 \n    2.50 \n    2.44 \n    2.39 \n    2.35 \n    2.31 \n    2.28 \n    2.25 \n    2.22 \n    2.20 \n    2.17 \n    2.15 \n  \n  \n    75 \n    6.99 \n    4.90 \n    4.05 \n    3.58 \n    3.27 \n    3.05 \n    2.89 \n    2.76 \n    2.65 \n    2.57 \n    2.49 \n    2.43 \n    2.38 \n    2.33 \n    2.29 \n    2.25 \n    2.22 \n    2.18 \n    2.16 \n    2.13 \n    2.11 \n    2.09 \n  \n  \n    100 \n    6.90 \n    4.82 \n    3.98 \n    3.51 \n    3.21 \n    2.99 \n    2.82 \n    2.69 \n    2.59 \n    2.50 \n    2.43 \n    2.37 \n    2.31 \n    2.27 \n    2.22 \n    2.19 \n    2.15 \n    2.12 \n    2.09 \n    2.07 \n    2.04 \n    2.02 \n  \n  \n    120 \n    6.85 \n    4.79 \n    3.95 \n    3.48 \n    3.17 \n    2.96 \n    2.79 \n    2.66 \n    2.56 \n    2.47 \n    2.40 \n    2.34 \n    2.28 \n    2.23 \n    2.19 \n    2.15 \n    2.12 \n    2.09 \n    2.06 \n    2.03 \n    2.01 \n    1.99 \n  \n  \n    140 \n    6.82 \n    4.76 \n    3.92 \n    3.46 \n    3.15 \n    2.93 \n    2.77 \n    2.64 \n    2.54 \n    2.45 \n    2.38 \n    2.31 \n    2.26 \n    2.21 \n    2.17 \n    2.13 \n    2.10 \n    2.07 \n    2.04 \n    2.01 \n    1.99 \n    1.97 \n  \n  \n    180 \n    6.78 \n    4.73 \n    3.89 \n    3.43 \n    3.12 \n    2.90 \n    2.74 \n    2.61 \n    2.51 \n    2.42 \n    2.35 \n    2.28 \n    2.23 \n    2.18 \n    2.14 \n    2.10 \n    2.07 \n    2.04 \n    2.01 \n    1.98 \n    1.96 \n    1.94 \n  \n  \n    250 \n    6.74 \n    4.69 \n    3.86 \n    3.40 \n    3.09 \n    2.87 \n    2.71 \n    2.58 \n    2.48 \n    2.39 \n    2.32 \n    2.26 \n    2.20 \n    2.15 \n    2.11 \n    2.07 \n    2.04 \n    2.01 \n    1.98 \n    1.95 \n    1.93 \n    1.91 \n  \n  \n    400 \n    6.70 \n    4.66 \n    3.83 \n    3.37 \n    3.06 \n    2.85 \n    2.68 \n    2.56 \n    2.45 \n    2.37 \n    2.29 \n    2.23 \n    2.17 \n    2.13 \n    2.08 \n    2.05 \n    2.01 \n    1.98 \n    1.95 \n    1.92 \n    1.90 \n    1.88 \n  \n  \n    1000 \n    6.66 \n    4.63 \n    3.80 \n    3.34 \n    3.04 \n    2.82 \n    2.66 \n    2.53 \n    2.43 \n    2.34 \n    2.27 \n    2.20 \n    2.15 \n    2.10 \n    2.06 \n    2.02 \n    1.98 \n    1.95 \n    1.92 \n    1.90 \n    1.87 \n    1.85 \n  \n\n\n\n\n\n\n\n\n\n\n\n  \n\nKolumnerna är frihetsgraderna i täljaren.\nRaderna är frihetsgraderna i nämnaren.\n\n\n\n\n \n\n\nFrihetsgrader i täljaren\n\n  \n      \n     1 \n     2 \n     3 \n     4 \n     5 \n     6 \n     7 \n     8 \n     9 \n    10 \n    11 \n    12 \n    13 \n    14 \n    15 \n    16 \n    17 \n    18 \n    19 \n    20 \n    21 \n    22 \n  \n \n\n  \n    1 \n    161.45 \n    199.50 \n    215.71 \n    224.58 \n    230.16 \n    233.99 \n    236.77 \n    238.88 \n    240.54 \n    241.88 \n    242.98 \n    243.91 \n    244.69 \n    245.36 \n    245.95 \n    246.46 \n    246.92 \n    247.32 \n    247.69 \n    248.01 \n    248.31 \n    248.58 \n  \n  \n    2 \n    18.51 \n    19.00 \n    19.16 \n    19.25 \n    19.30 \n    19.33 \n    19.35 \n    19.37 \n    19.38 \n    19.40 \n    19.40 \n    19.41 \n    19.42 \n    19.42 \n    19.43 \n    19.43 \n    19.44 \n    19.44 \n    19.44 \n    19.45 \n    19.45 \n    19.45 \n  \n  \n    3 \n    10.13 \n    9.55 \n    9.28 \n    9.12 \n    9.01 \n    8.94 \n    8.89 \n    8.85 \n    8.81 \n    8.79 \n    8.76 \n    8.74 \n    8.73 \n    8.71 \n    8.70 \n    8.69 \n    8.68 \n    8.67 \n    8.67 \n    8.66 \n    8.65 \n    8.65 \n  \n  \n    4 \n    7.71 \n    6.94 \n    6.59 \n    6.39 \n    6.26 \n    6.16 \n    6.09 \n    6.04 \n    6.00 \n    5.96 \n    5.94 \n    5.91 \n    5.89 \n    5.87 \n    5.86 \n    5.84 \n    5.83 \n    5.82 \n    5.81 \n    5.80 \n    5.79 \n    5.79 \n  \n  \n    5 \n    6.61 \n    5.79 \n    5.41 \n    5.19 \n    5.05 \n    4.95 \n    4.88 \n    4.82 \n    4.77 \n    4.74 \n    4.70 \n    4.68 \n    4.66 \n    4.64 \n    4.62 \n    4.60 \n    4.59 \n    4.58 \n    4.57 \n    4.56 \n    4.55 \n    4.54 \n  \n  \n    6 \n    5.99 \n    5.14 \n    4.76 \n    4.53 \n    4.39 \n    4.28 \n    4.21 \n    4.15 \n    4.10 \n    4.06 \n    4.03 \n    4.00 \n    3.98 \n    3.96 \n    3.94 \n    3.92 \n    3.91 \n    3.90 \n    3.88 \n    3.87 \n    3.86 \n    3.86 \n  \n  \n    7 \n    5.59 \n    4.74 \n    4.35 \n    4.12 \n    3.97 \n    3.87 \n    3.79 \n    3.73 \n    3.68 \n    3.64 \n    3.60 \n    3.57 \n    3.55 \n    3.53 \n    3.51 \n    3.49 \n    3.48 \n    3.47 \n    3.46 \n    3.44 \n    3.43 \n    3.43 \n  \n  \n    8 \n    5.32 \n    4.46 \n    4.07 \n    3.84 \n    3.69 \n    3.58 \n    3.50 \n    3.44 \n    3.39 \n    3.35 \n    3.31 \n    3.28 \n    3.26 \n    3.24 \n    3.22 \n    3.20 \n    3.19 \n    3.17 \n    3.16 \n    3.15 \n    3.14 \n    3.13 \n  \n  \n    9 \n    5.12 \n    4.26 \n    3.86 \n    3.63 \n    3.48 \n    3.37 \n    3.29 \n    3.23 \n    3.18 \n    3.14 \n    3.10 \n    3.07 \n    3.05 \n    3.03 \n    3.01 \n    2.99 \n    2.97 \n    2.96 \n    2.95 \n    2.94 \n    2.93 \n    2.92 \n  \n  \n    10 \n    4.96 \n    4.10 \n    3.71 \n    3.48 \n    3.33 \n    3.22 \n    3.14 \n    3.07 \n    3.02 \n    2.98 \n    2.94 \n    2.91 \n    2.89 \n    2.86 \n    2.85 \n    2.83 \n    2.81 \n    2.80 \n    2.79 \n    2.77 \n    2.76 \n    2.75 \n  \n  \n    11 \n    4.84 \n    3.98 \n    3.59 \n    3.36 \n    3.20 \n    3.09 \n    3.01 \n    2.95 \n    2.90 \n    2.85 \n    2.82 \n    2.79 \n    2.76 \n    2.74 \n    2.72 \n    2.70 \n    2.69 \n    2.67 \n    2.66 \n    2.65 \n    2.64 \n    2.63 \n  \n  \n    12 \n    4.75 \n    3.89 \n    3.49 \n    3.26 \n    3.11 \n    3.00 \n    2.91 \n    2.85 \n    2.80 \n    2.75 \n    2.72 \n    2.69 \n    2.66 \n    2.64 \n    2.62 \n    2.60 \n    2.58 \n    2.57 \n    2.56 \n    2.54 \n    2.53 \n    2.52 \n  \n  \n    13 \n    4.67 \n    3.81 \n    3.41 \n    3.18 \n    3.03 \n    2.92 \n    2.83 \n    2.77 \n    2.71 \n    2.67 \n    2.63 \n    2.60 \n    2.58 \n    2.55 \n    2.53 \n    2.51 \n    2.50 \n    2.48 \n    2.47 \n    2.46 \n    2.45 \n    2.44 \n  \n  \n    14 \n    4.60 \n    3.74 \n    3.34 \n    3.11 \n    2.96 \n    2.85 \n    2.76 \n    2.70 \n    2.65 \n    2.60 \n    2.57 \n    2.53 \n    2.51 \n    2.48 \n    2.46 \n    2.44 \n    2.43 \n    2.41 \n    2.40 \n    2.39 \n    2.38 \n    2.37 \n  \n  \n    15 \n    4.54 \n    3.68 \n    3.29 \n    3.06 \n    2.90 \n    2.79 \n    2.71 \n    2.64 \n    2.59 \n    2.54 \n    2.51 \n    2.48 \n    2.45 \n    2.42 \n    2.40 \n    2.38 \n    2.37 \n    2.35 \n    2.34 \n    2.33 \n    2.32 \n    2.31 \n  \n  \n    16 \n    4.49 \n    3.63 \n    3.24 \n    3.01 \n    2.85 \n    2.74 \n    2.66 \n    2.59 \n    2.54 \n    2.49 \n    2.46 \n    2.42 \n    2.40 \n    2.37 \n    2.35 \n    2.33 \n    2.32 \n    2.30 \n    2.29 \n    2.28 \n    2.26 \n    2.25 \n  \n  \n    17 \n    4.45 \n    3.59 \n    3.20 \n    2.96 \n    2.81 \n    2.70 \n    2.61 \n    2.55 \n    2.49 \n    2.45 \n    2.41 \n    2.38 \n    2.35 \n    2.33 \n    2.31 \n    2.29 \n    2.27 \n    2.26 \n    2.24 \n    2.23 \n    2.22 \n    2.21 \n  \n  \n    18 \n    4.41 \n    3.55 \n    3.16 \n    2.93 \n    2.77 \n    2.66 \n    2.58 \n    2.51 \n    2.46 \n    2.41 \n    2.37 \n    2.34 \n    2.31 \n    2.29 \n    2.27 \n    2.25 \n    2.23 \n    2.22 \n    2.20 \n    2.19 \n    2.18 \n    2.17 \n  \n  \n    19 \n    4.38 \n    3.52 \n    3.13 \n    2.90 \n    2.74 \n    2.63 \n    2.54 \n    2.48 \n    2.42 \n    2.38 \n    2.34 \n    2.31 \n    2.28 \n    2.26 \n    2.23 \n    2.21 \n    2.20 \n    2.18 \n    2.17 \n    2.16 \n    2.14 \n    2.13 \n  \n  \n    20 \n    4.35 \n    3.49 \n    3.10 \n    2.87 \n    2.71 \n    2.60 \n    2.51 \n    2.45 \n    2.39 \n    2.35 \n    2.31 \n    2.28 \n    2.25 \n    2.22 \n    2.20 \n    2.18 \n    2.17 \n    2.15 \n    2.14 \n    2.12 \n    2.11 \n    2.10 \n  \n  \n    21 \n    4.32 \n    3.47 \n    3.07 \n    2.84 \n    2.68 \n    2.57 \n    2.49 \n    2.42 \n    2.37 \n    2.32 \n    2.28 \n    2.25 \n    2.22 \n    2.20 \n    2.18 \n    2.16 \n    2.14 \n    2.12 \n    2.11 \n    2.10 \n    2.08 \n    2.07 \n  \n  \n    22 \n    4.30 \n    3.44 \n    3.05 \n    2.82 \n    2.66 \n    2.55 \n    2.46 \n    2.40 \n    2.34 \n    2.30 \n    2.26 \n    2.23 \n    2.20 \n    2.17 \n    2.15 \n    2.13 \n    2.11 \n    2.10 \n    2.08 \n    2.07 \n    2.06 \n    2.05 \n  \n  \n    23 \n    4.28 \n    3.42 \n    3.03 \n    2.80 \n    2.64 \n    2.53 \n    2.44 \n    2.37 \n    2.32 \n    2.27 \n    2.24 \n    2.20 \n    2.18 \n    2.15 \n    2.13 \n    2.11 \n    2.09 \n    2.08 \n    2.06 \n    2.05 \n    2.04 \n    2.02 \n  \n  \n    24 \n    4.26 \n    3.40 \n    3.01 \n    2.78 \n    2.62 \n    2.51 \n    2.42 \n    2.36 \n    2.30 \n    2.25 \n    2.22 \n    2.18 \n    2.15 \n    2.13 \n    2.11 \n    2.09 \n    2.07 \n    2.05 \n    2.04 \n    2.03 \n    2.01 \n    2.00 \n  \n  \n    25 \n    4.24 \n    3.39 \n    2.99 \n    2.76 \n    2.60 \n    2.49 \n    2.40 \n    2.34 \n    2.28 \n    2.24 \n    2.20 \n    2.16 \n    2.14 \n    2.11 \n    2.09 \n    2.07 \n    2.05 \n    2.04 \n    2.02 \n    2.01 \n    2.00 \n    1.98 \n  \n  \n    26 \n    4.23 \n    3.37 \n    2.98 \n    2.74 \n    2.59 \n    2.47 \n    2.39 \n    2.32 \n    2.27 \n    2.22 \n    2.18 \n    2.15 \n    2.12 \n    2.09 \n    2.07 \n    2.05 \n    2.03 \n    2.02 \n    2.00 \n    1.99 \n    1.98 \n    1.97 \n  \n  \n    27 \n    4.21 \n    3.35 \n    2.96 \n    2.73 \n    2.57 \n    2.46 \n    2.37 \n    2.31 \n    2.25 \n    2.20 \n    2.17 \n    2.13 \n    2.10 \n    2.08 \n    2.06 \n    2.04 \n    2.02 \n    2.00 \n    1.99 \n    1.97 \n    1.96 \n    1.95 \n  \n  \n    28 \n    4.20 \n    3.34 \n    2.95 \n    2.71 \n    2.56 \n    2.45 \n    2.36 \n    2.29 \n    2.24 \n    2.19 \n    2.15 \n    2.12 \n    2.09 \n    2.06 \n    2.04 \n    2.02 \n    2.00 \n    1.99 \n    1.97 \n    1.96 \n    1.95 \n    1.93 \n  \n  \n    29 \n    4.18 \n    3.33 \n    2.93 \n    2.70 \n    2.55 \n    2.43 \n    2.35 \n    2.28 \n    2.22 \n    2.18 \n    2.14 \n    2.10 \n    2.08 \n    2.05 \n    2.03 \n    2.01 \n    1.99 \n    1.97 \n    1.96 \n    1.94 \n    1.93 \n    1.92 \n  \n  \n    30 \n    4.17 \n    3.32 \n    2.92 \n    2.69 \n    2.53 \n    2.42 \n    2.33 \n    2.27 \n    2.21 \n    2.16 \n    2.13 \n    2.09 \n    2.06 \n    2.04 \n    2.01 \n    1.99 \n    1.98 \n    1.96 \n    1.95 \n    1.93 \n    1.92 \n    1.91 \n  \n  \n    35 \n    4.12 \n    3.27 \n    2.87 \n    2.64 \n    2.49 \n    2.37 \n    2.29 \n    2.22 \n    2.16 \n    2.11 \n    2.07 \n    2.04 \n    2.01 \n    1.99 \n    1.96 \n    1.94 \n    1.92 \n    1.91 \n    1.89 \n    1.88 \n    1.87 \n    1.85 \n  \n  \n    40 \n    4.08 \n    3.23 \n    2.84 \n    2.61 \n    2.45 \n    2.34 \n    2.25 \n    2.18 \n    2.12 \n    2.08 \n    2.04 \n    2.00 \n    1.97 \n    1.95 \n    1.92 \n    1.90 \n    1.89 \n    1.87 \n    1.85 \n    1.84 \n    1.83 \n    1.81 \n  \n  \n    45 \n    4.06 \n    3.20 \n    2.81 \n    2.58 \n    2.42 \n    2.31 \n    2.22 \n    2.15 \n    2.10 \n    2.05 \n    2.01 \n    1.97 \n    1.94 \n    1.92 \n    1.89 \n    1.87 \n    1.86 \n    1.84 \n    1.82 \n    1.81 \n    1.80 \n    1.78 \n  \n  \n    50 \n    4.03 \n    3.18 \n    2.79 \n    2.56 \n    2.40 \n    2.29 \n    2.20 \n    2.13 \n    2.07 \n    2.03 \n    1.99 \n    1.95 \n    1.92 \n    1.89 \n    1.87 \n    1.85 \n    1.83 \n    1.81 \n    1.80 \n    1.78 \n    1.77 \n    1.76 \n  \n  \n    60 \n    4.00 \n    3.15 \n    2.76 \n    2.53 \n    2.37 \n    2.25 \n    2.17 \n    2.10 \n    2.04 \n    1.99 \n    1.95 \n    1.92 \n    1.89 \n    1.86 \n    1.84 \n    1.82 \n    1.80 \n    1.78 \n    1.76 \n    1.75 \n    1.73 \n    1.72 \n  \n  \n    75 \n    3.97 \n    3.12 \n    2.73 \n    2.49 \n    2.34 \n    2.22 \n    2.13 \n    2.06 \n    2.01 \n    1.96 \n    1.92 \n    1.88 \n    1.85 \n    1.83 \n    1.80 \n    1.78 \n    1.76 \n    1.74 \n    1.73 \n    1.71 \n    1.70 \n    1.69 \n  \n  \n    100 \n    3.94 \n    3.09 \n    2.70 \n    2.46 \n    2.31 \n    2.19 \n    2.10 \n    2.03 \n    1.97 \n    1.93 \n    1.89 \n    1.85 \n    1.82 \n    1.79 \n    1.77 \n    1.75 \n    1.73 \n    1.71 \n    1.69 \n    1.68 \n    1.66 \n    1.65 \n  \n  \n    120 \n    3.92 \n    3.07 \n    2.68 \n    2.45 \n    2.29 \n    2.18 \n    2.09 \n    2.02 \n    1.96 \n    1.91 \n    1.87 \n    1.83 \n    1.80 \n    1.78 \n    1.75 \n    1.73 \n    1.71 \n    1.69 \n    1.67 \n    1.66 \n    1.64 \n    1.63 \n  \n  \n    140 \n    3.91 \n    3.06 \n    2.67 \n    2.44 \n    2.28 \n    2.16 \n    2.08 \n    2.01 \n    1.95 \n    1.90 \n    1.86 \n    1.82 \n    1.79 \n    1.76 \n    1.74 \n    1.72 \n    1.70 \n    1.68 \n    1.66 \n    1.65 \n    1.63 \n    1.62 \n  \n  \n    180 \n    3.89 \n    3.05 \n    2.65 \n    2.42 \n    2.26 \n    2.15 \n    2.06 \n    1.99 \n    1.93 \n    1.88 \n    1.84 \n    1.81 \n    1.77 \n    1.75 \n    1.72 \n    1.70 \n    1.68 \n    1.66 \n    1.64 \n    1.63 \n    1.61 \n    1.60 \n  \n  \n    250 \n    3.88 \n    3.03 \n    2.64 \n    2.41 \n    2.25 \n    2.13 \n    2.05 \n    1.98 \n    1.92 \n    1.87 \n    1.83 \n    1.79 \n    1.76 \n    1.73 \n    1.71 \n    1.68 \n    1.66 \n    1.65 \n    1.63 \n    1.61 \n    1.60 \n    1.58 \n  \n  \n    400 \n    3.86 \n    3.02 \n    2.63 \n    2.39 \n    2.24 \n    2.12 \n    2.03 \n    1.96 \n    1.90 \n    1.85 \n    1.81 \n    1.78 \n    1.74 \n    1.72 \n    1.69 \n    1.67 \n    1.65 \n    1.63 \n    1.61 \n    1.60 \n    1.58 \n    1.57 \n  \n  \n    1000 \n    3.85 \n    3.00 \n    2.61 \n    2.38 \n    2.22 \n    2.11 \n    2.02 \n    1.95 \n    1.89 \n    1.84 \n    1.80 \n    1.76 \n    1.73 \n    1.70 \n    1.68 \n    1.65 \n    1.63 \n    1.61 \n    1.60 \n    1.58 \n    1.57 \n    1.55 \n  \n\n\n\n\n\n\n\n\n\n\n\n  \n\nKolumnerna är frihetsgraderna i täljaren.\nRaderna är frihetsgraderna i nämnaren.\n\n\n\n\n \n\n\nFrihetsgrader i täljaren\n\n  \n      \n     1 \n     2 \n     3 \n     4 \n     5 \n     6 \n     7 \n     8 \n     9 \n    10 \n    11 \n    12 \n    13 \n    14 \n    15 \n    16 \n    17 \n    18 \n    19 \n    20 \n    21 \n    22 \n  \n \n\n  \n    1 \n    39.86 \n    49.50 \n    53.59 \n    55.83 \n    57.24 \n    58.20 \n    58.91 \n    59.44 \n    59.86 \n    60.19 \n    60.47 \n    60.71 \n    60.90 \n    61.07 \n    61.22 \n    61.35 \n    61.46 \n    61.57 \n    61.66 \n    61.74 \n    61.81 \n    61.88 \n  \n  \n    2 \n    8.53 \n    9.00 \n    9.16 \n    9.24 \n    9.29 \n    9.33 \n    9.35 \n    9.37 \n    9.38 \n    9.39 \n    9.40 \n    9.41 \n    9.41 \n    9.42 \n    9.42 \n    9.43 \n    9.43 \n    9.44 \n    9.44 \n    9.44 \n    9.44 \n    9.45 \n  \n  \n    3 \n    5.54 \n    5.46 \n    5.39 \n    5.34 \n    5.31 \n    5.28 \n    5.27 \n    5.25 \n    5.24 \n    5.23 \n    5.22 \n    5.22 \n    5.21 \n    5.20 \n    5.20 \n    5.20 \n    5.19 \n    5.19 \n    5.19 \n    5.18 \n    5.18 \n    5.18 \n  \n  \n    4 \n    4.54 \n    4.32 \n    4.19 \n    4.11 \n    4.05 \n    4.01 \n    3.98 \n    3.95 \n    3.94 \n    3.92 \n    3.91 \n    3.90 \n    3.89 \n    3.88 \n    3.87 \n    3.86 \n    3.86 \n    3.85 \n    3.85 \n    3.84 \n    3.84 \n    3.84 \n  \n  \n    5 \n    4.06 \n    3.78 \n    3.62 \n    3.52 \n    3.45 \n    3.40 \n    3.37 \n    3.34 \n    3.32 \n    3.30 \n    3.28 \n    3.27 \n    3.26 \n    3.25 \n    3.24 \n    3.23 \n    3.22 \n    3.22 \n    3.21 \n    3.21 \n    3.20 \n    3.20 \n  \n  \n    6 \n    3.78 \n    3.46 \n    3.29 \n    3.18 \n    3.11 \n    3.05 \n    3.01 \n    2.98 \n    2.96 \n    2.94 \n    2.92 \n    2.90 \n    2.89 \n    2.88 \n    2.87 \n    2.86 \n    2.85 \n    2.85 \n    2.84 \n    2.84 \n    2.83 \n    2.83 \n  \n  \n    7 \n    3.59 \n    3.26 \n    3.07 \n    2.96 \n    2.88 \n    2.83 \n    2.78 \n    2.75 \n    2.72 \n    2.70 \n    2.68 \n    2.67 \n    2.65 \n    2.64 \n    2.63 \n    2.62 \n    2.61 \n    2.61 \n    2.60 \n    2.59 \n    2.59 \n    2.58 \n  \n  \n    8 \n    3.46 \n    3.11 \n    2.92 \n    2.81 \n    2.73 \n    2.67 \n    2.62 \n    2.59 \n    2.56 \n    2.54 \n    2.52 \n    2.50 \n    2.49 \n    2.48 \n    2.46 \n    2.45 \n    2.45 \n    2.44 \n    2.43 \n    2.42 \n    2.42 \n    2.41 \n  \n  \n    9 \n    3.36 \n    3.01 \n    2.81 \n    2.69 \n    2.61 \n    2.55 \n    2.51 \n    2.47 \n    2.44 \n    2.42 \n    2.40 \n    2.38 \n    2.36 \n    2.35 \n    2.34 \n    2.33 \n    2.32 \n    2.31 \n    2.30 \n    2.30 \n    2.29 \n    2.29 \n  \n  \n    10 \n    3.29 \n    2.92 \n    2.73 \n    2.61 \n    2.52 \n    2.46 \n    2.41 \n    2.38 \n    2.35 \n    2.32 \n    2.30 \n    2.28 \n    2.27 \n    2.26 \n    2.24 \n    2.23 \n    2.22 \n    2.22 \n    2.21 \n    2.20 \n    2.19 \n    2.19 \n  \n  \n    11 \n    3.23 \n    2.86 \n    2.66 \n    2.54 \n    2.45 \n    2.39 \n    2.34 \n    2.30 \n    2.27 \n    2.25 \n    2.23 \n    2.21 \n    2.19 \n    2.18 \n    2.17 \n    2.16 \n    2.15 \n    2.14 \n    2.13 \n    2.12 \n    2.12 \n    2.11 \n  \n  \n    12 \n    3.18 \n    2.81 \n    2.61 \n    2.48 \n    2.39 \n    2.33 \n    2.28 \n    2.24 \n    2.21 \n    2.19 \n    2.17 \n    2.15 \n    2.13 \n    2.12 \n    2.10 \n    2.09 \n    2.08 \n    2.08 \n    2.07 \n    2.06 \n    2.05 \n    2.05 \n  \n  \n    13 \n    3.14 \n    2.76 \n    2.56 \n    2.43 \n    2.35 \n    2.28 \n    2.23 \n    2.20 \n    2.16 \n    2.14 \n    2.12 \n    2.10 \n    2.08 \n    2.07 \n    2.05 \n    2.04 \n    2.03 \n    2.02 \n    2.01 \n    2.01 \n    2.00 \n    1.99 \n  \n  \n    14 \n    3.10 \n    2.73 \n    2.52 \n    2.39 \n    2.31 \n    2.24 \n    2.19 \n    2.15 \n    2.12 \n    2.10 \n    2.07 \n    2.05 \n    2.04 \n    2.02 \n    2.01 \n    2.00 \n    1.99 \n    1.98 \n    1.97 \n    1.96 \n    1.96 \n    1.95 \n  \n  \n    15 \n    3.07 \n    2.70 \n    2.49 \n    2.36 \n    2.27 \n    2.21 \n    2.16 \n    2.12 \n    2.09 \n    2.06 \n    2.04 \n    2.02 \n    2.00 \n    1.99 \n    1.97 \n    1.96 \n    1.95 \n    1.94 \n    1.93 \n    1.92 \n    1.92 \n    1.91 \n  \n  \n    16 \n    3.05 \n    2.67 \n    2.46 \n    2.33 \n    2.24 \n    2.18 \n    2.13 \n    2.09 \n    2.06 \n    2.03 \n    2.01 \n    1.99 \n    1.97 \n    1.95 \n    1.94 \n    1.93 \n    1.92 \n    1.91 \n    1.90 \n    1.89 \n    1.88 \n    1.88 \n  \n  \n    17 \n    3.03 \n    2.64 \n    2.44 \n    2.31 \n    2.22 \n    2.15 \n    2.10 \n    2.06 \n    2.03 \n    2.00 \n    1.98 \n    1.96 \n    1.94 \n    1.93 \n    1.91 \n    1.90 \n    1.89 \n    1.88 \n    1.87 \n    1.86 \n    1.86 \n    1.85 \n  \n  \n    18 \n    3.01 \n    2.62 \n    2.42 \n    2.29 \n    2.20 \n    2.13 \n    2.08 \n    2.04 \n    2.00 \n    1.98 \n    1.95 \n    1.93 \n    1.92 \n    1.90 \n    1.89 \n    1.87 \n    1.86 \n    1.85 \n    1.84 \n    1.84 \n    1.83 \n    1.82 \n  \n  \n    19 \n    2.99 \n    2.61 \n    2.40 \n    2.27 \n    2.18 \n    2.11 \n    2.06 \n    2.02 \n    1.98 \n    1.96 \n    1.93 \n    1.91 \n    1.89 \n    1.88 \n    1.86 \n    1.85 \n    1.84 \n    1.83 \n    1.82 \n    1.81 \n    1.81 \n    1.80 \n  \n  \n    20 \n    2.97 \n    2.59 \n    2.38 \n    2.25 \n    2.16 \n    2.09 \n    2.04 \n    2.00 \n    1.96 \n    1.94 \n    1.91 \n    1.89 \n    1.87 \n    1.86 \n    1.84 \n    1.83 \n    1.82 \n    1.81 \n    1.80 \n    1.79 \n    1.79 \n    1.78 \n  \n  \n    21 \n    2.96 \n    2.57 \n    2.36 \n    2.23 \n    2.14 \n    2.08 \n    2.02 \n    1.98 \n    1.95 \n    1.92 \n    1.90 \n    1.87 \n    1.86 \n    1.84 \n    1.83 \n    1.81 \n    1.80 \n    1.79 \n    1.78 \n    1.78 \n    1.77 \n    1.76 \n  \n  \n    22 \n    2.95 \n    2.56 \n    2.35 \n    2.22 \n    2.13 \n    2.06 \n    2.01 \n    1.97 \n    1.93 \n    1.90 \n    1.88 \n    1.86 \n    1.84 \n    1.83 \n    1.81 \n    1.80 \n    1.79 \n    1.78 \n    1.77 \n    1.76 \n    1.75 \n    1.74 \n  \n  \n    23 \n    2.94 \n    2.55 \n    2.34 \n    2.21 \n    2.11 \n    2.05 \n    1.99 \n    1.95 \n    1.92 \n    1.89 \n    1.87 \n    1.84 \n    1.83 \n    1.81 \n    1.80 \n    1.78 \n    1.77 \n    1.76 \n    1.75 \n    1.74 \n    1.74 \n    1.73 \n  \n  \n    24 \n    2.93 \n    2.54 \n    2.33 \n    2.19 \n    2.10 \n    2.04 \n    1.98 \n    1.94 \n    1.91 \n    1.88 \n    1.85 \n    1.83 \n    1.81 \n    1.80 \n    1.78 \n    1.77 \n    1.76 \n    1.75 \n    1.74 \n    1.73 \n    1.72 \n    1.71 \n  \n  \n    25 \n    2.92 \n    2.53 \n    2.32 \n    2.18 \n    2.09 \n    2.02 \n    1.97 \n    1.93 \n    1.89 \n    1.87 \n    1.84 \n    1.82 \n    1.80 \n    1.79 \n    1.77 \n    1.76 \n    1.75 \n    1.74 \n    1.73 \n    1.72 \n    1.71 \n    1.70 \n  \n  \n    26 \n    2.91 \n    2.52 \n    2.31 \n    2.17 \n    2.08 \n    2.01 \n    1.96 \n    1.92 \n    1.88 \n    1.86 \n    1.83 \n    1.81 \n    1.79 \n    1.77 \n    1.76 \n    1.75 \n    1.73 \n    1.72 \n    1.71 \n    1.71 \n    1.70 \n    1.69 \n  \n  \n    27 \n    2.90 \n    2.51 \n    2.30 \n    2.17 \n    2.07 \n    2.00 \n    1.95 \n    1.91 \n    1.87 \n    1.85 \n    1.82 \n    1.80 \n    1.78 \n    1.76 \n    1.75 \n    1.74 \n    1.72 \n    1.71 \n    1.70 \n    1.70 \n    1.69 \n    1.68 \n  \n  \n    28 \n    2.89 \n    2.50 \n    2.29 \n    2.16 \n    2.06 \n    2.00 \n    1.94 \n    1.90 \n    1.87 \n    1.84 \n    1.81 \n    1.79 \n    1.77 \n    1.75 \n    1.74 \n    1.73 \n    1.71 \n    1.70 \n    1.69 \n    1.69 \n    1.68 \n    1.67 \n  \n  \n    29 \n    2.89 \n    2.50 \n    2.28 \n    2.15 \n    2.06 \n    1.99 \n    1.93 \n    1.89 \n    1.86 \n    1.83 \n    1.80 \n    1.78 \n    1.76 \n    1.75 \n    1.73 \n    1.72 \n    1.71 \n    1.69 \n    1.68 \n    1.68 \n    1.67 \n    1.66 \n  \n  \n    30 \n    2.88 \n    2.49 \n    2.28 \n    2.14 \n    2.05 \n    1.98 \n    1.93 \n    1.88 \n    1.85 \n    1.82 \n    1.79 \n    1.77 \n    1.75 \n    1.74 \n    1.72 \n    1.71 \n    1.70 \n    1.69 \n    1.68 \n    1.67 \n    1.66 \n    1.65 \n  \n  \n    35 \n    2.85 \n    2.46 \n    2.25 \n    2.11 \n    2.02 \n    1.95 \n    1.90 \n    1.85 \n    1.82 \n    1.79 \n    1.76 \n    1.74 \n    1.72 \n    1.70 \n    1.69 \n    1.67 \n    1.66 \n    1.65 \n    1.64 \n    1.63 \n    1.62 \n    1.62 \n  \n  \n    40 \n    2.84 \n    2.44 \n    2.23 \n    2.09 \n    2.00 \n    1.93 \n    1.87 \n    1.83 \n    1.79 \n    1.76 \n    1.74 \n    1.71 \n    1.70 \n    1.68 \n    1.66 \n    1.65 \n    1.64 \n    1.62 \n    1.61 \n    1.61 \n    1.60 \n    1.59 \n  \n  \n    45 \n    2.82 \n    2.42 \n    2.21 \n    2.07 \n    1.98 \n    1.91 \n    1.85 \n    1.81 \n    1.77 \n    1.74 \n    1.72 \n    1.70 \n    1.68 \n    1.66 \n    1.64 \n    1.63 \n    1.62 \n    1.60 \n    1.59 \n    1.58 \n    1.58 \n    1.57 \n  \n  \n    50 \n    2.81 \n    2.41 \n    2.20 \n    2.06 \n    1.97 \n    1.90 \n    1.84 \n    1.80 \n    1.76 \n    1.73 \n    1.70 \n    1.68 \n    1.66 \n    1.64 \n    1.63 \n    1.61 \n    1.60 \n    1.59 \n    1.58 \n    1.57 \n    1.56 \n    1.55 \n  \n  \n    60 \n    2.79 \n    2.39 \n    2.18 \n    2.04 \n    1.95 \n    1.87 \n    1.82 \n    1.77 \n    1.74 \n    1.71 \n    1.68 \n    1.66 \n    1.64 \n    1.62 \n    1.60 \n    1.59 \n    1.58 \n    1.56 \n    1.55 \n    1.54 \n    1.53 \n    1.53 \n  \n  \n    75 \n    2.77 \n    2.37 \n    2.16 \n    2.02 \n    1.93 \n    1.85 \n    1.80 \n    1.75 \n    1.72 \n    1.69 \n    1.66 \n    1.63 \n    1.61 \n    1.60 \n    1.58 \n    1.57 \n    1.55 \n    1.54 \n    1.53 \n    1.52 \n    1.51 \n    1.50 \n  \n  \n    100 \n    2.76 \n    2.36 \n    2.14 \n    2.00 \n    1.91 \n    1.83 \n    1.78 \n    1.73 \n    1.69 \n    1.66 \n    1.64 \n    1.61 \n    1.59 \n    1.57 \n    1.56 \n    1.54 \n    1.53 \n    1.52 \n    1.50 \n    1.49 \n    1.48 \n    1.48 \n  \n  \n    120 \n    2.75 \n    2.35 \n    2.13 \n    1.99 \n    1.90 \n    1.82 \n    1.77 \n    1.72 \n    1.68 \n    1.65 \n    1.63 \n    1.60 \n    1.58 \n    1.56 \n    1.55 \n    1.53 \n    1.52 \n    1.50 \n    1.49 \n    1.48 \n    1.47 \n    1.46 \n  \n  \n    140 \n    2.74 \n    2.34 \n    2.12 \n    1.99 \n    1.89 \n    1.82 \n    1.76 \n    1.71 \n    1.68 \n    1.64 \n    1.62 \n    1.59 \n    1.57 \n    1.55 \n    1.54 \n    1.52 \n    1.51 \n    1.50 \n    1.48 \n    1.47 \n    1.46 \n    1.45 \n  \n  \n    180 \n    2.73 \n    2.33 \n    2.11 \n    1.98 \n    1.88 \n    1.81 \n    1.75 \n    1.70 \n    1.67 \n    1.63 \n    1.61 \n    1.58 \n    1.56 \n    1.54 \n    1.53 \n    1.51 \n    1.50 \n    1.48 \n    1.47 \n    1.46 \n    1.45 \n    1.44 \n  \n  \n    250 \n    2.73 \n    2.32 \n    2.11 \n    1.97 \n    1.87 \n    1.80 \n    1.74 \n    1.69 \n    1.66 \n    1.62 \n    1.60 \n    1.57 \n    1.55 \n    1.53 \n    1.51 \n    1.50 \n    1.49 \n    1.47 \n    1.46 \n    1.45 \n    1.44 \n    1.43 \n  \n  \n    400 \n    2.72 \n    2.32 \n    2.10 \n    1.96 \n    1.86 \n    1.79 \n    1.73 \n    1.69 \n    1.65 \n    1.61 \n    1.59 \n    1.56 \n    1.54 \n    1.52 \n    1.50 \n    1.49 \n    1.47 \n    1.46 \n    1.45 \n    1.44 \n    1.43 \n    1.42 \n  \n  \n    1000 \n    2.71 \n    2.31 \n    2.09 \n    1.95 \n    1.85 \n    1.78 \n    1.72 \n    1.68 \n    1.64 \n    1.61 \n    1.58 \n    1.55 \n    1.53 \n    1.51 \n    1.49 \n    1.48 \n    1.46 \n    1.45 \n    1.44 \n    1.43 \n    1.42 \n    1.41"
  },
  {
    "objectID": "R/TidyverseSyntax.html",
    "href": "R/TidyverseSyntax.html",
    "title": "Tidyverse syntax",
    "section": "",
    "text": "Den här sidan samlar lite kommandon i den s k tidyverse  dialekten av R."
  },
  {
    "objectID": "R/TidyverseSyntax.html#introduktion",
    "href": "R/TidyverseSyntax.html#introduktion",
    "title": "Tidyverse syntax",
    "section": "Introduktion",
    "text": "Introduktion\n\n\n\nTidyverse är en samling R-paket som delar på samma underliggande filosofi. När man väl lärt sig Tidyverse-filosofin, är paketen väldigt kraftfulla. Men eftersom det tar sin tid att lära sig Tidyverse så använder vi inte dessa paket på den här grundkursen. För att stilla nyfikenheten bland programmeringintresserade studenter kommer vi då och då länka till motsvarande kod i Tidyverse genom att visa den här ikonen i marginalen:\n\n\n\n\n\nKlickar man på den ikonen får man se motsvarande kod från ett eller flera av de olika Tidyverse-paketen, t ex\n\n\n\n\n\nSpeciellt värt att notera bland dessa paket är ggplot2 som, trots sitt knepiga namn, är ett mycket användbart paket för diagram och visualisering. Se ggplot2 cheat sheet för kommandon.\nDen s k pipe-operatorn %>% gör att Tidyverse-kod byggs upp på annats sätt än standard R. Pipe-operatorn skickar vidare en beräkning eller resultat till funktionen till höger i uttrycket. Ett exempel förklarar det bäst:\n\nsuppressMessages(library(tidyverse))\ntitanic %>% group_by(Survived)  %>% tally()\n\n# A tibble: 2 × 2\n  Survived     n\n  <chr>    <int>\n1 Alive      712\n2 Dead      1496\n\n\ndär datamaterialet (dataframe) titanic skickas in i funktionen group_by() som grupperar data efter variablen Survived. Denna gruppering skickas sen vidare till funktioen tally() som gör sammanfattningen till en tabell."
  },
  {
    "objectID": "R/TidyverseSyntax.html#scatter-plot",
    "href": "R/TidyverseSyntax.html#scatter-plot",
    "title": "Tidyverse syntax",
    "section": "Scatter plot",
    "text": "Scatter plot\n\nlibrary(ggplot2)\nggplot(data = mtcars, aes(x = hp, y = mpg)) +\n  geom_point() + \n  ggtitle(\"Cars fuel usage\")"
  },
  {
    "objectID": "R/TidyverseSyntax.html#tabeller",
    "href": "R/TidyverseSyntax.html#tabeller",
    "title": "Tidyverse syntax",
    "section": "Tabeller",
    "text": "Tabeller\n\nsuppressMessages(library(tidyverse))\ntitanic %>% dplyr::group_by(Survived) %>% tally()\n\n# A tibble: 2 × 2\n  Survived     n\n  <chr>    <int>\n1 Alive      712\n2 Dead      1496\n\n\neller om man vill också ha proportioner\n\nsuppressMessages(library(tidyverse))\ntitanic %>% \n  dplyr::group_by(Survived)  %>% \n  tally() %>% \n  mutate(freq = prop.table(n))\n\n# A tibble: 2 × 3\n  Survived     n  freq\n  <chr>    <int> <dbl>\n1 Alive      712 0.322\n2 Dead      1496 0.678\n\n\ndär vi skrivit våra pipes %>% enligt tidyverse-konventionen med radbryt mellan en lång serie pipes."
  },
  {
    "objectID": "R/TidyverseSyntax.html#stapeldiagram",
    "href": "R/TidyverseSyntax.html#stapeldiagram",
    "title": "Tidyverse syntax",
    "section": "Stapeldiagram",
    "text": "Stapeldiagram\n\nAntal\n\nlibrary(ggplot2)\ntitanic %>% \n  group_by(Survived)  %>% \n  tally() %>% \n  ggplot(aes(x = Survived, y = n)) +\n  geom_bar(stat = \"identity\") +\n  ylab(\"proportion\")"
  },
  {
    "objectID": "R/BaseRSyntax.html",
    "href": "R/BaseRSyntax.html",
    "title": "Base-R",
    "section": "",
    "text": "Den här sidan samlar lite kommandon i den s k base-R  dialekten av R."
  },
  {
    "objectID": "R/BaseRSyntax.html#scatter-plot",
    "href": "R/BaseRSyntax.html#scatter-plot",
    "title": "Base-R",
    "section": "Scatter plot",
    "text": "Scatter plot\n\nplot(mtcars$hp, mtcars$mpg, xlab = \"hp\", ylab = \"mpg\", main = \"Cars fuel usage\")"
  },
  {
    "objectID": "R/BaseRSyntax.html#tabeller",
    "href": "R/BaseRSyntax.html#tabeller",
    "title": "Base-R",
    "section": "Tabeller",
    "text": "Tabeller\n\n\n\n\ntable(titanic$Survived)\n\n\nAlive  Dead \n  712  1496 \n\n\neller om man vill ha en tabell med andelar\n\nprop.table(table(titanic$Survived))\n\n\n    Alive      Dead \n0.3224638 0.6775362"
  },
  {
    "objectID": "R/BaseRSyntax.html#stapeldiagram",
    "href": "R/BaseRSyntax.html#stapeldiagram",
    "title": "Base-R",
    "section": "Stapeldiagram",
    "text": "Stapeldiagram\n\nbarplot(prop.table(table(titanic$Survived)), ylab = \"proportion\")"
  },
  {
    "objectID": "R/BaseRSyntax.html#histogram",
    "href": "R/BaseRSyntax.html#histogram",
    "title": "Base-R",
    "section": "Histogram",
    "text": "Histogram\n\nhist(titanic$Age)"
  },
  {
    "objectID": "R/Rcommands.html",
    "href": "R/Rcommands.html",
    "title": "R commands for SDA1",
    "section": "",
    "text": "This document gives some useful R commands for the basic stats course SDA1 using the mosaic and ggformula packages using the R formula syntax."
  },
  {
    "objectID": "R/Rcommands.html#credits",
    "href": "R/Rcommands.html#credits",
    "title": "R commands for SDA1",
    "section": "Credits",
    "text": "Credits\nThis document is adapted from Professor Mcnamara’s All the R you need for STAT 220 - formula."
  },
  {
    "objectID": "R/Rcommands.html#loading-packages",
    "href": "R/Rcommands.html#loading-packages",
    "title": "R commands for SDA1",
    "section": "Loading packages",
    "text": "Loading packages\nLoading two packages for formula based basic statistics\n\nlibrary(mosaic)\nlibrary(ggformula)"
  },
  {
    "objectID": "R/Rcommands.html#reading-in-data",
    "href": "R/Rcommands.html#reading-in-data",
    "title": "R commands for SDA1",
    "section": "Reading in data",
    "text": "Reading in data\n\nGSS <- read.csv(\"GSS_clean.csv\")"
  },
  {
    "objectID": "R/Rcommands.html#plotting",
    "href": "R/Rcommands.html#plotting",
    "title": "R commands for SDA1",
    "section": "Plotting",
    "text": "Plotting\n\n# one categorical\ngf_bar(~marital_status, data = GSS)\n\n\n\n# two categorical\ngf_bar(~marital_status, fill = ~born_in_us, data = GSS)\n\n\n\ngf_bar(~marital_status, fill = ~born_in_us, data = GSS, position = \"dodge\")\n\n\n\n# one numeric\ngf_histogram(~highest_year_of_school_completed, data = GSS)\n\nWarning: Removed 3 rows containing non-finite values (`stat_bin()`).\n\n\n\n\ngf_boxplot(~highest_year_of_school_completed, data = GSS)\n\nWarning: Removed 3 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n# one numeric, one categorical\ngf_boxplot(highest_year_of_school_completed ~ labor_force_status, data = GSS)\n\nWarning: Removed 3 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n# two numeric\ngf_point(highest_year_of_school_completed ~ highest_year_school_completed_spouse,\n  data = GSS\n)\n\nWarning: Removed 1361 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "R/Rcommands.html#summary-statistics",
    "href": "R/Rcommands.html#summary-statistics",
    "title": "R commands for SDA1",
    "section": "Summary statistics",
    "text": "Summary statistics\n\n# one categorical\ntally(~marital_status, data = GSS, format = \"proportion\")\n\nmarital_status\n     Divorced       Married Never married     Separated       Widowed \n 0.1716354344  0.4250425894  0.2853492334  0.0319420784  0.0851788756 \n         <NA> \n 0.0008517888 \n\n# two categorical\ntally(~ marital_status | general_happiness, data = GSS, format = \"proportion\")\n\n               general_happiness\nmarital_status  Not too happy Pretty happy   Very happy         <NA>\n  Divorced       0.2500000000 0.1851568477 0.1098430813 0.0000000000\n  Married        0.1815476190 0.3856159143 0.6162624822 0.2500000000\n  Never married  0.4017857143 0.3129303749 0.1768901569 0.5000000000\n  Separated      0.0565476190 0.0306044376 0.0213980029 0.2500000000\n  Widowed        0.1101190476 0.0849273145 0.0741797432 0.0000000000\n  <NA>           0.0000000000 0.0007651109 0.0014265335 0.0000000000\n\n# one numeric\nmean(~highest_year_of_school_completed, data = GSS, na.rm = TRUE)\n\n[1] 13.73177\n\noptions(na.rm = TRUE) # options\nmedian(~highest_year_of_school_completed, data = GSS)\n\n[1] 14\n\nsd(~highest_year_of_school_completed, data = GSS)\n\n[1] 2.974313\n\nrange(~highest_year_of_school_completed, data = GSS)\n\n[1]  0 20\n\nIQR(~highest_year_of_school_completed, data = GSS)\n\n[1] 4\n\nfivenum(~highest_year_of_school_completed, data = GSS)\n\n[1]  0 12 14 16 20\n\nfavstats(~highest_year_of_school_completed, data = GSS) # favorite statistics\n\n min Q1 median Q3 max     mean       sd    n missing\n   0 12     14 16  20 13.73177 2.974313 2345       3\n\ncor(highest_year_of_school_completed ~ highest_year_school_completed_spouse,\n  data = GSS, use = \"complete.obs\"\n) # correlation\n\n[1] 0.5955573"
  },
  {
    "objectID": "R/Rcommands.html#working-with-data",
    "href": "R/Rcommands.html#working-with-data",
    "title": "R commands for SDA1",
    "section": "Working with data",
    "text": "Working with data\n\n# filtering out NA values\nGSS_prop <- filter(\n  GSS,\n  !is.na(should_marijuana_be_made_legal),\n  !is.na(self_emp_or_works_for_somebody)\n)"
  },
  {
    "objectID": "R/Rcommands.html#modeling-and-inference",
    "href": "R/Rcommands.html#modeling-and-inference",
    "title": "R commands for SDA1",
    "section": "Modeling and inference",
    "text": "Modeling and inference\n\n# linear model\nm1 <- lm(highest_year_of_school_completed ~ highest_year_school_completed_spouse,\n  data = GSS\n)\nsummary(m1)\n\n\nCall:\nlm(formula = highest_year_of_school_completed ~ highest_year_school_completed_spouse, \n    data = GSS)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-16.5400  -1.3519   0.0242   1.4600   7.0242 \n\nCoefficients:\n                                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                           5.84740    0.36316   16.10   <2e-16 ***\nhighest_year_school_completed_spouse  0.59403    0.02553   23.27   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.462 on 985 degrees of freedom\n  (1361 observations deleted due to missingness)\nMultiple R-squared:  0.3547,    Adjusted R-squared:  0.354 \nF-statistic: 541.4 on 1 and 985 DF,  p-value: < 2.2e-16\n\nrsquared(m1)\n\n[1] 0.3546884\n\npredict(m1,\n  newdata = data.frame(highest_year_school_completed_spouse = 11),\n  interval = \"confidence\"\n)\n\n       fit      lwr      upr\n1 12.38178 12.17059 12.59297\n\npredict(m1,\n  newdata = data.frame(highest_year_school_completed_spouse = 11),\n  interval = \"prediction\"\n)\n\n       fit      lwr      upr\n1 12.38178 7.546498 17.21706\n\n# bootstrapping\nbootstrap_sample <- do(1) * resample(GSS)\nboot <- do(1000) * mean(~highest_year_of_school_completed, data = resample(GSS))\nconfint(boot)\n\n  name    lower    upper level     method estimate\n1 mean 13.61038 13.84328  0.95 percentile 13.73177\n\n# one proportion\nprop.test(~self_emp_or_works_for_somebody,\n  data = GSS, success = \"Self-employed\", p = 0.1, alternative = \"less\"\n)\n\n\n    1-sample proportions test with continuity correction\n\ndata:  GSS$self_emp_or_works_for_somebody  [with success = Self-employed]\nX-squared = 0.1433, df = 1, p-value = 0.6475\nalternative hypothesis: true p is less than 0.1\n95 percent confidence interval:\n 0.0000000 0.1138167\nsample estimates:\n        p \n0.1026095 \n\n# two proportions\nprop.test(should_marijuana_be_made_legal ~ self_emp_or_works_for_somebody,\n  data = GSS_prop, success = \"Legal\"\n)\n\n\n    2-sample test for equality of proportions with continuity correction\n\ndata:  tally(should_marijuana_be_made_legal ~ self_emp_or_works_for_somebody)\nX-squared = 0.87754, df = 1, p-value = 0.3489\nalternative hypothesis: two.sided\n95 percent confidence interval:\n -0.04100264  0.12791902\nsample estimates:\n   prop 1    prop 2 \n0.6901408 0.6466827 \n\n# one mean\nt.test(~highest_year_of_school_completed, data = GSS, mu = 12, alternative = \"greater\")\n\n\n    One Sample t-test\n\ndata:  highest_year_of_school_completed\nt = 28.195, df = 2344, p-value < 2.2e-16\nalternative hypothesis: true mean is greater than 12\n95 percent confidence interval:\n 13.6307     Inf\nsample estimates:\nmean of x \n 13.73177 \n\n# two means\nt.test(highest_year_of_school_completed ~ born_in_us, data = GSS)\n\n\n    Welch Two Sample t-test\n\ndata:  highest_year_of_school_completed by born_in_us\nt = -4.8468, df = 337.79, p-value = 1.916e-06\nalternative hypothesis: true difference in means between group No and group Yes is not equal to 0\n95 percent confidence interval:\n -1.7012965 -0.7190416\nsample estimates:\n mean in group No mean in group Yes \n         12.67774          13.88791 \n\n# Chi-square\nchisq.test(tally(marital_status ~ general_happiness, data = GSS)) # independence\n\nWarning in chisq.test(tally(marital_status ~ general_happiness, data = GSS)):\nChi-squared approximation may be incorrect\n\n\n\n    Pearson's Chi-squared test\n\ndata:  tally(marital_status ~ general_happiness, data = GSS)\nX-squared = 210.13, df = 15, p-value < 2.2e-16\n\nchisq.test(tally(~general_happiness, data = GSS), p = c(0.14, 0.55, 0.30, 0.01)) # GoF\n\n\n    Chi-squared test for given probabilities\n\ndata:  tally(~general_happiness, data = GSS)\nX-squared = 16.528, df = 3, p-value = 0.0008838"
  },
  {
    "objectID": "R/Rcommands.html#probability",
    "href": "R/Rcommands.html#probability",
    "title": "R commands for SDA1",
    "section": "Probability",
    "text": "Probability\n\npnorm(1.96, lower.tail = FALSE) # normal distribution function\n\n[1] 0.0249979\n\nqnorm(0.25, mean = 100, sd = 5) # normal quantile function\n\n[1] 96.62755"
  },
  {
    "objectID": "R/FormulaSyntax.html",
    "href": "R/FormulaSyntax.html",
    "title": "Formula syntax",
    "section": "",
    "text": "Den här sidan samlar lite kommandon i den s k formula/mosaic  dialekten av R."
  },
  {
    "objectID": "R/FormulaSyntax.html#scatter-plot",
    "href": "R/FormulaSyntax.html#scatter-plot",
    "title": "Formula syntax",
    "section": "Scatter plot",
    "text": "Scatter plot\nEn vanlig scatter plot fås genom:\n\nplot(mpg ~ hp, data = mtcars, main = \"Cars fuel usage\")\n\n\n\n\nMed ggformula paketet kan man använda formel-syntax, men få plottar som liknar Tidyverse:\n\nlibrary(ggformula)\n\n\ngf_point(mpg ~ hp, data = mtcars, title = \"Cars fuel usage\")"
  },
  {
    "objectID": "hidden/stealourcourse.html",
    "href": "hidden/stealourcourse.html",
    "title": "Använd vår kurs - Creative Commons licens",
    "section": "",
    "text": "Vi som utvecklat den här kursen hoppas att andra lärare kan bli inspirerade av den, och vilja använda delar av den själva. Öppet kursmaterial ger också en transparens som hjälper till att hålla kurserna aktuella, korrekta och relevanta.\n\nAllt kursmaterial ligger öppet på GitHub i kursens github repo och kan laddas ner eller klonas. Vi vill inte att kursens material och eventuella förbättringar ska bli inlåsta bakom olika universitets undervisningplattformar. Tanken är istället att materialet förädlas av andra, som i sin tur delar vidare till allmänheten. Kursmaterialet görs därför tillgängligt under Creative Commons licensen CC BY-NC-SA vilket kortfattat innebär att:\n\n\n\n\n\n\n\n\n\n\n\nCC BY-NC-SA licens\n\n\n\nLicensen Creative Commons erkännande, icke kommersiell, dela lika (BY-NC-SA) innebär att du tillåter andra att använda, sprida, göra om, modifiera och bygga vidare, och skapa nya verk utifrån ditt. Så länge de erkänner dig som upphovsman och att de verk som skapas utifrån ditt verk ska licensieras under samma villkor. De nya verk som skapas utifrån ditt verk kommer att ha samma licens.\n\n\n\n\n\n\n\n\nRekommenderad text för att erkänna upphovspersonerna:\n\n\n\nKursen använder material från kursen Statistik och dataanalys I (https://statisticssu.github.io/SDA1/), som utvecklats vid Statistiska institutionen, Stockholms universitet, under Creative Commons licensen CC BY-NC-SA.\n\n\n\n\n\n\n\n\nCaveats\n\n\n\nDen som klonar och använder materialet ansvarar själv för eventuella fel och skador som kan uppstå. Vi som skapat kursen tar inget som helst ansvar för detta.\nMånga av kursens slides innehåller bilder som köps in från bildbanken Flaticon. Det är tillåtet för andra att fritt använda dessa slides i dess nuvarande form, t ex i undervisning, men bilderna får inte användas av andra för skapa nya media, t ex slides. Källfilerna till alla slides finns i kursens github repo, men eftersom bilderna från Flaticon inte finns i github repot kommer alla bilder som länkar till mappen /figs/flaticons/ inte visas (alternativt kommer fel uppstå i komplileringen av slides). Användaren som vill modifiera slides får då alltså ta bort eller byta ut bilderna."
  },
  {
    "objectID": "slides/Slumpvariabler.html#översikt",
    "href": "slides/Slumpvariabler.html#översikt",
    "title": "Statistik och dataanalys I",
    "section": "Översikt",
    "text": "Översikt\n\nSlumpvariabler\nVäntevärde\nVarians"
  },
  {
    "objectID": "slides/Slumpvariabler.html#sannolikhetsfördelningar-för-slumpvariabler",
    "href": "slides/Slumpvariabler.html#sannolikhetsfördelningar-för-slumpvariabler",
    "title": "Statistik och dataanalys I",
    "section": "Sannolikhetsfördelningar för slumpvariabler",
    "text": "Sannolikhetsfördelningar för slumpvariabler\n\n\n\n\n\n\n\n\nStatistik och dataanalys I     ·     Sannolikhetsmodeller och inferens, 7.5 hp"
  },
  {
    "objectID": "slides/Intro.html#översikt",
    "href": "slides/Intro.html#översikt",
    "title": "Statistik och dataanalys I",
    "section": "Översikt",
    "text": "Översikt\n\nIntroduktion till kursen\nMotiverande exempel"
  },
  {
    "objectID": "slides/Intro.html#riksbanken-och-styrräntan",
    "href": "slides/Intro.html#riksbanken-och-styrräntan",
    "title": "Statistik och dataanalys I",
    "section": "Riksbanken och styrräntan",
    "text": "Riksbanken och styrräntan\n\nRiksbankens mål är att hålla inflationen nära 2% per år.\nHur beror inflationen på räntan?\nRiksbankens mål är att hålla inflationen nära 2% per år.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[\ny_{t}=\\alpha+{\\color{orange} {\\phi_{1}y_{t-1}}}+\\varepsilon_{t}+{\\color{blue} {\\theta_{1}\\varepsilon_{t-1}}}\n\\]\n\n\n\nStatistik och dataanalys I     ·     Sannolikhetsmodeller och inferens, 7.5 hp"
  },
  {
    "objectID": "slides/KontinuerligaModeller.html#standardnormalfördelning---tabell",
    "href": "slides/KontinuerligaModeller.html#standardnormalfördelning---tabell",
    "title": "Statistik och Dataanalys I",
    "section": "Standardnormalfördelning - tabell",
    "text": "Standardnormalfördelning - tabell\n\n\n  \n\n\nAndra decimalen i \\(z\\)\n\n \n\n\nCode\nlibrary(dplyr)\nlibrary(kableExtra)\nmaxz = 2.99\nZtable = matrix(pnorm(seq(0, maxz, by = 0.01)), length(seq(0, maxz, by = 0.1)), 10, byrow = T) %>%\n  format(digits = 4) %>%\n  data.frame()\nnames(Ztable) <- as.character(format(seq(0.00, 0.09, by = 0.01), digits = 3))\nrownames(Ztable) <- as.character(format(seq(0.0, maxz, by = 0.1), digits = 2))\n\nZtable %>%\n  kbl(format= \"html\", align=\"r\") %>%\n  kable_classic(full_width = T, html_font = \"helvetica\")\n\n\n\n\n \n  \n      \n    0.00 \n    0.01 \n    0.02 \n    0.03 \n    0.04 \n    0.05 \n    0.06 \n    0.07 \n    0.08 \n    0.09 \n  \n \n\n  \n    0.0 \n    0.5000 \n    0.5040 \n    0.5080 \n    0.5120 \n    0.5160 \n    0.5199 \n    0.5239 \n    0.5279 \n    0.5319 \n    0.5359 \n  \n  \n    0.1 \n    0.5398 \n    0.5438 \n    0.5478 \n    0.5517 \n    0.5557 \n    0.5596 \n    0.5636 \n    0.5675 \n    0.5714 \n    0.5753 \n  \n  \n    0.2 \n    0.5793 \n    0.5832 \n    0.5871 \n    0.5910 \n    0.5948 \n    0.5987 \n    0.6026 \n    0.6064 \n    0.6103 \n    0.6141 \n  \n  \n    0.3 \n    0.6179 \n    0.6217 \n    0.6255 \n    0.6293 \n    0.6331 \n    0.6368 \n    0.6406 \n    0.6443 \n    0.6480 \n    0.6517 \n  \n  \n    0.4 \n    0.6554 \n    0.6591 \n    0.6628 \n    0.6664 \n    0.6700 \n    0.6736 \n    0.6772 \n    0.6808 \n    0.6844 \n    0.6879 \n  \n  \n    0.5 \n    0.6915 \n    0.6950 \n    0.6985 \n    0.7019 \n    0.7054 \n    0.7088 \n    0.7123 \n    0.7157 \n    0.7190 \n    0.7224 \n  \n  \n    0.6 \n    0.7257 \n    0.7291 \n    0.7324 \n    0.7357 \n    0.7389 \n    0.7422 \n    0.7454 \n    0.7486 \n    0.7517 \n    0.7549 \n  \n  \n    0.7 \n    0.7580 \n    0.7611 \n    0.7642 \n    0.7673 \n    0.7704 \n    0.7734 \n    0.7764 \n    0.7794 \n    0.7823 \n    0.7852 \n  \n  \n    0.8 \n    0.7881 \n    0.7910 \n    0.7939 \n    0.7967 \n    0.7995 \n    0.8023 \n    0.8051 \n    0.8078 \n    0.8106 \n    0.8133 \n  \n  \n    0.9 \n    0.8159 \n    0.8186 \n    0.8212 \n    0.8238 \n    0.8264 \n    0.8289 \n    0.8315 \n    0.8340 \n    0.8365 \n    0.8389 \n  \n  \n    1.0 \n    0.8413 \n    0.8438 \n    0.8461 \n    0.8485 \n    0.8508 \n    0.8531 \n    0.8554 \n    0.8577 \n    0.8599 \n    0.8621 \n  \n  \n    1.1 \n    0.8643 \n    0.8665 \n    0.8686 \n    0.8708 \n    0.8729 \n    0.8749 \n    0.8770 \n    0.8790 \n    0.8810 \n    0.8830 \n  \n  \n    1.2 \n    0.8849 \n    0.8869 \n    0.8888 \n    0.8907 \n    0.8925 \n    0.8944 \n    0.8962 \n    0.8980 \n    0.8997 \n    0.9015 \n  \n  \n    1.3 \n    0.9032 \n    0.9049 \n    0.9066 \n    0.9082 \n    0.9099 \n    0.9115 \n    0.9131 \n    0.9147 \n    0.9162 \n    0.9177 \n  \n  \n    1.4 \n    0.9192 \n    0.9207 \n    0.9222 \n    0.9236 \n    0.9251 \n    0.9265 \n    0.9279 \n    0.9292 \n    0.9306 \n    0.9319 \n  \n  \n    1.5 \n    0.9332 \n    0.9345 \n    0.9357 \n    0.9370 \n    0.9382 \n    0.9394 \n    0.9406 \n    0.9418 \n    0.9429 \n    0.9441 \n  \n  \n    1.6 \n    0.9452 \n    0.9463 \n    0.9474 \n    0.9484 \n    0.9495 \n    0.9505 \n    0.9515 \n    0.9525 \n    0.9535 \n    0.9545 \n  \n  \n    1.7 \n    0.9554 \n    0.9564 \n    0.9573 \n    0.9582 \n    0.9591 \n    0.9599 \n    0.9608 \n    0.9616 \n    0.9625 \n    0.9633 \n  \n  \n    1.8 \n    0.9641 \n    0.9649 \n    0.9656 \n    0.9664 \n    0.9671 \n    0.9678 \n    0.9686 \n    0.9693 \n    0.9699 \n    0.9706 \n  \n  \n    1.9 \n    0.9713 \n    0.9719 \n    0.9726 \n    0.9732 \n    0.9738 \n    0.9744 \n    0.9750 \n    0.9756 \n    0.9761 \n    0.9767 \n  \n  \n    2.0 \n    0.9772 \n    0.9778 \n    0.9783 \n    0.9788 \n    0.9793 \n    0.9798 \n    0.9803 \n    0.9808 \n    0.9812 \n    0.9817 \n  \n  \n    2.1 \n    0.9821 \n    0.9826 \n    0.9830 \n    0.9834 \n    0.9838 \n    0.9842 \n    0.9846 \n    0.9850 \n    0.9854 \n    0.9857 \n  \n  \n    2.2 \n    0.9861 \n    0.9864 \n    0.9868 \n    0.9871 \n    0.9875 \n    0.9878 \n    0.9881 \n    0.9884 \n    0.9887 \n    0.9890 \n  \n  \n    2.3 \n    0.9893 \n    0.9896 \n    0.9898 \n    0.9901 \n    0.9904 \n    0.9906 \n    0.9909 \n    0.9911 \n    0.9913 \n    0.9916 \n  \n  \n    2.4 \n    0.9918 \n    0.9920 \n    0.9922 \n    0.9925 \n    0.9927 \n    0.9929 \n    0.9931 \n    0.9932 \n    0.9934 \n    0.9936 \n  \n  \n    2.5 \n    0.9938 \n    0.9940 \n    0.9941 \n    0.9943 \n    0.9945 \n    0.9946 \n    0.9948 \n    0.9949 \n    0.9951 \n    0.9952 \n  \n  \n    2.6 \n    0.9953 \n    0.9955 \n    0.9956 \n    0.9957 \n    0.9959 \n    0.9960 \n    0.9961 \n    0.9962 \n    0.9963 \n    0.9964 \n  \n  \n    2.7 \n    0.9965 \n    0.9966 \n    0.9967 \n    0.9968 \n    0.9969 \n    0.9970 \n    0.9971 \n    0.9972 \n    0.9973 \n    0.9974 \n  \n  \n    2.8 \n    0.9974 \n    0.9975 \n    0.9976 \n    0.9977 \n    0.9977 \n    0.9978 \n    0.9979 \n    0.9979 \n    0.9980 \n    0.9981 \n  \n  \n    2.9 \n    0.9981 \n    0.9982 \n    0.9982 \n    0.9983 \n    0.9984 \n    0.9984 \n    0.9985 \n    0.9985 \n    0.9986 \n    0.9986"
  },
  {
    "objectID": "slides/KontinuerligaModeller.html#student-t-fördelningen",
    "href": "slides/KontinuerligaModeller.html#student-t-fördelningen",
    "title": "Statistik och Dataanalys I",
    "section": "Student-t fördelningen",
    "text": "Student-t fördelningen\n\nSymmetrisk fördelning över \\((-\\infty,\\infty)\\) med tunga svansar.\nTunga svansar = mycket sannolikhetsmassa för extrema observationer = galna observationer kan inträffa."
  },
  {
    "objectID": "slides/KontinuerligaModeller.html#centrala-gränsvärdessatsen",
    "href": "slides/KontinuerligaModeller.html#centrala-gränsvärdessatsen",
    "title": "Statistik och Dataanalys I",
    "section": "Centrala gränsvärdessatsen",
    "text": "Centrala gränsvärdessatsen\n\n\n\n\n\nStatistik och dataanalys I     ·     Sannolikhetsmodeller och inferens, 7.5 hp"
  },
  {
    "objectID": "slides/Sannolikheter.html#översikt",
    "href": "slides/Sannolikheter.html#översikt",
    "title": "Statistik och dataanalys I",
    "section": "Översikt",
    "text": "Översikt\n\nHändelser\nSannolikheter\nSannolikhetsberäkningar"
  },
  {
    "objectID": "slides/Sannolikheter.html#utfallsrum",
    "href": "slides/Sannolikheter.html#utfallsrum",
    "title": "Statistik och dataanalys I",
    "section": "Utfallsrum",
    "text": "Utfallsrum\n\nUtfallsrummet är alla möjliga utfall som kan inträffa.\nKasta en tärning:\n\n\n\n\n\n\n\nKasta två tärningar:"
  },
  {
    "objectID": "slides/Sannolikheter.html#händelse",
    "href": "slides/Sannolikheter.html#händelse",
    "title": "Statistik och dataanalys I",
    "section": "Händelse",
    "text": "Händelse\n\nHändelsen A = få exakt 7 prickar med två tärningar. \\[\nA = \\{(1,6), (2,5),(3,4),(4,3),(5,2),(6,1)\\}\n\\]\nEn händelse är en mängd av elementärhändelser."
  },
  {
    "objectID": "slides/Sannolikheter.html#händelse---samma-antal-prickar",
    "href": "slides/Sannolikheter.html#händelse---samma-antal-prickar",
    "title": "Statistik och dataanalys I",
    "section": "Händelse - samma antal prickar",
    "text": "Händelse - samma antal prickar\n\nHändelsen A = få samma antal prickar på båda tärningarna. \\[\nA = \\{(1,1), (2,2),(3,3),(4,4),(5,5),(6,6)\\}\n\\]"
  },
  {
    "objectID": "slides/Sannolikheter.html#tre-sannolikhetsbegrepp",
    "href": "slides/Sannolikheter.html#tre-sannolikhetsbegrepp",
    "title": "Statistik och dataanalys I",
    "section": "Tre sannolikhetsbegrepp",
    "text": "Tre sannolikhetsbegrepp\n\nVad är sannolikheten att få en 6:a med en tärning?\n\nUtfallsrum: \\(S = \\{1,2,3,4,5,6\\}\\).\nHändelse: \\(A = \\{6\\}\\).\nSannolikhet: \\(P(A)\\). Måste uppfylla: \\(0\\leq P(A) \\leq 1\\).\n\n\n\nLika sannolika händelser. En tärnings fysiska egenskaper → alla sidor är lika sannolika.\n\\[P(A) = 1/6 \\approx 0.1667\\]\nEmpirisk sannolikhet: andelen 6:or om jag kastar tärningen ett “oändligt” antal gånger. \\[P(A) = \\frac{\\text{antal gånger som A inträffar}}{\\text{totalt antal försök}}\\] Den relativa frekvensen stabiliseras om vi kastar tärningen tillräckligt många gånger. Stora talens lag.\n🇺🇸 Stora talens lag = Law of large numbers\n\n\n\nSubjektiva sannolikheter. Min tidigare erfarenhet av tärningskast och min uppfattning om en tärnings symmetri säger mig att min sannolikhet att få en 6:a är \\(1/6 \\approx 0.1667\\). Du kan ha en annan sannolikhet."
  },
  {
    "objectID": "slides/Sannolikheter.html#händelse---abstrakt",
    "href": "slides/Sannolikheter.html#händelse---abstrakt",
    "title": "Statistik och dataanalys I",
    "section": "Händelse - abstrakt",
    "text": "Händelse - abstrakt\n\nHändelsen A = få exakt 7 prickar med två tärningar. \\[\nA = \\{(1,6), (2,5),(3,4),(4,3),(5,2),(6,1)\\}\n\\]"
  },
  {
    "objectID": "slides/Sannolikheter.html#händelse---venn-diagram",
    "href": "slides/Sannolikheter.html#händelse---venn-diagram",
    "title": "Statistik och dataanalys I",
    "section": "Händelse - Venn diagram",
    "text": "Händelse - Venn diagram\n\nPraktiskt att visualisera händelser i ett Venn diagram.\nUtfallsrummet (allt som kan inträffa) kan visas med en rektangel.\nHändelser ritas som cirklar, ellipser eller rektanglar."
  },
  {
    "objectID": "slides/Sannolikheter.html#komplement",
    "href": "slides/Sannolikheter.html#komplement",
    "title": "Statistik och dataanalys I",
    "section": "Komplement",
    "text": "Komplement\n\n\n\nKomplementet till A inträffar när A inte inträffar.  \nVi skriver \\(\\mathbf{A}^c\\) där \\(c\\) står för engelskans complement.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExempel - Tärning\n\n\n\\(\\mathbf{A}\\) = {udda antal prickar på tärning} = {1,3,5}.\n\\(\\mathbf{A}^c\\) = {jämnt antal prickar på tärning} = {2,4,6}.\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nExempel - Inflation\n\n\n\\(\\mathbf{A}\\) = {inflationen nästa månad \\(\\leq 2\\)}.\n\\(\\mathbf{A}^c\\) = {inflationen nästa månad \\(> 2\\)}.\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nExempel - Mjukvarubuggar\n\n\n\\(\\mathbf{A}\\) = {ingen bugg i programvaran}.\n\\(\\mathbf{A}^c\\) = {åtminstone en bugg i programvaran} = {1 bugg, 2 buggar, …}"
  },
  {
    "objectID": "slides/Sannolikheter.html#disjunkta-händelser",
    "href": "slides/Sannolikheter.html#disjunkta-händelser",
    "title": "Statistik och dataanalys I",
    "section": "Disjunkta händelser",
    "text": "Disjunkta händelser\n\nDisjunkta händelser har inga gemensamma element.\nDisjunkta händelser överlappar inte i Venn diagrammet.\n\n\n\n\n\n\n\n\n🇺🇸 Disjunkt = Disjoint"
  },
  {
    "objectID": "slides/Sannolikheter.html#snittet",
    "href": "slides/Sannolikheter.html#snittet",
    "title": "Statistik och dataanalys I",
    "section": "Snittet",
    "text": "Snittet\n\nSnitthändelsen av två händelser A och B är händelsen där både A och B inträffar.\n\n\n\n\n\n\n\n🇺🇸 Snitt = Intersection\nSDM skriver snitthändelsen som \\[\\mathbf{A}\\, and \\, \\mathbf{B}\\]\nSymbolen \\(\\cap\\) är också vanlig för snittet: \\[\\mathbf{A} \\cap \\mathbf{B}\\]\nDisjunkta händelser snitt är den tomma mängden (\\(\\emptyset\\)): \\[\\mathbf{A} \\cap \\mathbf{B} = \\emptyset\\]\n\n\n\n\n\n\n\n\n\nStatistik och dataanalys I     ·     Sannolikhetsmodeller och inferens, 7.5 hp"
  },
  {
    "objectID": "slides/BetingadeSlhBayes.html#översikt",
    "href": "slides/BetingadeSlhBayes.html#översikt",
    "title": "Statistik och dataanalys I",
    "section": "Översikt",
    "text": "Översikt\n\nBetingade sannolikheter\nBayes sats"
  },
  {
    "objectID": "slides/BetingadeSlhBayes.html#bayes-sats",
    "href": "slides/BetingadeSlhBayes.html#bayes-sats",
    "title": "Statistik och dataanalys I",
    "section": "Bayes sats",
    "text": "Bayes sats\n\n\nExempel - Covid. B = Covid. A = test positivt."
  },
  {
    "objectID": "slides/BetingadeSlhBayes.html#bayes-sats-1",
    "href": "slides/BetingadeSlhBayes.html#bayes-sats-1",
    "title": "Statistik och dataanalys I",
    "section": "Bayes sats",
    "text": "Bayes sats\n\n\\[\n    P(B | A) = \\frac{P(A \\cap B)}{P(A)}\n\\]\n\\[\n    P(B | A) = \\frac{P(A | B)P(B)}{P(A)}\n\\]"
  },
  {
    "objectID": "slides/BetingadeSlhBayes.html#bayes-sats-över-en-partition",
    "href": "slides/BetingadeSlhBayes.html#bayes-sats-över-en-partition",
    "title": "Statistik och dataanalys I",
    "section": "Bayes sats över en partition",
    "text": "Bayes sats över en partition\n\n\n\\[\n    P(B_k | A) = \\frac{P(A | B_k)P(B_k)}{P(A)}\n\\]\n\\[\n    P(A) = \\sum_{j=1}^K P(A | B_j)p(B_j)\n\\]\n\\[\n    \\color{#2679b5}{\\boxed{P(B_k | A) = \\frac{P(A | B_k)P(B_k)}{\\sum_{j=1}^K P(A | B_j)p(B_j)}}}\n\\]\n\n\n\n\n\n\n\n\n\n\n\nExempel - Känna igen handskrivna siffor:\n\n\\(A =\\) {svart pixel i mitten}\n\\(B_0=\\) {siffran är en nolla}\n\\(B_1=\\) {siffran är en etta}\n\\(B_2=\\) {siffran är en tvåa} osv\n\n\n\n\n\n\n\n\n\nStatistik och dataanalys I     ·     Sannolikhetsmodeller och inferens, 7.5 hp"
  },
  {
    "objectID": "stealourcourse.html",
    "href": "stealourcourse.html",
    "title": "Använd vår kurs - Creative Commons licens",
    "section": "",
    "text": "Vi som utvecklat den här kursen hoppas att andra lärare kan bli inspirerade av den, och vilja använda delar av den själva. Öppet kursmaterial ger också en transparens som hjälper till att hålla kurserna aktuella, korrekta och relevanta.\n\nAllt kursmaterial ligger öppet på GitHub i kursens github repo och kan laddas ner eller klonas. Vi vill inte att kursens material och eventuella förbättringar ska bli inlåsta bakom olika universitets undervisningplattformar. Tanken är istället att materialet förädlas av andra, som i sin tur delar vidare till allmänheten. Kursmaterialet görs därför tillgängligt under Creative Commons licensen CC BY-NC-SA vilket kortfattat innebär att:\n\n\n\n\n\n\n\n\n\n\n\nCC BY-NC-SA licens\n\n\n\nLicensen Creative Commons erkännande, icke kommersiell, dela lika (BY-NC-SA) innebär att du tillåter andra att använda, sprida, göra om, modifiera och bygga vidare, och skapa nya verk utifrån ditt. Så länge de erkänner dig som upphovsman och att de verk som skapas utifrån ditt verk ska licensieras under samma villkor. De nya verk som skapas utifrån ditt verk kommer att ha samma licens.\n\n\n\n\n\n\n\n\nRekommenderad text för att erkänna upphovspersonerna:\n\n\n\nKursen använder material från kursen Statistik och dataanalys I (https://statisticssu.github.io/SDA1/), som utvecklats vid Statistiska institutionen, Stockholms universitet, under Creative Commons licensen CC BY-NC-SA.\n\n\n\n\n\n\n\n\nCaveats\n\n\n\nDen som klonar och använder materialet ansvarar själv för eventuella fel och skador som kan uppstå. Vi som skapat kursen tar inget som helst ansvar för detta.\nMånga av kursens slides innehåller bilder som köps in från bildbanken Flaticon. Det är tillåtet för andra att fritt använda dessa slides i dess nuvarande form, t ex i undervisning, men bilderna får inte användas av andra för skapa nya media, t ex slides. Källfilerna till alla slides finns i kursens github repo, men eftersom bilderna från Flaticon inte finns i github repot kommer alla bilder som länkar till mappen /figs/flaticons/ inte visas (alternativt kommer fel uppstå i komplileringen av slides). Användaren som vill modifiera slides får då alltså ta bort eller byta ut bilderna."
  },
  {
    "objectID": "Del2.html",
    "href": "Del2.html",
    "title": "Del II - Sannolikhetsmodeller och Inferens, 7.5 hp",
    "section": "",
    "text": "I kursens andra momentet behandlas inledningsvis sannolikheter, slumpvariabler och sannolikhetsfördelningar. En central del i momentet är inferens, dvs. statistiska metoder för att dra slutsatser om olika fenomen från data, bl a samband från regressionsanalys. Kursen avslutas med en introduktion till beslutsfattade under osäkerhet.\n\nFörkortningen SDM står för kursboken Stats: Data and Models 5:e upplagan, global edition.\nUnder vissa föreläsningar länkar vi till Extramaterial. Det är material som inte krävs för att klara kursen, men som den nyfikne kan läsa för att få en djupare förståelse.\n\nFöreläsningar\nFöreläsning 12 - Osäkerhet och Sannolikhet.\nLäs: SDM Kapitel 12 och 13 | Slides\nFöreläsning 13 - Betingade sannolikheter och Bayes sats.\nLäs: SDM Kapitel 13 | Slides\nFöreläsning 14 - Slumpvariabler och deras egenskaper.\nLäs: SDM Kapitel 14 | Slides\nFöreläsning 15 - Diskreta sannolikhetsmodeller.\nLäs: SDM Kapitel 15.1, 15.2, 15.3, 15.6 | Slides\nFöreläsning 16 - Kontinuerliga sannolikhetsmodeller.\nLäs: SDM Kapitel 5.3, 15.7 | Slides\nExtramaterial: Interaktiv notebook - student-t\nFöreläsning 17 - Samplingfördelningar och konfidensintervall för en andel.\nLäs: SDM Kapitel 16 | Slides\nFöreläsning 18 - Konfidensintervall för ett väntevärde. Stora talens lag. Centrala gränsvärdessatsen.\nLäs: SDM Kapitel 17 | Slides\nExtra: Interaktiv notebook - centrala gränsvärdessatsen\nFöreläsning 19 - Hypotestest.\nLäs: SDM Kapitel 18 | Slides\nFöreläsning 20 - Hypotestest och jämföra grupper.\nLäs: SDM Kapitel 19, 20.4, 20.5 | Slides\nFöreläsning 21 - Jämföra grupper och \\(\\chi^2\\)-test.\nLäs: SDM Kapitel 21.1, 21.2 | Slides\nFöreläsning 22 - Inferens i multipel regression.\nLäs: SDM Kapitel 23 | Slides\nVideoföreläsning - Maximum likelihood och Bayesiansk inferens.\nLäs: Kompendium avsnitt X | Slides\nFöreläsning 23 - Optimala beslut under osäkerhet.\nLäs: Slides\nFöreläsning 24 - Sammanfattning.\nLäs: Slides\n\n\nRäkneövningar\nÖvningarna i kursboken Stats: Data and Models (SDM) hänvisas till med kapitelnummer följt av övningsnummer.\nÖvning 7 - Sannolikheter för händelser. Kombinatorik.\nUppgifter: SDM 12-13\nÖvning 8 - Oberoende händelser. Betingning och Bayes sats.\nUppgifter: SDM 13\nÖvning 9 - Slumpvariabler, väntevärde och standardavvikelse.\nUppgifter: SDM 14\nÖvning 10 - Diskreta sannolikhetsfördelningar.\nUppgifter: SDM 15\nÖvning 12 - Kontinerliga sannolikhetsfördelningar.\nUppgifter: SDM 15\nÖvning 13 - Samplingfördelningar och konfidensintervall för en andel.\nUppgifter: SDM 16\nÖvning 14 - Konfidensintervall för ett väntevärde.\nUppgifter: SDM 17\nÖvning 13 - Hypotestest.\nUppgifter: SDM 18\nÖvning 14 - Hypotestest och p-värde.\nUppgifter: SDM 18\nÖvning 13 - Jämföra grupper.\nUppgifter: SDM 20-21.\nÖvning 14 - Inferens för regression.\nUppgifter: SDM 23\n\n\nDatorlaborationer\nDatorlaboration 5 - Simulering från sannolikhetsfördelningar\nUppgifter: Datorlab 5\nDatorlaboration 6 - Samplingfördelningar, standardfel och centrala gränsvärdessatsen.\nUppgifter: Datorlab 6\nDatorlaboration 7 - Konfidensintervall och hypotestest.\nUppgifter: Datorlab 7\nDatorlaboration 8 - Multipel linjär regression\nUppgifter: Datorlab 8"
  },
  {
    "objectID": "interaktiv.html",
    "href": "interaktiv.html",
    "title": "Interaktivt lärande",
    "section": "",
    "text": "Här samlar vi alla interaktiva grafer (widgets) som vi länkar till från slides.\nExtramaterial: till varje interaktiv graf finns en interaktiv/reaktiv notebook med mer information, här finns en lista med alla notebooks. Dessa notebook ingår inte i kursen, men länkas här för den nyfikne studenten som vill läsa lite mer för en djupare förståelse.\n\nDel 1 - Dataanalys och Regression\nFöreläsning 3 - Val av antal bins i histogram:  widget | notebook\n\n\nDel 2 - Sannolikhetsmodeller och Inferens\n Föreläsning 16 - Student-t fördelning:  widget | notebook\nFöreläsning 18 - Stora talens lag:  widget | notebook\nFöreläsning 18 - Centrala gränsvärdessatsen:  widget | notebook"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistik och dataanalys I, 15 hp",
    "section": "",
    "text": "Kursens innehåll\n\nData finns numera överallt i samhället. Kursen Statistik och dataanalys I ger dig grunderna för att förstå och använda data, både som samhällsmedborgare och som avancerad dataanalytiker.\n\nKursen ger dig en översikt av metoder för statistisk dataanalys och dess många tillämpningar. En introduktion till dataanalys följs av praktisk datahantering i det populära statistiska programspråket R. Samband mellan variabler analyseras, och du tränas i hur statistiska modeller kan användas för att förutsäga nya data. Slutsatser från data är alltid osäkra och en viktig del av kursen är därför sannolikhetsberäkningar. Sannolikhetsteorin används sedan i de inferensmetoder som gör det möjligt att dra korrekta slutsatser från data och fatta optimala beslut under osäkerhet.\nDu lär dig att utföra dataanalyser i praktiken, bl a genom datorlaborationer och två inlämningsuppgifter, men kursen ger dig även en kritisk blick på statistik som gör att du kan ifrågasätta, tolka och söka ny information för att bättre svara på olika frågeställningar.\nKursen består av två delar:\n\nDataanalys och regression, 7.5 hp. I det här momentet ingår insamling, bearbetning, visualisering och sammanfattning av data i programspråket R. En stor del av momentet behandlar sambands- och regressionsanalys som utmynnar i metoder för prediktion.\nSannolikhetsmodeller och inferens, 7.5 hp. I kursens andra momentet behandlas sannolikheter, slumpvariabler och sannolikhetsfördelningar. En central del i momentet är inferens, dvs. statistiska metoder för att dra slutsatser om olika fenomen från data. Kursen avslutas med en introduktion till beslutsfattade under osäkerhet.\n\n\n\nKurslitteratur\n\nDe Veaux, R., Velleman, P. och Bock, D. (2021). Stats: Data and Models, 5:e upplagan, Pearson Global Edition, ISBN 9781292362212. Boken förkortas SDM nedan. Boken finns att köpa som fysisk bok på Akademibokhandeln Frescati eller City, eller online på Adlibris och Bokus. En digital version finns att köpa här.\nYtterligare kompletterande material som delas ut under kursens gång.\n\n\n\nKursstruktur\nKursen består av föreläsningar, räkneövningar och datorlaborationer. Se respektive del av kursen för detaljer: Dataanalys och regression, 7.5 hp. och Sannolikhetsmodeller och inferens, 7.5 hp..\n\n\n\nSchema\nKursens schema finns på TimeEdit. Ett tips är att välja Prenumerera i övre högra hörnet på TimeEdit och sen klistra in länken i ditt kalenderprogram på mobilen.\n\n\nFormel- och tabellsamlingar\n\nFormel- och tabellsamling innehåller de flesta av kursens formler och tabeller och kommer att delas ut under salstentamen.\nTabellsamling är en webb-version av tabellerna i Formel- och tabellsamling.\n\n\n\nInteraktivt material\nPå vissa delar av kursen använder vi interaktivt material för att underlätta lärandet. De interaktiva applikationerna kommer vara länkade från föreläsningsslides och under respektive föreläsning. En sida med alla applikationer finns här.\n\n\nLärare\n\n\n\n\nMattias VillaniKursansvarig och FöreläsareProfessor\n\n\n\nMatias QuirozFöreläsareUniversitetslektor\n\n\n\n\n\nMona SfaxiÖvningar, Datorövningar och JourMasterexamen i Statistik\n\n\n\nJon LachmannDatorövningarMasterexamen i Statistik\n\n\n\n\n\nGamla tentor med lösningar\n\n2023-02-10 [Obs! visas inte för studenter!]"
  },
  {
    "objectID": "R.html",
    "href": "R.html",
    "title": "R",
    "section": "",
    "text": "Kursen använder det populära statistiska programmeringsspråket R. Programmet är helt gratis och kan laddas ner på alla datorer."
  },
  {
    "objectID": "R.html#rstudio",
    "href": "R.html#rstudio",
    "title": "R",
    "section": "RStudio",
    "text": "RStudio\nR är lättast att jobba i från programmet RStudio. RStudio är en slags arbetsmiljö byggd kring R. Även RStudio är gratis."
  },
  {
    "objectID": "R.html#ladda-ner-r-och-rstudio",
    "href": "R.html#ladda-ner-r-och-rstudio",
    "title": "R",
    "section": "Ladda ner R och RStudio",
    "text": "Ladda ner R och RStudio\nDu måste först installera R och sen RStudio:\n\nR kan laddas ner här.\nRStudio kan laddas ner här.\n\nDen här youtube videon går igenom alla steg installationen."
  },
  {
    "objectID": "R.html#tre-dialekter-av-r",
    "href": "R.html#tre-dialekter-av-r",
    "title": "R",
    "section": "Tre dialekter av R",
    "text": "Tre dialekter av R\nMan kan dela upp R’s språk i tre slags dialekter, dvs tre olika kommandon (syntax) för att göra ungefär samma sak:\n\nBase-R - (den ursprungliga) med dess s k dollar sign $ syntax\nFormula - syntax som via paketet Mosaic har utvecklats för undervisning i statistik\nTidyverse - en modern syntax utvecklat av personerna bakom RStudio.\n\n\n    \n\n\nI SDA1 kommer vi försöka använda Formula syntax som mycket som möjligt, med inslag av Base-R. Tidyverse-kod kan ofta vara extremt effektiv, men tar för lång tid att lära sig på en grundkurs i statistik. Vi kommer ibland visa hur man gör samma sak i de olika dialekterna, men på ett sätt som inte stör flödet för den student som helst vill hålla sig till ett sätt. Vi använder ikoner i marginalen som man kan klicka på för att se ett kommando i olika dialekter. Se t ex avsnittet om cheatsheets på denna sida för ett exempel (prova att klicka ikonerna i höger-marginalen)."
  },
  {
    "objectID": "R.html#guidertutorials",
    "href": "R.html#guidertutorials",
    "title": "R",
    "section": "Guider/Tutorials",
    "text": "Guider/Tutorials\n\nLadda ner och installera R och RStudio: video\nEn snabbtur i RStudio: video\nEn sammanfattning av R funktioner för SDA1.\nTutorial om hur man läser in data från Excel och text-filer. 🇬🇧\nQuarto för att skriva kompletta rapporter med kod. 🇬🇧\nhtml | pdf | video"
  },
  {
    "objectID": "R.html#cheat-sheets",
    "href": "R.html#cheat-sheets",
    "title": "R",
    "section": "Cheat sheets",
    "text": "Cheat sheets\n\nMosaic-paketet  i R med dess sk formula syntax används mycket under kursen och innehåller grundläggande statistiska metoder och grafik. Detta s k cheat sheet för mosaic sammanfattar de viktigaste metoderna i mosaic paketet. Klicka på ikonerna i marginalen om du är nyfiken på motsvarande cheatsheets för de andra två dialekterna av R. Om du vill jämföra de olika dialekterna sida vid sida kan du titta på R Syntax Comparison cheat sheet.\n\n\n\n  \n\nDenna RStudio cheat sheet är rätt rörig, men kan kanske vara användbar efter att man själv bekantat sig lite med RStudio."
  },
  {
    "objectID": "R.html#datamaterial",
    "href": "R.html#datamaterial",
    "title": "R",
    "section": "Datamaterial",
    "text": "Datamaterial\n\nKursboken Stats: Data and Models kommer med över 500 olika datamaterial som hittas här. Datamaterialen är i ofta i Excel-format, se denna guide om hur man läser in data från Excel i R.\nKursens R-paket sda1 innehåller också några datamaterial som kommer användas under kursen."
  },
  {
    "objectID": "R.html#kursens-r-paket",
    "href": "R.html#kursens-r-paket",
    "title": "R",
    "section": "Kursens R-paket",
    "text": "Kursens R-paket\nKursen har ett eget R-paket sda1 med några hjälpfunktioner och datamaterial som används på kursen.\n\n\n\n\n\n\n\n\nInstallera kurspaketet\n\ninstall.packages(\"remotes\") \ninstall_github(\"StatisticsSU/sda1\") \nlibrary(remotes)\nlibrary(sdakurs)"
  }
]